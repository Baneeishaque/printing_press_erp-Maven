package DSST007_1_CUS13.pll;

import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileWriter;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author praveen
 */
public class Backupdatabase extends javax.swing.JInternalFrame {

    private static Backupdatabase MyInstance;
    
    public Backupdatabase() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        setClosable(true);
        setIconifiable(true);
        setTitle("Admin - > Back Up Database");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/DSST007_1_CUS13/InstabizTrader Logo Final 35x35.png"))); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener()
        {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt)
            {
                formInternalFrameOpened(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt)
            {
                formInternalFrameClosed(evt);
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt)
            {
            }
        });

        jPanel2.setBackground(new java.awt.Color(242, 242, 255));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Admin Password :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(40, 40, 0, 0);
        jPanel2.add(jLabel1, gridBagConstraints);

        jPasswordField1.setText("jPasswordField1");
        jPasswordField1.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(40, 5, 0, 40);
        jPanel2.add(jPasswordField1, gridBagConstraints);

        jButton1.setBackground(new java.awt.Color(185, 197, 31));
        jButton1.setText("Back Up");
        jButton1.setPreferredSize(new java.awt.Dimension(290, 35));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                jButton1KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 40, 40, 40);
        jPanel2.add(jButton1, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setBounds(0, 0, 372, 180);
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
 
    //this.setLocation(218,2);
        
    Dimension desktopSize = NewMDIApplication.desktopbg_jlbl.getSize();
    Dimension jInternalFrameSize = this.getSize();
    this.setLocation((desktopSize.width - jInternalFrameSize.width)/2,(desktopSize.height- jInternalFrameSize.height)/2);

        
    }//GEN-LAST:event_formInternalFrameOpened

    public static Backupdatabase getInstance() // Method
    {
        if (MyInstance == null)
	{
            MyInstance = new Backupdatabase();
	}
        return MyInstance;
    }

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        // TODO add your handling code here:

        MyInstance = null;

    }//GEN-LAST:event_formInternalFrameClosed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            
            
        }
        
    }//GEN-LAST:event_jButton1KeyPressed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        
        try
            {
                if(checkOS().equals("Windows"))
                {

                    if(passwordcheck() == true)
                    {
                        
                        createbackup_WIN();
                        
                    }
                    else
                    {
                        
                        JOptionPane.showMessageDialog(this, "Password Incorrect.","Error", JOptionPane.ERROR_MESSAGE);
                        
                        jPasswordField1.requestFocusInWindow();
                        
                    }
                    
                }
                else
                {

                    JOptionPane.showMessageDialog(this, "Cannot backup. OS not Windows.","Error", JOptionPane.ERROR_MESSAGE);

                }
            }
            catch(Exception e)
            {
                
                JOptionPane.showMessageDialog(null, e);
                
            }
        
    }//GEN-LAST:event_jButton1MouseClicked

    private void createbackup_WIN()
    {
                
        try
        {

            SimpleDateFormat sdf1 = new SimpleDateFormat("dd-MMM-yyyy",Locale.getDefault());

            String filename = "InstabizTrader_DB_Backup_"+sdf1.format(new Date())+".sql";

            File file = new File("C:/InstabizDump");

            if (!file.exists()) 
            {

                if (JOptionPane.showConfirmDialog(this, "The file will be created in c:\\InstabizDump. Do you want to proceed?", "WARNING",JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) 
                {

                    file.mkdir();

                    Process p = Runtime.getRuntime().exec("Elevate cmd /C cd "+getmysqlinstallationpath()+"bin && mysqldump -uroot -pds1414a72c8 instabiztraderv1 --database > c:/InstabizDump/"+filename);

                    int exitCode = p.waitFor();

                    JOptionPane.showMessageDialog(this, "Process Complete. Exit Code: "+exitCode);

                } 

            }
            else
            {

                if (JOptionPane.showConfirmDialog(this, "The file will be created in c:\\InstabizDump. Do you want to proceed?", "WARNING",JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) 
                {

                    Process p = Runtime.getRuntime().exec("Elevate cmd /C cd "+getmysqlinstallationpath()+"bin && mysqldump -uroot -pds1414a72c8 instabiztraderv1 --database > c:/InstabizDump/"+filename);

                    int exitCode = p.waitFor();

                    JOptionPane.showMessageDialog(this, "Process Complete. Exit Code: "+exitCode);

                } 

            }
        }
        catch(Exception e)
        {


            JOptionPane.showMessageDialog(this, e);

        }
        
        
    }
    
    private boolean passwordcheck()
    {
        
        boolean match = false;
        
        try
        {
            
            String password = new String(jPasswordField1.getPassword());
            
            Statement stmt;
            Connection con= DatabaseConnection.createConnection();
            stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT PASSWORD FROM tbl_adminreg WHERE BINARY PASSWORD = '"+password+"' ");
            
            if(rs.first() == true)
            {
                
                match = true;
                
            }
            else
            {
                
                match = false;
                
            }
            
        }
        catch(Exception e)
        {
            
            JOptionPane.showMessageDialog(null, e);
            
        }
        
        return match;
        
        
    }
    
    private String checkOS()
    {
        
        String OS = "";
        
        String OSName = System.getProperty("os.name");
        if(OSName.contains("Wind"))
        {
            
            OS = "Windows";
            
        }
        else
        {
            
            OS = "Not Windows";
            
        }
        
        return OS;
        
    }
        
    private String getmysqlinstallationpath()
    {
        
        String path = "";
        
        try
        {
            
            Statement stmt;
            Connection con= DatabaseConnection.createConnection();
            stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("select @@basedir");
            
            if(rs.next())
            {
                
                path = rs.getString(1);
                
            }
            
        }
        catch(Exception e)
        {
            
            JOptionPane.showMessageDialog(null, e);
            
        }
        
        return path;
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField jPasswordField1;
    // End of variables declaration//GEN-END:variables
}
