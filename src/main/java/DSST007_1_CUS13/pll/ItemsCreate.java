package DSST007_1_CUS13.pll;

import DSST007_1_CUS13.bll.InvoiceItems_BLL;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author praveen
 */
public class ItemsCreate extends javax.swing.JInternalFrame {

    private static ItemsCreate MyInstance;
    
    public ItemsCreate() {
        initComponents();
        
        Dimension desktopSize = NewMDIApplication.desktopbg_jlbl.getSize();
        Dimension jInternalFrameSize = this.getSize();
        this.setLocation((desktopSize.width - jInternalFrameSize.width)/2,(desktopSize.height- jInternalFrameSize.height)/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        item_jcb = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        hsnSac_jcb = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        tax_jcb = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        unit_jcb = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        saveItem_jb = new javax.swing.JButton();
        newData_jb = new javax.swing.JButton();
        closeWindow_jb = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        code_jtf = new javax.swing.JTextField();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        setClosable(true);
        setIconifiable(true);
        setTitle("Create > Items");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/DSST007_1_CUS13/InstabizTrader Logo Final 35x35.png"))); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jPanel1.setBackground(new java.awt.Color(242, 242, 255));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setText("Item Name :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        item_jcb.setEditable(true);
        item_jcb.setPreferredSize(new java.awt.Dimension(250, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        jPanel1.add(item_jcb, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText("HSN/SAC :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel2, gridBagConstraints);

        hsnSac_jcb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Select-", "HSN", "SAC" }));
        hsnSac_jcb.setPreferredSize(new java.awt.Dimension(120, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel1.add(hsnSac_jcb, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setText("Tax :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel3, gridBagConstraints);

        tax_jcb.setEditable(true);
        tax_jcb.setPreferredSize(new java.awt.Dimension(120, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(tax_jcb, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setText("Unit :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 0);
        jPanel1.add(jLabel4, gridBagConstraints);

        unit_jcb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Select-", "kg", "mtr", "sheet" }));
        unit_jcb.setPreferredSize(new java.awt.Dimension(120, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        jPanel1.add(unit_jcb, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jSeparator1, gridBagConstraints);

        jPanel2.setBackground(new java.awt.Color(242, 242, 255));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        saveItem_jb.setBackground(new java.awt.Color(185, 197, 31));
        saveItem_jb.setText("Save");
        saveItem_jb.setPreferredSize(new java.awt.Dimension(100, 27));
        saveItem_jb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveItem_jbActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel2.add(saveItem_jb, gridBagConstraints);

        newData_jb.setBackground(new java.awt.Color(86, 132, 191));
        newData_jb.setText("New");
        newData_jb.setPreferredSize(new java.awt.Dimension(100, 27));
        newData_jb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newData_jbActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel2.add(newData_jb, gridBagConstraints);

        closeWindow_jb.setBackground(new java.awt.Color(86, 132, 191));
        closeWindow_jb.setText("Close");
        closeWindow_jb.setPreferredSize(new java.awt.Dimension(100, 27));
        closeWindow_jb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeWindow_jbActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel2.add(closeWindow_jb, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        jPanel1.add(jPanel2, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel5.setText("%");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(jLabel5, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel6.setText("Code :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel6, gridBagConstraints);

        code_jtf.setPreferredSize(new java.awt.Dimension(150, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel1.add(code_jtf, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setBounds(0, 0, 329, 212);
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        load_item_jcb();
        SearchableCombobox searchableCombobox_1 = new SearchableCombobox(item_jcb);
        ((JTextField)item_jcb.getEditor().getEditorComponent()).addKeyListener(searchableCombobox_1);
        tax_jcb_KeyListener();
        
    }//GEN-LAST:event_formInternalFrameOpened

    private void tax_jcb_KeyListener() {
        ((JTextField)tax_jcb.getEditor().getEditorComponent()).addKeyListener(new KeyListener() {

            @Override
            public void keyTyped(KeyEvent e) {
                //throw new UnsupportedOperationException("Not supported yet.");
                String text = ((JTextField)tax_jcb.getEditor().getEditorComponent()).getText();
                int lastindex = text.lastIndexOf(".");

                char c = e.getKeyChar();

                if (!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || c == KeyEvent.VK_DELETE || e.getKeyChar() == '.')) {
                    //  evt.getKeyChar() == '.' does accept point when jtextfield accepts decimal number
                    e.consume();
                    getToolkit().beep();

                }
                else if (lastindex >= 0 && !Character.isDigit(c)) {
                    e.consume();
                }
            }

            @Override
            public void keyPressed(KeyEvent e) {
                //throw new UnsupportedOperationException("Not supported yet.");	
            }

            @Override
            public void keyReleased(KeyEvent e) {
                //throw new UnsupportedOperationException("Not supported yet.");
            }

        });
    }
    
    private void load_item_jcb() {
        try {
            InvoiceItems_BLL invoiceItems_BLL = new InvoiceItems_BLL();
            List<InvoiceItems_BLL> itemsList = invoiceItems_BLL.getItems();
            
            for (int i = 0; i < itemsList.size(); i++) {
                
                String item = itemsList.get(i).getItemname();
                item_jcb.addItem(item);
            }
            ((JTextField)item_jcb.getEditor().getEditorComponent()).setText("");
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ItemsCreate: "+e);
        }
    }
    
    public static ItemsCreate getInstance() // Method
    {
        if (MyInstance == null)
	{
            MyInstance = new ItemsCreate();
	}
        return MyInstance;
    }

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        // TODO add your handling code here:

        MyInstance = null;

    }//GEN-LAST:event_formInternalFrameClosed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:
        
         MyInstance = null;
        
    }//GEN-LAST:event_formInternalFrameClosing

    private void saveItem_jbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveItem_jbActionPerformed
        // TODO add your handling code here:
        saveItem();

    }//GEN-LAST:event_saveItem_jbActionPerformed

    private void saveItem() {
        
        if(saveItem_jb.isEnabled() == true) {
            if(validationBeforeSave() == true) {
               boolean error = false;
                try {
                    String item = ((JTextField)item_jcb.getEditor().getEditorComponent()).getText();
                    String hsnSac = hsnSac_jcb.getSelectedItem().toString();
                    String tax = ((JTextField)tax_jcb.getEditor().getEditorComponent()).getText();
                    String unit = unit_jcb.getSelectedItem().toString();
                    String process = "INSERT";
                    String userid = "NA";
                    String code = code_jtf.getText();

                    InvoiceItems_BLL invoiceItems_BLL = new InvoiceItems_BLL();
                    invoiceItems_BLL.setItemname(item);
                    invoiceItems_BLL.setHsn_sac(hsnSac);
                    invoiceItems_BLL.setTax(tax);
                    invoiceItems_BLL.setUnit(unit);
                    invoiceItems_BLL.setProcess(process);
                    invoiceItems_BLL.setUserid(userid);
                    invoiceItems_BLL.setCode(code);
                    invoiceItems_BLL.saveItems(invoiceItems_BLL);

                    error = invoiceItems_BLL.getErrorStat();
                }
                catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "ItemsCreate: "+e);
                    error = true;
                }

                if(error == false) {
                    JOptionPane.showMessageDialog(this, "Operation Successful.", "Success", JOptionPane.INFORMATION_MESSAGE);
                    saveItem_jb.setEnabled(false);
                } 
            }
        }
        
    }
    
    private boolean validationBeforeSave() {
        boolean valid = true;
        
        if(((JTextField)item_jcb.getEditor().getEditorComponent()).getText().equals("")) {
            JOptionPane.showMessageDialog(this,"Enter an Item.","Error",JOptionPane.ERROR_MESSAGE);
            valid = false;
        }
        else if(item_jcb.getSelectedIndex() != -1) {
            JOptionPane.showMessageDialog(this,"Item already saved.","Error",JOptionPane.ERROR_MESSAGE);
            valid = false;
        }
        else if(hsnSac_jcb.getSelectedItem().toString().equals("-Select-")) {
            JOptionPane.showMessageDialog(this,"Select HSN/SAC.","Error",JOptionPane.ERROR_MESSAGE);
            valid = false;
        }
        else if(((JTextField)tax_jcb.getEditor().getEditorComponent()).getText().equals("")) {
            JOptionPane.showMessageDialog(this,"Enter Tax.","Error",JOptionPane.ERROR_MESSAGE);
            valid = false;
        }
        else if(unit_jcb.getSelectedItem().toString().equals("-Select-")) {
            JOptionPane.showMessageDialog(this,"Select a Unit.","Error",JOptionPane.ERROR_MESSAGE);
            valid = false;
        }
        
        return valid;
    }
    
    private void newData_jbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newData_jbActionPerformed
        // TODO add your handling code here:
        ((JTextField)item_jcb.getEditor().getEditorComponent()).setText("");
        hsnSac_jcb.setSelectedItem("-Select-");
        ((JTextField)tax_jcb.getEditor().getEditorComponent()).setText("");
        unit_jcb.setSelectedItem("-Select-");
        saveItem_jb.setEnabled(true);
        item_jcb.requestFocusInWindow();
    }//GEN-LAST:event_newData_jbActionPerformed

    private void closeWindow_jbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeWindow_jbActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_closeWindow_jbActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeWindow_jb;
    private javax.swing.JTextField code_jtf;
    private javax.swing.JComboBox<String> hsnSac_jcb;
    private javax.swing.JComboBox<String> item_jcb;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton newData_jb;
    private javax.swing.JButton saveItem_jb;
    private javax.swing.JComboBox<String> tax_jcb;
    private javax.swing.JComboBox<String> unit_jcb;
    // End of variables declaration//GEN-END:variables
}
