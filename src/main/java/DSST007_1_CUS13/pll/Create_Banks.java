/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package DSST007_1_CUS13.pll;

import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author praveen
 */
public class Create_Banks extends javax.swing.JInternalFrame {

    private static Create_Banks instance;
    Create_Banks_bank_list_jt_LSL bank_list_jt_LSL_Obj = new Create_Banks_bank_list_jt_LSL();
    
    public Create_Banks() {
        initComponents();
    }

    public static Create_Banks getInstance()
    {
        
        if (instance == null)
            instance = new Create_Banks();

        return instance;
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        bankname_jcb = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        addline1_jtf = new javax.swing.JTextField();
        addline2_jtf = new javax.swing.JTextField();
        branch_jcb = new javax.swing.JComboBox();
        accno_jtf = new javax.swing.JTextField();
        ifsc_jtf = new javax.swing.JTextField();
        save_jb = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        newdata_jb = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        bank_list_jt = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        bankname2_jb = new javax.swing.JComboBox();
        addline1_2_jtf = new javax.swing.JTextField();
        addline2_2_jtf = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        branch2_jcb = new javax.swing.JComboBox();
        accno2_jtf = new javax.swing.JTextField();
        isfc2_jtf = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        edit_bank_details_jb = new javax.swing.JButton();
        close_jb = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jButton6 = new javax.swing.JButton();
        delete_bank_jb = new javax.swing.JButton();
        update_bank_jb = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        setClosable(true);
        setTitle("Setup -> Banks");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/DSST007_1_CUS13/InstabizTrader Logo Final 35x35.png"))); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener()
        {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt)
            {
                formInternalFrameOpened(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt)
            {
                formInternalFrameClosing(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt)
            {
                formInternalFrameClosed(evt);
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt)
            {
            }
        });

        jPanel1.setBackground(new java.awt.Color(242, 242, 255));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel2.setBackground(new java.awt.Color(242, 242, 255));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setText("Bank Name :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel2.add(jLabel1, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText("Address Line1 :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel2.add(jLabel2, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setText("Address Line2 :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel2.add(jLabel3, gridBagConstraints);

        bankname_jcb.setEditable(true);
        bankname_jcb.setPreferredSize(new java.awt.Dimension(250, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel2.add(bankname_jcb, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setText("Branch :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 2, 0, 0);
        jPanel2.add(jLabel4, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel5.setText("Acc No :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel2.add(jLabel5, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel6.setText("IFSC :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel2.add(jLabel6, gridBagConstraints);

        addline1_jtf.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(addline1_jtf, gridBagConstraints);

        addline2_jtf.setNextFocusableComponent(accno_jtf);
        addline2_jtf.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(addline2_jtf, gridBagConstraints);

        branch_jcb.setEditable(true);
        branch_jcb.setPreferredSize(new java.awt.Dimension(200, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel2.add(branch_jcb, gridBagConstraints);

        accno_jtf.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(accno_jtf, gridBagConstraints);

        ifsc_jtf.setNextFocusableComponent(save_jb);
        ifsc_jtf.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(ifsc_jtf, gridBagConstraints);

        save_jb.setBackground(new java.awt.Color(185, 197, 31));
        save_jb.setText("Save");
        save_jb.setNextFocusableComponent(newdata_jb);
        save_jb.setPreferredSize(new java.awt.Dimension(100, 27));
        save_jb.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                save_jbMouseClicked(evt);
            }
        });
        save_jb.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                save_jbKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel2.add(save_jb, gridBagConstraints);

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel2.add(jSeparator2, gridBagConstraints);

        newdata_jb.setBackground(new java.awt.Color(185, 197, 31));
        newdata_jb.setText("New");
        newdata_jb.setPreferredSize(new java.awt.Dimension(100, 27));
        newdata_jb.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                newdata_jbMouseClicked(evt);
            }
        });
        newdata_jb.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                newdata_jbKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel2.add(newdata_jb, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        jPanel1.add(jPanel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 0, 0);
        jPanel1.add(jSeparator1, gridBagConstraints);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(308, 406));

        bank_list_jt.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        bank_list_jt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "SNo", "Bank", "banks_table_id", "Branch", "Addline1", "Addline2", "AccNo", "IFSC"
            }
        )
        {
            boolean[] canEdit = new boolean []
            {
                false, false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        bank_list_jt.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        bank_list_jt.setFillsViewportHeight(true);
        bank_list_jt.setRowHeight(23);
        bank_list_jt.setSelectionBackground(new java.awt.Color(86, 132, 191));
        bank_list_jt.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                bank_list_jtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                bank_list_jtFocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(bank_list_jt);
        if (bank_list_jt.getColumnModel().getColumnCount() > 0)
        {
            bank_list_jt.getColumnModel().getColumn(0).setMinWidth(50);
            bank_list_jt.getColumnModel().getColumn(0).setPreferredWidth(50);
            bank_list_jt.getColumnModel().getColumn(1).setMinWidth(250);
            bank_list_jt.getColumnModel().getColumn(1).setPreferredWidth(250);
            bank_list_jt.getColumnModel().getColumn(2).setMinWidth(0);
            bank_list_jt.getColumnModel().getColumn(2).setPreferredWidth(0);
            bank_list_jt.getColumnModel().getColumn(2).setMaxWidth(0);
            bank_list_jt.getColumnModel().getColumn(3).setMinWidth(0);
            bank_list_jt.getColumnModel().getColumn(3).setPreferredWidth(0);
            bank_list_jt.getColumnModel().getColumn(3).setMaxWidth(0);
            bank_list_jt.getColumnModel().getColumn(4).setMinWidth(0);
            bank_list_jt.getColumnModel().getColumn(4).setPreferredWidth(0);
            bank_list_jt.getColumnModel().getColumn(4).setMaxWidth(0);
            bank_list_jt.getColumnModel().getColumn(5).setMinWidth(0);
            bank_list_jt.getColumnModel().getColumn(5).setPreferredWidth(0);
            bank_list_jt.getColumnModel().getColumn(5).setMaxWidth(0);
            bank_list_jt.getColumnModel().getColumn(6).setMinWidth(0);
            bank_list_jt.getColumnModel().getColumn(6).setPreferredWidth(0);
            bank_list_jt.getColumnModel().getColumn(6).setMaxWidth(0);
            bank_list_jt.getColumnModel().getColumn(7).setMinWidth(0);
            bank_list_jt.getColumnModel().getColumn(7).setPreferredWidth(0);
            bank_list_jt.getColumnModel().getColumn(7).setMaxWidth(0);
        }

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 5, 0, 0);
        jPanel1.add(jScrollPane1, gridBagConstraints);

        jPanel3.setBackground(new java.awt.Color(242, 242, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Edit", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel7.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel7.setText("Bank Name :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        jPanel3.add(jLabel7, gridBagConstraints);

        jLabel8.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel8.setText("Address Line1 :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        jPanel3.add(jLabel8, gridBagConstraints);

        jLabel9.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel9.setText("Address Line2 :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        jPanel3.add(jLabel9, gridBagConstraints);

        bankname2_jb.setEditable(true);
        bankname2_jb.setPreferredSize(new java.awt.Dimension(200, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        jPanel3.add(bankname2_jb, gridBagConstraints);

        addline1_2_jtf.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel3.add(addline1_2_jtf, gridBagConstraints);

        addline2_2_jtf.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel3.add(addline2_2_jtf, gridBagConstraints);

        jLabel10.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel10.setText("Branch :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        jPanel3.add(jLabel10, gridBagConstraints);

        jLabel11.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel11.setText("Acc No :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        jPanel3.add(jLabel11, gridBagConstraints);

        jLabel12.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel12.setText("IFSC :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        jPanel3.add(jLabel12, gridBagConstraints);

        branch2_jcb.setEditable(true);
        branch2_jcb.setPreferredSize(new java.awt.Dimension(200, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel3.add(branch2_jcb, gridBagConstraints);

        accno2_jtf.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel3.add(accno2_jtf, gridBagConstraints);

        isfc2_jtf.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        jPanel3.add(isfc2_jtf, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 0, 0);
        jPanel1.add(jPanel3, gridBagConstraints);

        jPanel4.setBackground(new java.awt.Color(242, 242, 255));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        edit_bank_details_jb.setBackground(new java.awt.Color(185, 197, 31));
        edit_bank_details_jb.setText("Edit");
        edit_bank_details_jb.setPreferredSize(new java.awt.Dimension(100, 27));
        edit_bank_details_jb.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                edit_bank_details_jbMouseClicked(evt);
            }
        });
        edit_bank_details_jb.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                edit_bank_details_jbKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel4.add(edit_bank_details_jb, gridBagConstraints);

        close_jb.setBackground(new java.awt.Color(86, 132, 191));
        close_jb.setText("Close");
        close_jb.setPreferredSize(new java.awt.Dimension(100, 27));
        close_jb.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                close_jbMouseClicked(evt);
            }
        });
        close_jb.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                close_jbKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel4.add(close_jb, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(15, 0, 10, 0);
        jPanel1.add(jPanel4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jSeparator3, gridBagConstraints);

        jButton6.setBackground(new java.awt.Color(185, 197, 31));
        jButton6.setText("<< Refresh");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                jButton6MouseClicked(evt);
            }
        });
        jButton6.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                jButton6KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 2, 0, 0);
        jPanel1.add(jButton6, gridBagConstraints);

        delete_bank_jb.setBackground(new java.awt.Color(185, 197, 31));
        delete_bank_jb.setText("Delete >>");
        delete_bank_jb.setPreferredSize(new java.awt.Dimension(100, 27));
        delete_bank_jb.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                delete_bank_jbMouseClicked(evt);
            }
        });
        delete_bank_jb.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                delete_bank_jbKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel1.add(delete_bank_jb, gridBagConstraints);

        update_bank_jb.setBackground(new java.awt.Color(185, 197, 31));
        update_bank_jb.setText("Update");
        update_bank_jb.setPreferredSize(new java.awt.Dimension(100, 27));
        update_bank_jb.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                update_bank_jbMouseClicked(evt);
            }
        });
        update_bank_jb.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                update_bank_jbKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel1.add(update_bank_jb, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setBounds(0, 0, 738, 580);
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        // TODO add your handling code here:
        
        instance = null;
        
    }//GEN-LAST:event_formInternalFrameClosed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:
        
        instance = null;
        
    }//GEN-LAST:event_formInternalFrameClosing

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        
        Dimension desktopSize = NewMDIApplication.desktopbg_jlbl.getSize();
        Dimension jInternalFrameSize = this.getSize();
        this.setLocation((desktopSize.width - jInternalFrameSize.width)/2,(desktopSize.height- jInternalFrameSize.height)/2);
        
        //-------------------------------
        
        load_bankname_jcb();
        AutoCompleteDecorator.decorate(bankname_jcb);
        
        load_branch_jcb();
        AutoCompleteDecorator.decorate(branch_jcb);
        
        disable_editable_fields();
        
    }//GEN-LAST:event_formInternalFrameOpened

    void load_bankname_jcb()
    {
        
        Connection con = DatabaseConnection.createConnection();
        PreparedStatement prepstat = null;
        ResultSet rs = null;
        bankname_jcb.removeAllItems();
        bankname2_jb.removeAllItems();
        
        try
        {
            
            String sql_str = "SELECT DISTINCT bank_name FROM banks";
            prepstat = con.prepareStatement(sql_str);
            rs = prepstat.executeQuery();
            
            while(rs.next())
            {
                
                String bankname = rs.getString("bank_name");
                bankname_jcb.addItem(bankname);
                bankname2_jb.addItem(bankname);
                
            }
            
            bankname_jcb.setSelectedItem("");
            bankname2_jb.setSelectedItem("");
            
        }
        catch(Exception e)
        {
           
            JOptionPane.showMessageDialog(null, "load_bankname_jcb() :"+e);
            
        }
        finally
        {
            
            try
            {
                
                if(con != null)
                {
                    
                    con.close();
                    
                }
                if(prepstat != null)
                {
                    
                    prepstat.close();
                    
                }
                if(rs != null)
                {
                    
                    rs.close();
                    
                }
                
            }
            catch(Exception e)
            {
                
                JOptionPane.showMessageDialog(null, "load_bankname_jcb() :"+e);
                
            }
        }
        
        
    }
    
    void load_branch_jcb()
    {
        
        Connection con = DatabaseConnection.createConnection();
        PreparedStatement prepstat = null;
        ResultSet rs = null;
        branch_jcb.removeAllItems();
        branch2_jcb.removeAllItems();
        
        try
        {
            
            String sql_str = "SELECT DISTINCT bank_branch FROM banks";
            prepstat = con.prepareStatement(sql_str);
            rs = prepstat.executeQuery();
            
            while(rs.next())
            {
                
                String branchname = rs.getString("bank_branch");
                branch_jcb.addItem(branchname);
                branch2_jcb.addItem(branchname);
                
            }
            
            branch_jcb.setSelectedItem("");
            branch2_jcb.setSelectedItem("");
            
        }
        catch(Exception e)
        {
           
            JOptionPane.showMessageDialog(null, "load_branch_jcb() :"+e);
            
        }
        finally
        {
            
            try
            {
                
                if(con != null)
                {
                    
                    con.close();
                    
                }
                if(prepstat != null)
                {
                    
                    prepstat.close();
                    
                }
                if(rs != null)
                {
                    
                    rs.close();
                    
                }
                
            }
            catch(Exception e)
            {
                
                JOptionPane.showMessageDialog(null, "load_branch_jcb() :"+e);
                
            }
        }
        
        
    }
    
    void update_list()
    {
        
        Connection con = DatabaseConnection.createConnection();
        PreparedStatement prepstmt = null;
        
        try
        {
            
            DefaultTableModel dtm = (DefaultTableModel)bank_list_jt.getModel();
            dtm.setRowCount(0);
            String[] arr = new String[]{};
            
            String sql_str = "SELECT id,bank_name,bank_branch,addressline1,addressline2,accno,ifsc FROM banks";
            prepstmt = con.prepareStatement(sql_str);
            ResultSet rs = prepstmt.executeQuery();
            
            while(rs.next())
            {
                
                String id = rs.getString("id");
                String bankname = rs.getString("bank_name");
                String bankbranch = rs.getString("bank_branch");
                String addline1 = rs.getString("addressline1");
                String addline2 = rs.getString("addressline2");
                String accno = rs.getString("accno");
                String ifsc = rs.getString("ifsc");
                
                arr = new String[]{Integer.toString(bank_list_jt.getRowCount()+1),bankname,id,bankbranch,addline1,addline2,accno,ifsc};
                dtm.addRow(arr);
                
            }
            
        }
        catch(Exception e)
        {
            
            JOptionPane.showMessageDialog(null, e);
            
        }
        
    }
    
    private void save_jbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_save_jbMouseClicked
        // TODO add your handling code here:
        
        if(validation_on_save() == true)
        {
            
            save_bank();
            
        }
        
    }//GEN-LAST:event_save_jbMouseClicked

    private void jButton6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton6KeyPressed
        // TODO add your handling code here:
        
        
        
    }//GEN-LAST:event_jButton6KeyPressed

    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked
        // TODO add your handling code here:
        
        update_list();
        
    }//GEN-LAST:event_jButton6MouseClicked

    private void save_jbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_save_jbKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            
            if(validation_on_save() == true)
            {

                save_bank();

            }
            
        }
        
    }//GEN-LAST:event_save_jbKeyPressed

    private void bank_list_jtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bank_list_jtFocusGained
        // TODO add your handling code here:
        
        if(bank_list_jt.getSelectedRow() != -1)
        {
            
            bank_list_jt.getSelectionModel().addListSelectionListener(bank_list_jt_LSL_Obj);
            
        }
        
        
    }//GEN-LAST:event_bank_list_jtFocusGained

    private void bank_list_jtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bank_list_jtFocusLost
        // TODO add your handling code here:
        
        bank_list_jt.getSelectionModel().removeListSelectionListener(bank_list_jt_LSL_Obj);
        
    }//GEN-LAST:event_bank_list_jtFocusLost

    private void delete_bank_jbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_delete_bank_jbKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
        
            if(bank_list_jt.getSelectedRow() == -1)
            {

                JOptionPane.showMessageDialog(this, "Select a Bank.","Error",JOptionPane.ERROR_MESSAGE);

            }
            else
            {
                
                 delete_bank();
                
            }
            
        }
        
    }//GEN-LAST:event_delete_bank_jbKeyPressed

    private void newdata_jbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newdata_jbKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            
            bankname_jcb.requestFocusInWindow();
            
        }
        
    }//GEN-LAST:event_newdata_jbKeyPressed

    private void newdata_jbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newdata_jbMouseClicked
        // TODO add your handling code here:
        
         bankname_jcb.requestFocusInWindow();
        
    }//GEN-LAST:event_newdata_jbMouseClicked

    private void delete_bank_jbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_delete_bank_jbMouseClicked
        // TODO add your handling code here:
        
       if(bank_list_jt.getSelectedRow() == -1)
        {

            JOptionPane.showMessageDialog(this, "Select a Bank.","Error",JOptionPane.ERROR_MESSAGE);

        }
        else
        {

             delete_bank();

        }
        
    }//GEN-LAST:event_delete_bank_jbMouseClicked

    private void update_bank_jbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_update_bank_jbMouseClicked
        // TODO add your handling code here:
        
        if(bank_list_jt.getSelectedRow() == -1)
        {

            JOptionPane.showMessageDialog(this, "Select a Bank.","Error",JOptionPane.ERROR_MESSAGE);

        }
        else
        {

            update_bank_details();

        }
        
    }//GEN-LAST:event_update_bank_jbMouseClicked

    private void update_bank_jbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_update_bank_jbKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            
            if(bank_list_jt.getSelectedRow() == -1)
            {

                JOptionPane.showMessageDialog(this, "Select a Bank.","Error",JOptionPane.ERROR_MESSAGE);

            }
            else
            {

                update_bank_details();

            }
            
        }
        
    }//GEN-LAST:event_update_bank_jbKeyPressed

    private void edit_bank_details_jbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_edit_bank_details_jbMouseClicked
        // TODO add your handling code here:
       
        if(edit_bank_details_jb.isEnabled() == true)
        {
            
            enable_editable_fields();
            edit_bank_details_jb.setEnabled(false);
            
        }
           
        
    }//GEN-LAST:event_edit_bank_details_jbMouseClicked

    private void edit_bank_details_jbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edit_bank_details_jbKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
              
            if(edit_bank_details_jb.isEnabled() == true)
            {

                enable_editable_fields();
                edit_bank_details_jb.setEnabled(false);

            }
            
        }
        
    }//GEN-LAST:event_edit_bank_details_jbKeyPressed

    private void close_jbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_close_jbKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            
            this.dispose();
            
        }
        
    }//GEN-LAST:event_close_jbKeyPressed

    private void close_jbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_close_jbMouseClicked
        // TODO add your handling code here:
        
        this.dispose();
        
    }//GEN-LAST:event_close_jbMouseClicked

    void update_bank_details()
    {
        
        boolean exception = false;
        boolean execute = true;
        
        Connection con = DatabaseConnection.createConnection();
        PreparedStatement prepstmt = null;
        
        try
        {
            
            String id = bank_list_jt.getValueAt(bank_list_jt.getSelectedRow(), 2).toString();
            
            String bankname = bankname2_jb.getSelectedItem().toString();
            String bankbranch = branch2_jcb.getSelectedItem().toString();
            String addline1 = addline1_2_jtf.getText();
            String addline2 = addline2_2_jtf.getText();
            String accno = accno2_jtf.getText();
            String ifsc = isfc2_jtf.getText();
            
            String sql_str = "UPDATE banks SET bank_name = ?,bank_branch = ?, addressline1 = ?, addressline2 = ?, accno = ?,ifsc = ? WHERE id = ? ";
            prepstmt = con.prepareStatement(sql_str);
            prepstmt.setString(1, bankname);
            prepstmt.setString(2, bankbranch);
            prepstmt.setString(3, addline1);
            prepstmt.setString(4, addline2);
            prepstmt.setString(5, accno);
            prepstmt.setString(6, ifsc);
            prepstmt.setString(7, id);
           
            prepstmt.execute();
            
        }
        catch(Exception e)
        {
            
            JOptionPane.showMessageDialog(null,"delete_bank() :"+e);
            
        }
        finally
        {
            
            try
            {
                
                if(con != null)
                {
                    
                    con.close();
                    
                }
                if(prepstmt != null)
                {
                    
                    prepstmt.close();
                    
                }
                
            }
            catch(Exception e)
            {
                
                JOptionPane.showMessageDialog(null, "delete_bank() :"+e);
                
            }
            
            
        }
        
        if(exception == false && execute == true)
        {
            JOptionPane.showMessageDialog(this,"Operation Successful.","Success",JOptionPane.INFORMATION_MESSAGE);
            update_list();
            load_bankname_jcb();
            load_branch_jcb();
            clear_editablefields();
            disable_editable_fields();
            edit_bank_details_jb.setEnabled(true);
        }
        
    }
    
    void disable_editable_fields()
    {
        
        bankname2_jb.setEnabled(false);
        addline1_2_jtf.setEnabled(false);
        addline2_2_jtf.setEnabled(false);
        branch2_jcb.setEnabled(false);
        accno2_jtf.setEnabled(false);
        isfc2_jtf.setEnabled(false);
        delete_bank_jb.setEnabled(false);
        update_bank_jb.setEnabled(false);
        
    }
    
    void enable_editable_fields()
    {
        
        bankname2_jb.setEnabled(true);
        addline1_2_jtf.setEnabled(true);
        addline2_2_jtf.setEnabled(true);
        branch2_jcb.setEnabled(true);
        accno2_jtf.setEnabled(true);
        isfc2_jtf.setEnabled(true);
        delete_bank_jb.setEnabled(true);
        update_bank_jb.setEnabled(true);
        
    }
    
    void delete_bank()
    {
        
        boolean exception = false;
        boolean execute = true;
        
        Connection con = DatabaseConnection.createConnection();
        PreparedStatement prepstmt = null;
        
        try
        {
            
            String id = bank_list_jt.getValueAt(bank_list_jt.getSelectedRow(), 2).toString();
            
            String sql_str = "DELETE FROM banks WHERE id = ? ";
            prepstmt = con.prepareStatement(sql_str);
            prepstmt.setString(1, id);
           
            prepstmt.execute();
            
        }
        catch(Exception e)
        {
            
            JOptionPane.showMessageDialog(null,"delete_bank() :"+e);
            
        }
        finally
        {
            
            try
            {
                
                if(con != null)
                {
                    
                    con.close();
                    
                }
                if(prepstmt != null)
                {
                    
                    prepstmt.close();
                    
                }
                
            }
            catch(Exception e)
            {
                
                JOptionPane.showMessageDialog(null, "delete_bank() :"+e);
                
            }
            
            
        }
        
        if(exception == false && execute == true)
        {
            JOptionPane.showMessageDialog(this,"Operation Successful.","Success",JOptionPane.INFORMATION_MESSAGE);
            update_list();
            load_bankname_jcb();
            load_branch_jcb();
            clear_editablefields();
        }
        
    }
    
    void clear_editablefields()
    {
        
        bankname2_jb.setSelectedItem("");
        addline1_2_jtf.setText("");
        addline2_2_jtf.setText("");
        branch2_jcb.setSelectedItem("");
        accno2_jtf.setText("");
        isfc2_jtf.setText("");
        
    }
    
    void new_data()
    {
        
        bankname_jcb.setSelectedItem("");
        branch_jcb.setSelectedItem("");
        addline1_jtf.setText("");
        addline2_jtf.setText("");
        accno_jtf.setText("");
        ifsc_jtf.setText("");

        
    }
    
    void save_bank()
    {
        
        boolean exception = false;
        boolean execute = true;
        
        Connection con = DatabaseConnection.createConnection();
        PreparedStatement prepstmt = null;
        
        try
        {
            
            String bank_name = bankname_jcb.getSelectedItem().toString();
            String bank_branch = branch_jcb.getSelectedItem().toString();
            String addline1 = addline1_jtf.getText();
            String addline2 = addline2_jtf.getText();
            String accno = accno_jtf.getText();
            String ifsc = ifsc_jtf.getText();
            
            String sql_str = "INSERT INTO banks(bank_name,bank_branch,addressline1,addressline2,accno,ifsc)VALUES(?,?,?,?,?,?)";
            prepstmt = con.prepareStatement(sql_str);
            prepstmt.setString(1, bank_name);
            prepstmt.setString(2, bank_branch);
            prepstmt.setString(3, addline1);
            prepstmt.setString(4, addline2);
            prepstmt.setString(5, accno);
            prepstmt.setString(6, ifsc);
            prepstmt.execute();
            
        }
        catch(Exception e)
        {
            
            JOptionPane.showMessageDialog(null,"save_bank() :"+e);
            
        }
        finally
        {
            
            try
            {
                
                if(con != null)
                {
                    
                    con.close();
                    
                }
                if(prepstmt != null)
                {
                    
                    prepstmt.close();
                    
                }
                
            }
            catch(Exception e)
            {
                
                JOptionPane.showMessageDialog(null, "save_bank() :"+e);
                
            }
            
            
        }
        
        if(exception == false && execute == true)
        {
            
          
            JOptionPane.showMessageDialog(this,"Operation Successful.","Success",JOptionPane.INFORMATION_MESSAGE);
            update_list();
            load_bankname_jcb();
            load_branch_jcb();
            new_data();
            clear_editablefields();
            
        }
               
        
    }
    
    boolean validation_on_save()
    {
        
        boolean valid = true;
        
        if(bankname_jcb.getSelectedItem() == null || bankname_jcb.getSelectedItem().toString().equals(""))
        {
            
            JOptionPane.showMessageDialog(this, "Enter a Valid Bank Name.","Error",JOptionPane.ERROR_MESSAGE);
            valid = false;
            
        }
        else if(bankname_jcb.getSelectedIndex() != -1)
        {
            
            JOptionPane.showMessageDialog(this, "This Bank is Already Saved.","Error",JOptionPane.ERROR_MESSAGE);
            valid = false;
            
        }
        else if(branch_jcb.getSelectedItem() == null || branch_jcb.getSelectedItem().toString().equals(""))
        {
            
            JOptionPane.showMessageDialog(this, "Enter a Valid Branch Name.","Error",JOptionPane.ERROR_MESSAGE);
            valid = false;
            
        }
        
        return valid;
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTextField accno2_jtf;
    private javax.swing.JTextField accno_jtf;
    public static javax.swing.JTextField addline1_2_jtf;
    private javax.swing.JTextField addline1_jtf;
    public static javax.swing.JTextField addline2_2_jtf;
    private javax.swing.JTextField addline2_jtf;
    public static javax.swing.JTable bank_list_jt;
    public static javax.swing.JComboBox bankname2_jb;
    private javax.swing.JComboBox bankname_jcb;
    public static javax.swing.JComboBox branch2_jcb;
    private javax.swing.JComboBox branch_jcb;
    private javax.swing.JButton close_jb;
    private javax.swing.JButton delete_bank_jb;
    private javax.swing.JButton edit_bank_details_jb;
    private javax.swing.JTextField ifsc_jtf;
    public static javax.swing.JTextField isfc2_jtf;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JButton newdata_jb;
    private javax.swing.JButton save_jb;
    private javax.swing.JButton update_bank_jb;
    // End of variables declaration//GEN-END:variables
}

class Create_Banks_bank_list_jt_LSL implements ListSelectionListener
{

    @Override
    public void valueChanged(ListSelectionEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        
        int sel_row = Create_Banks.bank_list_jt.getSelectedRow();
        
        String bankname = Create_Banks.bank_list_jt.getValueAt(sel_row, 1).toString();
        String bankbranch = Create_Banks.bank_list_jt.getValueAt(sel_row, 3).toString();
        String addline1 = Create_Banks.bank_list_jt.getValueAt(sel_row, 4).toString();
        String addline2 = Create_Banks.bank_list_jt.getValueAt(sel_row, 5).toString();
        String accno = Create_Banks.bank_list_jt.getValueAt(sel_row, 6).toString();
        String ifsc = Create_Banks.bank_list_jt.getValueAt(sel_row, 7).toString();
        
        Create_Banks.bankname2_jb.setSelectedItem(bankname);
        Create_Banks.branch2_jcb.setSelectedItem(bankbranch);
        Create_Banks.addline1_2_jtf.setText(addline1);
        Create_Banks.addline2_2_jtf.setText(addline2);
        Create_Banks.accno2_jtf.setText(accno);
        Create_Banks.isfc2_jtf.setText(ifsc);
        
       
    }
    
    
    
}