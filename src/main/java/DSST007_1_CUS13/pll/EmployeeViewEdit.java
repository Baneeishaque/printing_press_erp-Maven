package DSST007_1_CUS13.pll;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */



import DSST007_1_CUS13.bll.EmployeeViewEdit_BLL;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Base64;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author praveen
 */
public class EmployeeViewEdit extends javax.swing.JInternalFrame {

    private static EmployeeViewEdit instance;
    File imagefile = null;
    String image_format = null;
    String department = "";
    String designation = "";
    String id = null;
    String city;
    String district;
    String state;
    String country;
    
    /**
     * Creates new form Employee_Registration
     */
    public EmployeeViewEdit() {
        initComponents();
    }

    public static EmployeeViewEdit getInstance()
    {
        
        if (instance == null)
            
            instance = new EmployeeViewEdit();

        return instance;
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        empId_jtf = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        browsePhoto_jb = new javax.swing.JButton();
        removePhoto_jb = new javax.swing.JButton();
        photo_jlbl = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        empAddress_jtf = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        empCity_jcb = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        empDistrict_jcb = new javax.swing.JComboBox<>();
        empState_jcb = new javax.swing.JComboBox<>();
        empCountry_jcb = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        empPincode_jtf = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        empMobile_jtf = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        empLandline_jtf = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        empEmail_jtf = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        empDepartment_jcb = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        empDesignation_jcb = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        edit_jb = new javax.swing.JButton();
        update_jb = new javax.swing.JButton();
        delete_jb = new javax.swing.JButton();
        close_jb = new javax.swing.JButton();
        new_jb = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        searchEmployees_jcb = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        empName_jtf = new javax.swing.JTextField();
        searchEmp_jb = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        salary_jtf = new javax.swing.JTextField();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        setClosable(true);
        setTitle("View/Edit > Employees");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/DSST007_1_CUS13/InstabizTrader Logo Final 35x35.png"))); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener()
        {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt)
            {
                formInternalFrameOpened(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt)
            {
                formInternalFrameClosing(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt)
            {
                formInternalFrameClosed(evt);
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt)
            {
            }
        });

        jPanel1.setBackground(new java.awt.Color(242, 242, 255));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setText("Employee ID :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        empId_jtf.setPreferredSize(new java.awt.Dimension(150, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel1.add(empId_jtf, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText("Employee Name :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel2, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setText("Select Photo :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(jLabel3, gridBagConstraints);

        browsePhoto_jb.setBackground(new java.awt.Color(86, 132, 191));
        browsePhoto_jb.setFont(new java.awt.Font("DejaVu Sans", 0, 11)); // NOI18N
        browsePhoto_jb.setText("Browse>>");
        browsePhoto_jb.setPreferredSize(new java.awt.Dimension(95, 27));
        browsePhoto_jb.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                browsePhoto_jbMouseClicked(evt);
            }
        });
        browsePhoto_jb.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                browsePhoto_jbKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 2);
        jPanel1.add(browsePhoto_jb, gridBagConstraints);

        removePhoto_jb.setBackground(new java.awt.Color(86, 132, 191));
        removePhoto_jb.setFont(new java.awt.Font("DejaVu Sans", 0, 11)); // NOI18N
        removePhoto_jb.setText("<<Remove");
        removePhoto_jb.setPreferredSize(new java.awt.Dimension(95, 27));
        removePhoto_jb.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                removePhoto_jbMouseClicked(evt);
            }
        });
        removePhoto_jb.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                removePhoto_jbKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanel1.add(removePhoto_jb, gridBagConstraints);

        photo_jlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        photo_jlbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 255)));
        photo_jlbl.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        photo_jlbl.setPreferredSize(new java.awt.Dimension(132, 132));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel1.add(photo_jlbl, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel5.setText("Address :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(jLabel5, gridBagConstraints);

        empAddress_jtf.setPreferredSize(new java.awt.Dimension(300, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        jPanel1.add(empAddress_jtf, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel6.setText("City :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel6, gridBagConstraints);

        empCity_jcb.setEditable(true);
        empCity_jcb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mumbai", "Delhi", "Bengaluru", "Ahmedabad", "Hyderabad", "Chennai", "Kolkata", "Pune", "Jaipur", "Surat", "Lucknow", "Kanpur", "Nagpur", "Patna", "Indore", "Thane", "Bhopal", "Visakhapatnam", "Vadodara", "Firozabad", "Ludhiana", "Rajkot", "Agra", "Siliguri", "Nashik", "Faridabad", "Patiala", "Meerut", "Kalyan-Dombivali", "Vasai-Virar", "Varanasi", "Srinagar", "Dhanbad", "Jodhpur", "Amritsar", "Raipur", "Allahabad", "Coimbatore", "Jabalpur", "Gwalior", "Vijayawada", "Madurai", "Guwahati", "Chandigarh", "Hubli-Dharwad", "Amroha", "Moradabad", "Gurgaon", "Aligarh", "Solapur", "Ranchi", "Jalandhar", "Tiruchirappalli", "Bhubaneswar", "Salem", "Warangal", "Mira-Bhayandar", "Thiruvananthapuram", "Bhiwandi", "Saharanpur", "Guntur", "Amravati", "Bikaner", "Noida", "Jamshedpur", "Bhilai Nagar", "Cuttack", "Kochi", "Udaipur", "Bhavnagar", "Dehradun", "Asansol", "Nanded-Waghala", "Ajmer", "Jamnagar", "Ujjain", "Sangli", "Loni", "Jhansi", "Pondicherry", "Nellore", "Jammu", "Belagavi", "Raurkela", "Mangaluru", "Tirunelveli", "Malegaon", "Gaya", "Tiruppur", "Davanagere", "Kozhikode", "Akola", "Kurnool", "Bokaro Steel City", "Rajahmundry", "Ballari", "Agartala", "Bhagalpur", "Latur", "Dhule", "Korba", "Bhilwara", "Brahmapur", "Mysore", "Muzaffarpur", "Ahmednagar", "Kollam", "Raghunathganj", "Bilaspur", "Shahjahanpur", "Thrissur", "Alwar", "Kakinada", "Nizamabad", "Sagar", "Tumkur", "Hisar", "Rohtak", "Panipat", "Darbhanga", "Kharagpur", "Aizawl", "Ichalkaranji", "Tirupati", "Karnal", "Bathinda", "Rampur", "Shivamogga", "Ratlam", "Modinagar", "Durg", "Shillong", "Imphal", "Hapur", "Ranipet", "Anantapur", "Arrah", "Karimnagar", "Parbhani", "Etawah", "Bharatpur", "Begusarai", "New Delhi", "Chhapra", "Kadapa", "Ramagundam", "Pali", "Satna", "Vizianagaram", "Katihar", "Hardwar", "Sonipat", "Nagercoil", "Thanjavur", "Murwara (Katni)", "Naihati", "Sambhal", "Nadiad", "Yamunanagar", "English Bazar", "Eluru", "Munger", "Panchkula", "Raayachuru", "Panvel", "Deoghar", "Ongole", "Nandyal", "Morena", "Bhiwani", "Porbandar", "Palakkad", "Anand", "Purnia", "Baharampur", "Barmer", "Morvi", "Orai", "Bahraich", "Sikar", "Vellore", "Singrauli", "Khammam", "Mahesana", "Silchar", "Sambalpur", "Rewa", "Unnao", "Hugli-Chinsurah", "Raiganj", "Phusro", "Adityapur", "Alappuzha", "Bahadurgarh", "Machilipatnam", "Rae Bareli", "Jalpaiguri", "Bharuch", "Pathankot", "Hoshiarpur", "Baramula", "Adoni", "Jind", "Tonk", "Tenali", "Kancheepuram", "Vapi", "Sirsa", "Navsari", "Mahbubnagar", "Puri", "Robertson Pet", "Erode", "Batala", "Haldwani-cum-Kathgodam", "Vidisha", "Saharsa", "Thanesar", "Chittoor", "Veraval", "Lakhimpur", "Sitapur", "Hindupur", "Santipur", "Balurghat", "Ganjbasoda", "Moga", "Proddatur", "Srinagar", "Medinipur", "Habra", "Sasaram", "Hajipur", "Bhuj", "Shivpuri", "Ranaghat", "Shimla", "Tiruvannamalai", "Kaithal", "Rajnandgaon", "Godhra", "Hazaribag", "Bhimavaram", "Mandsaur", "Dibrugarh", "Kolar", "Bankura", "Mandya", "Dehri-on-Sone", "Madanapalle", "Malerkotla", "Lalitpur", "Bettiah", "Pollachi", "Khanna", "Neemuch", "Palwal", "Palanpur", "Guntakal", "Nabadwip", "Udupi", "Jagdalpur", "Motihari", "Pilibhit", "Dimapur", "Mohali", "Sadulpur", "Rajapalayam", "Dharmavaram", "Kashipur", "Sivakasi", "Darjiling", "Chikkamagaluru", "Gudivada", "Baleshwar Town", "Mancherial", "Srikakulam", "Adilabad", "Yavatmal", "Barnala", "Nagaon", "Narasaraopet", "Raigarh", "Roorkee", "Valsad", "Ambikapur", "Giridih", "Chandausi", "Purulia", "Patan", "Bagaha", "Hardoi ", "Achalpur", "Osmanabad", "Deesa", "Nandurbar", "Azamgarh", "Ramgarh", "Firozpur", "Baripada Town", "Karwar", "Siwan", "Rajampet", "Pudukkottai", "Anantnag", "Tadpatri", "Satara", "Bhadrak", "Kishanganj", "Suryapet", "Wardha", "Ranebennuru", "Amreli", "Neyveli (TS)", "Jamalpur", "Marmagao", "Udgir", "Tadepalligudem", "Nagapattinam", "Buxar", "Aurangabad", "Jehanabad", "Phagwara", "Khair", "Sawai Madhopur", "Kapurthala", "Chilakaluripet", "Aurangabad", "Malappuram", "Rewari", "Nagaur", "Sultanpur", "Nagda", "Port Blair", "Lakhisarai", "Panaji", "Tinsukia", "Itarsi", "Kohima", "Balangir", "Nawada", "Jharsuguda", "Jagtial", "Viluppuram", "Amalner", "Zirakpur", "Tanda", "Tiruchengode", "Nagina", "Yemmiganur", "Vaniyambadi", "Sarni", "Theni Allinagaram", "Margao", "Akot", "Sehore", "Mhow Cantonment", "Kot Kapura", "Makrana", "Pandharpur", "Miryalaguda", "Shamli", "Seoni", "Ranibennur", "Kadiri", "Shrirampur", "Rudrapur", "Parli", "Najibabad", "Nirmal", "Udhagamandalam", "Shikohabad", "Jhumri Tilaiya", "Aruppukkottai", "Ponnani", "Jamui", "Sitamarhi", "Chirala", "Anjar", "Karaikal", "Hansi", "Anakapalle", "Mahasamund", "Faridkot", "Saunda", "Dhoraji", "Paramakudi", "Balaghat", "Sujangarh", "Khambhat", "Muktsar", "Rajpura", "Kavali", "Dhamtari", "Ashok Nagar", "Sardarshahar", "Mahuva", "Bargarh", "Kamareddy", "Sahibganj", "Kothagudem", "Ramanagaram", "Gokak", "Tikamgarh", "Araria", "Rishikesh", "Shahdol", "Medininagar (Daltonganj)", "Arakkonam", "Washim", "Sangrur", "Bodhan", "Fazilka", "Palacole", "Keshod", "Sullurpeta", "Wadhwan", "Gurdaspur", "Vatakara", "Tura", "Narnaul", "Kharar", "Yadgir", "Ambejogai", "Ankleshwar", "Savarkundla", "Paradip", "Virudhachalam", "Kanhangad", "Kadi", "Srivilliputhur", "Gobindgarh", "Tindivanam", "Mansa", "Taliparamba", "Manmad", "Tanuku", "Rayachoti", "Virudhunagar", "Koyilandy", "Jorhat", "Karur", "Valparai", "Srikalahasti", "Neyyattinkara", "Bapatla", "Fatehabad", "Malout", "Sankarankovil", "Tenkasi", "Ratnagiri", "Rabkavi Banhatti", "Sikandrabad", "Chaibasa", "Chirmiri", "Palwancha", "Bhawanipatna", "Kayamkulam", "Pithampur", "Nabha", "Shahabad, Hardoi", "Dhenkanal", "Uran Islampur", "Gopalganj", "Bongaigaon City", "Palani", "Pusad", "Sopore", "Pilkhuwa", "Tarn Taran", "Renukoot", "Mandamarri", "Shahabad", "Barbil", "Koratla", "Madhubani", "Arambagh", "Gohana", "Ladnu", "Pattukkottai", "Sirsi", "Sircilla", "Tamluk", "Jagraon", "AlipurdUrban Agglomerationr", "Alirajpur", "Tandur", "Naidupet", "Tirupathur", "Tohana", "Ratangarh", "Dhubri", "Masaurhi", "Visnagar", "Vrindavan", "Nokha", "Nagari", "Narwana", "Ramanathapuram", "Ujhani", "Samastipur", "Laharpur", "Sangamner", "Nimbahera", "Siddipet", "Suri", "Diphu", "Jhargram", "Shirpur-Warwade", "Tilhar", "Sindhnur", "Udumalaipettai", "Malkapur", "Wanaparthy", "Gudur", "Kendujhar", "Mandla", "Mandi", "Nedumangad", "North Lakhimpur", "Vinukonda", "Tiptur", "Gobichettipalayam", "Sunabeda", "Wani", "Upleta", "Narasapuram", "Nuzvid", "Tezpur", "Una", "Markapur", "Sheopur", "Thiruvarur", "Sidhpur", "Sahaswan", "Suratgarh", "Shajapur", "Rayagada", "Lonavla", "Ponnur", "Kagaznagar", "Gadwal", "Bhatapara", "Kandukur", "Sangareddy", "Unjha", "Lunglei", "Karimganj", "Kannur", "Bobbili", "Mokameh", "Talegaon Dabhade", "Anjangaon", "Mangrol", "Sunam", "Gangarampur", "Thiruvallur", "Tirur", "Rath", "Jatani", "Viramgam", "Rajsamand", "Yanam", "Kottayam", "Panruti", "Dhuri", "Namakkal", "Kasaragod", "Modasa", "Rayadurg", "Supaul", "Kunnamkulam", "Umred", "Bellampalle", "Sibsagar", "Mandi Dabwali", "Ottappalam", "Dumraon", "Samalkot", "Jaggaiahpet", "Goalpara", "Tuni", "Lachhmangarh", "Bhongir", "Amalapuram", "Firozpur Cantt.", "Vikarabad", "Thiruvalla", "Sherkot", "Palghar", "Shegaon", "Jangaon", "Bheemunipatnam", "Panna", "Thodupuzha", "KathUrban Agglomeration", "Palitana", "Arwal", "Venkatagiri", "Kalpi", "Rajgarh (Churu)", "Sattenapalle", "Arsikere", "Ozar", "Thirumangalam", "Petlad", "Nasirabad", "Phaltan", "Rampurhat", "Nanjangud", "Forbesganj", "Tundla", "BhabUrban Agglomeration", "Sagara", "Pithapuram", "Sira", "Bhadrachalam", "Charkhi Dadri", "Chatra", "Palasa Kasibugga", "Nohar", "Yevla", "Sirhind Fatehgarh Sahib", "Bhainsa", "Parvathipuram", "Shahade", "Chalakudy", "Narkatiaganj", "Kapadvanj", "Macherla", "Raghogarh-Vijaypur", "Rupnagar", "Naugachhia", "Sendhwa", "Byasanagar", "Sandila", "Gooty", "Salur", "Nanpara", "Sardhana", "Vita", "Gumia", "Puttur", "Jalandhar Cantt.", "Nehtaur", "Changanassery", "Mandapeta", "Dumka", "Seohara", "Umarkhed", "Madhupur", "Vikramasingapuram", "Punalur", "Kendrapara", "Sihor", "Nellikuppam", "Samana", "Warora", "Nilambur", "Rasipuram", "Ramnagar", "Jammalamadugu", "Nawanshahr", "Thoubal", "Athni", "Cherthala", "Sidhi", "Farooqnagar", "Peddapuram", "Chirkunda", "Pachora", "Madhepura", "Pithoragarh", "Tumsar", "Phalodi", "Tiruttani", "Rampura Phul", "Perinthalmanna", "Padrauna", "Pipariya", "Dalli-Rajhara", "Punganur", "Mattannur", "Mathura", "Thakurdwara", "Nandivaram-Guduvancheri", "Mulbagal", "Manjlegaon", "Wankaner", "Sillod", "Nidadavole", "Surapura", "Rajagangapur", "Sheikhpura", "Parlakhemundi", "Kalimpong", "Siruguppa", "Arvi", "Limbdi", "Barpeta", "Manglaur", "Repalle", "Mudhol", "Shujalpur", "Mandvi", "Thangadh", "Sironj", "Nandura", "Shoranur", "Nathdwara", "Periyakulam", "Sultanganj", "Medak", "Narayanpet", "Raxaul Bazar", "Rajauri", "Pernampattu", "Nainital", "Ramachandrapuram", "Vaijapur", "Nangal", "Sidlaghatta", "Punch", "Pandhurna", "Wadgaon Road", "Talcher", "Varkala", "Pilani", "Nowgong", "Naila Janjgir", "Mapusa", "Vellakoil", "Merta City", "Sivaganga", "Mandideep", "Sailu", "Vyara", "Kovvur", "Vadalur", "Nawabganj", "Padra", "Sainthia", "Siana", "Shahpur", "Sojat", "Noorpur", "Paravoor", "Murtijapur", "Ramnagar", "Sundargarh", "Taki", "Saundatti-Yellamma", "Pathanamthitta", "Wadi", "Rameshwaram", "Tasgaon", "Sikandra Rao", "Sihora", "Tiruvethipuram", "Tiruvuru", "Mehkar", "Peringathur", "Perambalur", "Manvi", "Zunheboto", "Mahnar Bazar", "Attingal", "Shahbad", "Puranpur", "Nelamangala", "Nakodar", "Lunawada", "Murshidabad", "Mahe", "Lanka", "Rudauli", "Tuensang", "Lakshmeshwar", "Zira", "Yawal", "Thana Bhawan", "Ramdurg", "Pulgaon", "Sadasivpet", "Nargund", "Neem-Ka-Thana", "Memari", "Nilanga", "Naharlagun", "Pakaur", "Wai", "Tarikere", "Malavalli", "Raisen", "Lahar", "Uravakonda", "Savanur", "Sirohi", "Udhampur", "Umarga", "Pratapgarh", "Lingsugur", "Usilampatti", "Palia Kalan", "Wokha", "Rajpipla", "Vijayapura", "Rawatbhata", "Sangaria", "Paithan", "Rahuri", "Patti", "Zaidpur", "Lalsot", "Maihar", "Vedaranyam", "Nawapur", "Solan", "Vapi", "Sanawad", "Warisaliganj", "Revelganj", "Sabalgarh", "Tuljapur", "Simdega", "Musabani", "Kodungallur", "Phulabani", "Umreth", "Narsipatnam", "Nautanwa", "Rajgir", "Yellandu", "Sathyamangalam", "Pilibanga", "Morshi", "Pehowa", "Sonepur", "Pappinisseri", "Zamania", "Mihijam", "Purna", "Puliyankudi", "Shikarpur, Bulandshahr", "Umaria", "Porsa", "Naugawan Sadat", "Fatehpur Sikri", "Manuguru", "Udaipur", "Pipar City", "Pattamundai", "Nanjikottai", "Taranagar", "Yerraguntla", "Satana", "Sherghati", "Sankeshwara", "Madikeri", "Thuraiyur", "Sanand", "Rajula", "Kyathampalle", "Shahabad, Rampur", "Tilda Newra", "Narsinghgarh", "Chittur-Thathamangalam", "Malaj Khand", "Sarangpur", "Robertsganj", "Sirkali", "Radhanpur", "Tiruchendur", "Utraula", "Patratu", "Vijainagar, Ajmer", "Periyasemur", "Pathri", "Sadabad", "Talikota", "Sinnar", "Mungeli", "Sedam", "Shikaripur", "Sumerpur", "Sattur", "Sugauli", "Lumding", "Vandavasi", "Titlagarh", "Uchgaon", "Mokokchung", "Paschim Punropara", "Sagwara", "Ramganj Mandi", "Tarakeswar", "Mahalingapura", "Dharmanagar", "Mahemdabad", "Manendragarh", "Uran", "Tharamangalam", "Tirukkoyilur", "Pen", "Makhdumpur", "Maner", "Oddanchatram", "Palladam", "Mundi", "Nabarangapur", "Mudalagi", "Samalkha", "Nepanagar", "Karjat", "Ranavav", "Pedana", "Pinjore", "Lakheri", "Pasan", "Puttur", "Vadakkuvalliyur", "Tirukalukundram", "Mahidpur", "Mussoorie", "Muvattupuzha", "Rasra", "Udaipurwati", "Manwath", "Adoor", "Uthamapalayam", "Partur", "Nahan", "Ladwa", "Mankachar", "Nongstoin", "Losal", "Sri Madhopur", "Ramngarh", "Mavelikkara", "Rawatsar", "Rajakhera", "Lar", "Lal Gopalganj Nindaura", "Muddebihal", "Sirsaganj", "Shahpura", "Surandai", "Sangole", "Pavagada", "Tharad", "Mansa", "Umbergaon", "Mavoor", "Nalbari", "Talaja", "Malur", "Mangrulpir", "Soro", "Shahpura", "Vadnagar", "Raisinghnagar", "Sindhagi", "Sanduru", "Sohna", "Manavadar", "Pihani", "Safidon", "Risod", "Rosera", "Sankari", "Malpura", "Sonamukhi", "Shamsabad, Agra", "Nokha", "PandUrban Agglomeration", "Mainaguri", "Afzalpur", "Shirur", "Salaya", "Shenkottai", "Pratapgarh", "Vadipatti", "Nagarkurnool", "Savner", "Sasvad", "Rudrapur", "Soron", "Sholingur", "Pandharkaoda", "Perumbavoor", "Maddur", "Nadbai", "Talode", "Shrigonda", "Madhugiri", "Tekkalakote", "Seoni-Malwa", "Shirdi", "SUrban Agglomerationr", "Terdal", "Raver", "Tirupathur", "Taraori", "Mukhed", "Manachanallur", "Rehli", "Sanchore", "Rajura", "Piro", "Mudabidri", "Vadgaon Kasba", "Nagar", "Vijapur", "Viswanatham", "Polur", "Panagudi", "Manawar", "Tehri", "Samdhan", "Pardi", "Rahatgarh", "Panagar", "Uthiramerur", "Tirora", "Rangia", "Sahjanwa", "Wara Seoni", "Magadi", "Rajgarh (Alwar)", "Rafiganj", "Tarana", "Rampur Maniharan", "Sheoganj", "Raikot", "Pauri", "Sumerpur", "Navalgund", "Shahganj", "Marhaura", "Tulsipur", "Sadri", "Thiruthuraipoondi", "Shiggaon", "Pallapatti", "Mahendragarh", "Sausar", "Ponneri", "Mahad", "Lohardaga", "Tirwaganj", "Margherita", "Sundarnagar", "Rajgarh", "Mangaldoi", "Renigunta", "Longowal", "Ratia", "Lalgudi", "Shrirangapattana", "Niwari", "Natham", "Unnamalaikadai", "PurqUrban Agglomerationzi", "Shamsabad, Farrukhabad", "Mirganj", "Todaraisingh", "Warhapur", "Rajam", "Urmar Tanda", "Lonar", "Powayan", "P.N.Patti", "Palampur", "Srisailam Project (Right Flank Colony) Township", "Sindagi", "Sandi", "Vaikom", "Malda", "Tharangambadi", "Sakaleshapura", "Lalganj", "Malkangiri", "Rapar", "Mauganj", "Todabhim", "Srinivaspur", "Murliganj", "Reengus", "Sawantwadi", "Tittakudi", "Lilong", "Rajaldesar", "Pathardi", "Achhnera", "Pacode", "Naraura", "Nakur", "Palai", "Morinda, India", "Manasa", "Nainpur", "Sahaspur", "Pauni", "Prithvipur", "Ramtek", "Silapathar", "Songadh", "Safipur", "Sohagpur", "Mul", "Sadulshahar", "Phillaur", "Sambhar", "Prantij", "Nagla", "Pattran", "Mount Abu", "Reoti", "Tenu dam-cum-Kathhara", "Panchla", "Sitarganj", "Pasighat", "Motipur", "O' Valley", "Raghunathpur", "Suriyampalayam", "Qadian", "Rairangpur", "Silvassa", "Nowrozabad (Khodargama)", "Mangrol", "Soyagaon", "Sujanpur", "Manihari", "Sikanderpur", "Mangalvedhe", "Phulera", "Ron", "Sholavandan", "Saidpur", "Shamgarh", "Thammampatti", "Maharajpur", "Multai", "Mukerian", "Sirsi", "Purwa", "Sheohar", "Namagiripettai", "Parasi", "Lathi", "Lalganj", "Narkhed", "Mathabhanga", "Shendurjana", "Peravurani", "Mariani", "Phulpur", "Rania", "Pali", "Pachore", "Parangipettai", "Pudupattinam", "Panniyannur", "Maharajganj", "Rau", "Monoharpur", "Mandawa", "Marigaon", "Pallikonda", "Pindwara", "Shishgarh", "Patur", "Mayang Imphal", "Mhowgaon", "Guruvayoor", "Mhaswad", "Sahawar", "Sivagiri", "Mundargi", "Punjaipugalur", "Kailasahar", "Samthar", "Sakti", "Sadalagi", "Silao", "Mandalgarh", "Loha", "Pukhrayan", "Padmanabhapuram", "Belonia", "Saiha", "Srirampore", "Talwara", "Puthuppally", "Khowai", "Vijaypur", "Takhatgarh", "Thirupuvanam", "Adra", "Piriyapatna", "Obra", "Adalaj", "Nandgaon", "Barh", "Chhapra", "Panamattom", "Niwai", "Bageshwar", "Tarbha", "Adyar", "Narsinghgarh", "Warud", "Asarganj", "Sarsod" }));
        empCity_jcb.setPreferredSize(new java.awt.Dimension(250, 25));
        empCity_jcb.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                empCity_jcbActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(empCity_jcb, gridBagConstraints);

        jLabel7.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel7.setText("District :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel7, gridBagConstraints);

        jLabel8.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel8.setText("State :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel8, gridBagConstraints);

        jLabel9.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel9.setText("Country :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel9, gridBagConstraints);

        empDistrict_jcb.setEditable(true);
        empDistrict_jcb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Thane", "North 24 Parganas", "Bangalore Urban", "Pune", "Mumbai suburban", "South 24 Parganas", "Bardhaman", "Ahmedabad", "Murshidabad", "Jaipur", "Nashik", "Allahabad", "Patna", "Hooghly", "Ranga Reddy", "Nadia", "East Godavari", "Paschim Medinipur", "East Champaran", "Surat", "Guntur", "Howrah", "Muzaffarpur", "Belgaum", "Moradabad", "Chennai", "Ghaziabad", "Nagpur", "Azamgarh", "Lucknow", "Kanpur Nagar", "Ahmednagar", "Krishna", "Kolkata", "Jaunpur district", "Madhubani", "Sitapur", "Bareilly", "Gorakhpur", "Purba Medinipur", "Agra", "Gaya", "Solapur", "Visakhapatnam", "Samastipur", "Jalgaon", "Chittoor", "Muzaffarnagar", "Malappuram", "Hardoi", "Anantapur", "Raipur", "Kurnool", "Mahbubnagar", "Lakhimpur Kheri", "Hyderabad", "Maldah", "Madurai", "Kanchipuram", "Saran", "West Champaran", "West Godavari", "Vellore", "Darbhanga", "Kolhapur", "Jalpaiguri", "Karimnagar", "Sultanpur", "Tiruvallur", "Budaun", "Aurangabad", "Jodhpur", "Bijnor", "Varanasi", "Aligarh", "Alwar", "North West Delhi", "Vadodara", "Ghazipur", "Bankura", "Kushinagar", "Warangal", "Ganjam", "Birbhum", "Bulandshahr", "Vaishali", "Ludhiana", "Nalgonda", "Salem", "Coimbatore", "Saharanpur", "Viluppuram", "Meerut", "Gonda", "Sitamarhi", "Raebareli", "Prakasam", "Nanded", "Durg", "Siwan", "Nagaur", "Thiruvananthapuram", "Ernakulam", "Purnia", "Indore", "Barabanki", "Ballia", "Pratapgarh", "Rajkot", "Mumbai City", "Banaskantha", "Unnao", "Thrissur", "Deoria", "Kozhikode", "Tirunelveli", "Katihar", "Udaipur", "Bhagalpur", "Medak", "Satara", "Shahjahanpur", "Uttar Dinajpur", "Mysore", "Sri Potti Sriramulu Nellore", "Rohtas", "Begusarai", "Purulia", "Ranchi", "Patiala", "Amravati", "Kadapa", "Bhavnagar", "Nalanda", "Kanyakumari", "Nagaon", "Cooch Behar", "Sangli", "Palakkad", "Araria", "Khammam", "Yavatmal", "Junagadh", "Adilabad", "South Delhi", "Bhojpur", "Tiruchirappalli", "Srikakulam", "Dhanbad", "Tumkur", "Sikar", "Maharajganj", "Bilaspur", "Raigad", "Fatehpur", "Kollam", "Cuttack", "Barmer", "Cuddalore", "Buldhana", "Beed", "Ajmer", "Gulbarga", "Gopalganj", "Siddharthnagar", "Nizamabad", "Bharatpur", "Mathura", "Bellary", "West Delhi", "Kannur", "Mayurbhanj", "Aurangabad", "Firozabad", "Mirzapur", "Amritsar", "Tirupur", "Tiruvannamalai", "Faizabad", "Basti", "Jabalpur", "Latur", "Giridih", "Sabarkantha", "Bhilwara", "Thanjavur", "Ambedkar Nagar", "Panchmahal", "Bahraich", "Sagar", "Bhopal", "Bikaner", "Rewa", "Vizianagaram", "Rampur", "Balasore", "Gurdaspur", "Kheda", "South West Delhi", "East Singhbhum", "Erode", "Khordha", "North East Delhi", "Satna", "Supaul", "Sambhal(Bheem Nagar)", "Nawada", "Mau", "Chandrapur", "Dhar", "Jalandhar", "Vijayapura", "Dindigul", "Jamnagar", "Balrampur", "Jhunjhunu", "Dahod", "Alappuzha", "Kutch", "Chhindwara", "Anand", "Dakshina Kannada", "Sundargarh", "Bokaro", "Dhule", "Churu", "Pali", "Pilibhit", "Gwalior", "Banka", "Mehsana", "Firozpur", "Jhansi", "Pathankot", "Madhepura", "Ujjain", "Kottayam", "Ganganagar", "Morena", "Jalna", "Chandauli", "Kota", "Dhubri", "Davanagere", "Virudhunagar", "Palamu", "Haridwar", "Sonitpur", "Raichur", "Pudukkottai", "Saharsa", "Bagalkot", "Farrukhabad", "Krishnagiri", "Khargone (West Nimar)", "Sonbhadra", "Mainpuri", "Dharwad", "Darjeeling", "Jyotiba Phule Nagar", "Parbhani", "Jalore", "Jajpur", "Akola", "Mandya", "Kendujhar (Keonjhar)", "Banda", "Faridabad", "Banswara", "Kanpur Dehat (Ramabai Nagar)", "Hanumangarh", "Hassan", "Chhatarpur", "Etah", "Jamui", "Surendranagar", "Shimoga", "Hissar", "Thoothukudi", "Cachar", "Hazaribag", "Shivpuri", "Namakkal", "Sant Kabir Nagar", "East Delhi", "Buxar", "Bhind", "Valsad", "Balaghat", "Bidar", "Alipurduar", "Dehradun", "Puri", "Barpeta", "Kishanganj", "Gautam Buddh Nagar", "Dakshin Dinajpur", "Jalaun", "Chitradurga", "Osmanabad", "Kannauj", "Khagaria", "Sangrur", "Balangir", "Udham Singh Nagar", "Nandurbar", "Dausa", "Bhiwani", "Kaimur", "Janjgir-Champa", "Nagapattinam", "Ratnagiri", "Haveri district", "Kaushambi", "Hoshiarpur", "Etawah", "Betul", "Kalahandi", "Hathras (Mahamaya Nagar)", "Dewas", "Sant Ravidas Nagar", "Bharuch", "Rajgarh", "Chittorgarh", "Kolar", "Rajnandgaon", "Jammu", "Kamrup", "Gurgaon", "Amreli district", "Shajapur", "Kangra", "Bhadrak", "Karnal", "Dharmapuri", "West Singhbhum", "Raigarh", "Deoghar", "Sonipat", "Bargarh (Baragarh)", "Karauli", "Vidisha", "Ratlam", "Hapur (Panchsheel Nagar)", "Tikamgarh", "Kendrapara", "Kanshi Ram Nagar", "Tonk", "Bastar", "Jhalawar", "Koppal", "Dungapur", "Bathinda", "Gandhinagar", "Barwani", "Seoni", "Koraput", "Auraiya", "Munger", "Uttara Kannada", "Patan", "Sivaganga", "Mandsaur", "Sawai Madhopur", "Ramanathapuram", "Jind", "Raisen", "Navsari", "Dibrugarh", "Garhwa", "Gondia", "Dumka", "Tinsukia", "Godda", "Sehore", "Khandwa (East Nimar)", "Kasaragod", "Bagpat", "Wardha", "Sirsa", "Katni", "Angul", "Srinagar", "Tiruvarur", "Damoh", "Kamrup Metropolitan", "Chikkaballapur", "Theni", "Hoshangabad", "Guna", "Baran", "Nabarangpur", "Lalitpur", "Gir Somnath", "Karimganj", "Yamuna Nagar", "Dholpur", "Korba", "Panipat", "Bhandara", "Washim", "Pathanamthitta", "Dhenkanal", "Hingoli", "Singrauli", "Udupi", "Yadgir", "Rajsamand", "Sivasagar", "Sahibganj", "Chikkamagaluru", "Ambala", "Jagatsinghpur", "Sidhi", "Jehanabad", "Tarn Taran", "Shravasti", "Bundi", "Idukki", "Hamirpur", "Narsinghpur", "Jorhat", "Mewat", "Ramanagara", "Karur", "Kaithal", "Chhota Udaipur", "Gadchiroli", "Anantnag", "Gadag", "Shahdol", "Seraikela Kharsawan", "Rohtak", "Golaghat", "Chandigarh", "Mandla", "Aravalli", "Sambalpur", "Chatra", "Lakhimpur", "Palwal", "Sirohi", "Mahasamund", "Gumla", "Jhabua", "Chamarajnagar", "Panna", "Baramulla", "Goalpara", "Lakhisarai", "Mandi", "Mahisagar", "Moga", "Chitrakoot", "Bangalore Rural", "Sahibzada Ajit Singh Nagar", "Karbi Anglong", "Kurukshetra", "Nayagarh", "Rayagada", "Morbi", "Morigaon", "Jhajjar", "Nainital", "Baksa", "Ramgarh", "Pondicherry", "Fatehabad", "Mahendragarh", "West Tripura", "Darrang", "Sri Muktsar Sahib", "Pakur", "Rewari", "Kokrajhar", "North Delhi", "Mahoba", "Kupwara", "Pratapgarh", "Jashpur", "Sindhudurg", "Ashok Nagar", "Udalguri", "Neemuch", "East Khasi Hills", "North Goa", "Kapurthala", "Wayanad", "Shimla", "Tapi", "Dhamtari", "Jamtara", "Datia", "Nalbari", "Mansa", "Burhanpur", "Devbhoomi Dwarka", "Ariyalur", "Anuppur", "Kanker", "Badgam", "Nilgiris", "Bongaigaon", "Kandhamal", "Alirajpur", "Latehar", "Koderma", "Dindori", "Arwal", "Dhemaji", "Sheopur", "Pauri Garhwal", "Rupnagar", "Jaisalmer", "Surajpur", "Hailakandi", "Koriya", "Sheohar", "Botad", "Subarnapur (Sonepur)", "Umaria", "West Garo Hills", "South Goa", "Sheikhpura", "Almora", "Rajouri", "Faridkot", "Tehri Garhwal", "Kathua", "Shahid Bhagat Singh Nagar", "Malkangiri", "Nuapada", "Fatehgarh Sahib", "Simdega", "Barnala", "Narmada", "Porbandar", "Kabirdham (formerly Kawardha)", "Jharsuguda", "Central Delhi", "Solan", "Gajapati", "Harda", "Pulwama", "Perambalur", "Panchkula", "Udhampur", "Kodagu", "Dantewada", "Khunti", "Sirmaur", "Una", "Chamba", "Imphal West", "Pithoragarh", "Sepahijala", "Chirang", "Poonch", "Lohardaga", "Hamirpur", "Imphal East", "Boudh (Bauda)", "Kullu", "Gomati", "South Tripura", "Kulgam", "Surguja", "Thoubal", "North Tripura", "Tuensang", "Doda", "Aizawl", "Chamoli", "West Khasi Hills", "Bandipora", "Bilaspur", "Dimapur", "Dhalai", "Senapati", "Dadra and Nagar Haveli", "Uttarkashi", "Khowai", "Samba", "East Garo Hills", "Reasi", "Debagarh (Deogarh)", "Ganderbal", "Ramban", "East Sikkim", "Unokoti", "Churachandpur", "West Jaintia Hills", "Kohima", "Shopian", "Bageshwar", "Mon", "Champawat", "Ri Bhoi", "Bijapur", "Sukma", "Bishnupur", "South Andaman", "Rudraprayag", "Kishtwar", "Dang", "Dima Hasao", "Karaikal", "Mokokchung", "Daman", "Ukhrul", "Papum Pare", "Wokha", "Peren", "Phek", "Lunglei", "Changlang", "Leh", "South Sikkim", "Lohit", "Chandel", "Kargil", "South Garo Hills", "Zunheboto", "Narayanpur", "Tamenglong", "West Sikkim", "New Delhi", "Champhai", "East Jaintia Hills", "North Garo Hills", "Lawngtlai", "West Siang", "Tirap", "South West Khasi Hills", "North and Middle Andaman", "East Siang", "Kurung Kumey", "West Kameng", "Mamit", "Kinnaur", "Upper Subansiri", "Kolasib", "Lower Subansiri", "East Kameng", "Kiphire", "Serchhip", "Lakshadweep", "Saiha", "Yanam", "Lower Dibang Valley", "Diu", "Longleng", "Tawang", "North Sikkim", "Mahe", "Nicobar", "Upper Siang", "Lahaul and Spiti", "Anjaw", "Dibang Valley", "Fazilka", "Shamli", "Balrampur", "Bemetara", "Palghar", "Longding", "Balod", "Baloda Bazar", "Gariaband", "Kondagaon", "Mungeli", "Shahdara", "South East Delhi", "Agar", "South West Garo Hills", "Amethi (Chhatrapati Shahuji Maharaj Nagar)", " " }));
        empDistrict_jcb.setPreferredSize(new java.awt.Dimension(200, 25));
        empDistrict_jcb.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                empDistrict_jcbActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(empDistrict_jcb, gridBagConstraints);

        empState_jcb.setEditable(true);
        empState_jcb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Andaman and Nicobar Island", "Andhra Pradesh", "Arunachal Pradesh", "Assam", "Bihar", "Chandigarh", "Chhattisgarh", "Dadra and Nagar Haveli", "Daman and Diu", "Delhi", "Goa", "Gujarat", "Haryana", "Himachal Pradesh", "Jammu and Kashmir", "Jharkhand", "Karnataka", "Kerala", "Lakshadweep", "Madhya Pradesh", "Maharashtra", "Manipur", "Meghalaya", "Mizoram", "Nagaland", "Odisha", "Puducherry", "Punjab", "Rajasthan", "Sikkim", "Tamil Nadu", "Telangana", "Tripura", "Uttar Pradesh", "Uttarakhand", "West Bengal", " " }));
        empState_jcb.setPreferredSize(new java.awt.Dimension(200, 25));
        empState_jcb.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                empState_jcbActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(empState_jcb, gridBagConstraints);

        empCountry_jcb.setEditable(true);
        empCountry_jcb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "India" }));
        empCountry_jcb.setPreferredSize(new java.awt.Dimension(200, 25));
        empCountry_jcb.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                empCountry_jcbActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(empCountry_jcb, gridBagConstraints);

        jLabel10.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel10.setText("Pincode :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel10, gridBagConstraints);

        empPincode_jtf.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(empPincode_jtf, gridBagConstraints);

        jLabel11.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel11.setText("Mobile :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel11, gridBagConstraints);

        empMobile_jtf.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(empMobile_jtf, gridBagConstraints);

        jLabel12.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel12.setText("Landline :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel12, gridBagConstraints);

        empLandline_jtf.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(empLandline_jtf, gridBagConstraints);

        jLabel13.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel13.setText("E-Mail :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel13, gridBagConstraints);

        empEmail_jtf.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(empEmail_jtf, gridBagConstraints);

        jLabel14.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel14.setText("Department :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel14, gridBagConstraints);

        empDepartment_jcb.setEditable(true);
        empDepartment_jcb.setPreferredSize(new java.awt.Dimension(200, 25));
        empDepartment_jcb.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                empDepartment_jcbActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(empDepartment_jcb, gridBagConstraints);

        jLabel15.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel15.setText("Designation :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel15, gridBagConstraints);

        empDesignation_jcb.setEditable(true);
        empDesignation_jcb.setPreferredSize(new java.awt.Dimension(200, 25));
        empDesignation_jcb.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                empDesignation_jcbActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel1.add(empDesignation_jcb, gridBagConstraints);

        jPanel3.setBackground(new java.awt.Color(242, 242, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new java.awt.GridBagLayout());

        edit_jb.setBackground(new java.awt.Color(86, 132, 191));
        edit_jb.setText("Edit");
        edit_jb.setPreferredSize(new java.awt.Dimension(100, 27));
        edit_jb.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                edit_jbMouseClicked(evt);
            }
        });
        edit_jb.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                edit_jbKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel3.add(edit_jb, gridBagConstraints);

        update_jb.setBackground(new java.awt.Color(185, 197, 31));
        update_jb.setText("Update");
        update_jb.setPreferredSize(new java.awt.Dimension(100, 27));
        update_jb.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                update_jbMouseClicked(evt);
            }
        });
        update_jb.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                update_jbKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel3.add(update_jb, gridBagConstraints);

        delete_jb.setBackground(new java.awt.Color(191, 0, 0));
        delete_jb.setForeground(new java.awt.Color(255, 255, 255));
        delete_jb.setText("Delete");
        delete_jb.setPreferredSize(new java.awt.Dimension(100, 27));
        delete_jb.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                delete_jbMouseClicked(evt);
            }
        });
        delete_jb.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                delete_jbKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel3.add(delete_jb, gridBagConstraints);

        close_jb.setBackground(new java.awt.Color(86, 132, 191));
        close_jb.setMnemonic('c');
        close_jb.setText("Close");
        close_jb.setPreferredSize(new java.awt.Dimension(100, 27));
        close_jb.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                close_jbActionPerformed(evt);
            }
        });
        close_jb.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                close_jbKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel3.add(close_jb, gridBagConstraints);

        new_jb.setBackground(new java.awt.Color(86, 132, 191));
        new_jb.setText("New");
        new_jb.setPreferredSize(new java.awt.Dimension(100, 27));
        new_jb.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                new_jbMouseClicked(evt);
            }
        });
        new_jb.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                new_jbKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel3.add(new_jb, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 16;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        jPanel1.add(jPanel3, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setText("Search :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(jLabel4, gridBagConstraints);

        searchEmployees_jcb.setEditable(true);
        searchEmployees_jcb.setPreferredSize(new java.awt.Dimension(250, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel1.add(searchEmployees_jcb, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        jPanel1.add(jSeparator1, gridBagConstraints);

        empName_jtf.setPreferredSize(new java.awt.Dimension(250, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(empName_jtf, gridBagConstraints);

        searchEmp_jb.setBackground(new java.awt.Color(185, 197, 31));
        searchEmp_jb.setText("Search");
        searchEmp_jb.setPreferredSize(new java.awt.Dimension(100, 27));
        searchEmp_jb.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                searchEmp_jbMouseClicked(evt);
            }
        });
        searchEmp_jb.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                searchEmp_jbKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(searchEmp_jb, gridBagConstraints);

        jLabel16.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel16.setText("Salary :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 0);
        jPanel1.add(jLabel16, gridBagConstraints);

        salary_jtf.setPreferredSize(new java.awt.Dimension(120, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel1.add(salary_jtf, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        setBounds(0, 0, 524, 579);
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        
        form_InternalFrameOpened();
        
    }//GEN-LAST:event_formInternalFrameOpened

    private void form_InternalFrameOpened()
    {
        
        Dimension desktopSize = NewMDIApplication.desktopbg_jlbl.getSize();
        Dimension jInternalFrameSize = this.getSize();
        this.setLocation((desktopSize.width - jInternalFrameSize.width)/2,(desktopSize.height- jInternalFrameSize.height)/2);
        //-----------------------
        
        AutoCompleteDecorator.decorate(searchEmployees_jcb);
        load_searchEmployees_jcb();
      
        AutoCompleteDecorator.decorate(empCity_jcb);
        AutoCompleteDecorator.decorate(empDistrict_jcb);
        AutoCompleteDecorator.decorate(empState_jcb);
        AutoCompleteDecorator.decorate(empCountry_jcb);
        AutoCompleteDecorator.decorate(empDepartment_jcb);
        AutoCompleteDecorator.decorate(empDesignation_jcb);
        
        load_empDepartment_jcb();
        load_empDesignation_jcb();
        
        empCity_jcb.setSelectedItem("");
        empDistrict_jcb.setSelectedItem("");
        empState_jcb.setSelectedItem("");
        empCountry_jcb.setSelectedItem("");
        //empDepartment_jcb.setSelectedItem("");
        //empDesignation_jcb.setSelectedItem("");
        
        disableControls();
        
    }
    
    private void disableControls()
    {
        
        empId_jtf.setEditable(false);
        empName_jtf.setEditable(false);
        browsePhoto_jb.setEnabled(false);
        removePhoto_jb.setEnabled(false);
        empAddress_jtf.setEditable(false);
        ((JTextField)empCity_jcb.getEditor().getEditorComponent()).setEditable(false);
        ((JTextField)empDistrict_jcb.getEditor().getEditorComponent()).setEditable(false);
        ((JTextField)empState_jcb.getEditor().getEditorComponent()).setEditable(false);
        ((JTextField)empCountry_jcb.getEditor().getEditorComponent()).setEditable(false);
        empPincode_jtf.setEditable(false);
        empMobile_jtf.setEditable(false);
        empLandline_jtf.setEditable(false);
        empEmail_jtf.setEditable(false);
        ((JTextField)empDepartment_jcb.getEditor().getEditorComponent()).setEditable(false);
        ((JTextField)empDesignation_jcb.getEditor().getEditorComponent()).setEditable(false);
        update_jb.setEnabled(false);
        delete_jb.setEnabled(false);
        edit_jb.setEnabled(true);
        
    }
    
    private void enableControls()
    {
        
        empId_jtf.setEditable(true);
        empName_jtf.setEditable(true);
        browsePhoto_jb.setEnabled(true);
        removePhoto_jb.setEnabled(true);
        empAddress_jtf.setEditable(true);
        ((JTextField)empCity_jcb.getEditor().getEditorComponent()).setEditable(true);
        ((JTextField)empDistrict_jcb.getEditor().getEditorComponent()).setEditable(true);
        ((JTextField)empState_jcb.getEditor().getEditorComponent()).setEditable(true);
        ((JTextField)empCountry_jcb.getEditor().getEditorComponent()).setEditable(true);
        empPincode_jtf.setEditable(true);
        empMobile_jtf.setEditable(true);
        empLandline_jtf.setEditable(true);
        empEmail_jtf.setEditable(true);
        ((JTextField)empDepartment_jcb.getEditor().getEditorComponent()).setEditable(true);
        ((JTextField)empDesignation_jcb.getEditor().getEditorComponent()).setEditable(true);
        update_jb.setEnabled(true);
        delete_jb.setEnabled(true);
        edit_jb.setEnabled(false);
        
    }
    
    private void load_searchEmployees_jcb()
    {
        
        try
        {
            
            searchEmployees_jcb.removeAllItems();
            
            EmployeeViewEdit_BLL stud_enro_bll = new EmployeeViewEdit_BLL();
            
            ArrayList<String> empNamesArr = stud_enro_bll.getEmployeeNames();
            
            for(int i = 0 ; i < empNamesArr.size() ; i ++)
            {

                String empName = empNamesArr.get(i);
                searchEmployees_jcb.addItem(empName);
                
            }
            
            searchEmployees_jcb.setSelectedItem("");
        }
        catch(Exception e)
        {
            
            JOptionPane.showMessageDialog(this, "EmployeeViewEdit : load_searchEmployees_jcb" +e);
            
        }
        
    }
    
    private void displayEmpDetails()
    {
        
        try
        {
            
            photo_jlbl.setText("");
            
            load_empDepartment_jcb();
            load_empDesignation_jcb();
            
            String empNameID = searchEmployees_jcb.getSelectedItem().toString();
            String empID = empNameID.substring(empNameID.lastIndexOf("|")+1,empNameID.length()).trim();
            
            EmployeeViewEdit_BLL employeeViewEdit_BLL = new EmployeeViewEdit_BLL();
            ArrayList<String> employeeDetArr = employeeViewEdit_BLL.getEmployeeDetails(empID);
            
            empId_jtf.setText(employeeDetArr.get(0));
            empName_jtf.setText(employeeDetArr.get(1));
            if(employeeDetArr.get(2).equals("NULL"))
            {
                
                photo_jlbl.setIcon(null);
                photo_jlbl.setText("No Photo");
                
            }
            else
            {
                //Convert string to image
                byte[] imageDataBytes = Base64.getDecoder().decode(employeeDetArr.get(2));
                InputStream in = new ByteArrayInputStream(imageDataBytes);
                BufferedImage image = ImageIO.read(in);
                photo_jlbl.setIcon(new ImageIcon(scaleImage(image,BufferedImage.TYPE_INT_RGB,132,132)));
                
            }
            empAddress_jtf.setText(employeeDetArr.get(3));
            city = employeeDetArr.get(4);
            ((JTextField)empCity_jcb.getEditor().getEditorComponent()).setText(city);
            district = employeeDetArr.get(5);
            ((JTextField)empDistrict_jcb.getEditor().getEditorComponent()).setText(district);
            state = employeeDetArr.get(6);
            ((JTextField)empState_jcb.getEditor().getEditorComponent()).setText(state);
            country = employeeDetArr.get(7);
            ((JTextField)empCountry_jcb.getEditor().getEditorComponent()).setText(country);
            empPincode_jtf.setText(employeeDetArr.get(8));
            empMobile_jtf.setText(employeeDetArr.get(9));
            empLandline_jtf.setText(employeeDetArr.get(10));
            empEmail_jtf.setText(employeeDetArr.get(11));
            department = employeeDetArr.get(12);
            ((JTextField)empDepartment_jcb.getEditor().getEditorComponent()).setText(department);
            designation = employeeDetArr.get(13);
            ((JTextField)empDesignation_jcb.getEditor().getEditorComponent()).setText(designation);
            
            image_format = employeeDetArr.get(14);
            id = employeeDetArr.get(15);
            
        }
        catch(Exception e)
        {
            
            JOptionPane.showMessageDialog(this, "EmployeeViewEdit : getEmployeeDetails" +e);
            
        }
    }
    
    private void load_empDepartment_jcb()
    {
        
        try
        {
            
            empDepartment_jcb.removeAllItems();
            
            EmployeeViewEdit_BLL stud_enro_bll = new EmployeeViewEdit_BLL();
            
            ArrayList<String> departmentsArr = stud_enro_bll.getDepartments();
            
            for(int i = 0 ; i < departmentsArr.size() ; i ++)
            {

                String department_ = departmentsArr.get(i);
                empDepartment_jcb.addItem(department_);
                
            }
            
            ((JTextField)empDepartment_jcb.getEditor().getEditorComponent()).setText("");
        }
        catch(Exception e)
        {
            
            JOptionPane.showMessageDialog(this, "EmployeeViewEdit : load_empDepartment_jcb: "+e);
            
        }
        
    }
    
    private void load_empDesignation_jcb()
    {
        
        try
        {
            
            empDesignation_jcb.removeAllItems();
            
            EmployeeViewEdit_BLL stud_enro_bll = new EmployeeViewEdit_BLL();
            
            ArrayList<String> designationArr = stud_enro_bll.getDesignations();
            
            for(int i = 0 ; i < designationArr.size() ; i ++)
            {

                String designation_ = designationArr.get(i);
                empDesignation_jcb.addItem(designation_);
                
            }
            
            ((JTextField)empDesignation_jcb.getEditor().getEditorComponent()).setText("");
        }
        catch(Exception e)
        {
            
            JOptionPane.showMessageDialog(this, "EmployeeViewEdit : load_empDesignation_jcb: "+e);
            
        }
        
    }
    
    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        // TODO add your handling code here:
        
        instance = null;
        
    }//GEN-LAST:event_formInternalFrameClosed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:
        
        instance = null;
        
    }//GEN-LAST:event_formInternalFrameClosing

    private void browsePhoto_jbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_browsePhoto_jbMouseClicked
        // TODO add your handling code here:
        
        browsePhoto_jb_MouseClicked();
        
    }//GEN-LAST:event_browsePhoto_jbMouseClicked

    private void removePhoto_jbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removePhoto_jbMouseClicked
        // TODO add your handling code here:
        
        removePhoto_jb_MouseClicked();
        
    }//GEN-LAST:event_removePhoto_jbMouseClicked

    private void searchEmp_jbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchEmp_jbMouseClicked
        // TODO add your handling code here:
        
        if(searchEmployees_jcb.getSelectedIndex() == -1 || searchEmployees_jcb.getSelectedItem() == null || searchEmployees_jcb.getSelectedItem().toString().equals(""))
        {
        
            JOptionPane.showMessageDialog(null,"Select a valid Employee ID/Name.","Success",JOptionPane.INFORMATION_MESSAGE);
        
        }
        else
        {
            
            searchEmp_jb_MouseClicked();
            
        }
        
    }//GEN-LAST:event_searchEmp_jbMouseClicked

    private void empDepartment_jcbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empDepartment_jcbActionPerformed
        // TODO add your handling code here:
        
       
        empDepartment_jcb_ActionPerformed(evt);
        
    }//GEN-LAST:event_empDepartment_jcbActionPerformed

    private void empDesignation_jcbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empDesignation_jcbActionPerformed
        // TODO add your handling code here:
        
       empDesignation_jcb_ActionPerformed();
        
    }//GEN-LAST:event_empDesignation_jcbActionPerformed

    private void empDesignation_jcb_ActionPerformed()
    {
        
        if(edit_jb.isEnabled() == true)
        {
            
            ((JTextField)empDesignation_jcb.getEditor().getEditorComponent()).setText(designation);

        }
        
    }
    
    private void edit_jbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_edit_jbMouseClicked
        // TODO add your handling code here:
        
        edit_jb_MouseClicked();
        
    }//GEN-LAST:event_edit_jbMouseClicked

    private void new_jbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_new_jbMouseClicked
        // TODO add your handling code here:
        
        new_jb_MouseClicked();
        
    }//GEN-LAST:event_new_jbMouseClicked

    private void update_jbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_update_jbMouseClicked
        // TODO add your handling code here:
        
        update_jb_MouseClicked();
        
    }//GEN-LAST:event_update_jbMouseClicked

    private void empCity_jcbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empCity_jcbActionPerformed
        // TODO add your handling code here:
        
        empCity_jb_ActionPerformed();
        
    }//GEN-LAST:event_empCity_jcbActionPerformed

    private void empDistrict_jcbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empDistrict_jcbActionPerformed
        // TODO add your handling code here:
        
        empDistrict_jcb_ActionPerformed();
        
    }//GEN-LAST:event_empDistrict_jcbActionPerformed

    private void empState_jcbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empState_jcbActionPerformed
        // TODO add your handling code here:
        
        empState_jcb_ActionPerformed();
        
    }//GEN-LAST:event_empState_jcbActionPerformed

    private void empCountry_jcbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empCountry_jcbActionPerformed
        // TODO add your handling code here:
        
        empCountry_jcb_ActionPerformed();
        
    }//GEN-LAST:event_empCountry_jcbActionPerformed

    private void delete_jbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_delete_jbMouseClicked
        // TODO add your handling code here:
        
        delete_jb_MouseClicked();
        
    }//GEN-LAST:event_delete_jbMouseClicked

    private void searchEmp_jbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchEmp_jbKeyPressed
        // TODO add your handling code here:
        
        searchEmp_jb_KeyPressed(evt);
        
    }//GEN-LAST:event_searchEmp_jbKeyPressed

    private void browsePhoto_jbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_browsePhoto_jbKeyPressed
        // TODO add your handling code here:
        
        browsePhoto_jb_KeyPressed(evt);
        
    }//GEN-LAST:event_browsePhoto_jbKeyPressed

    private void removePhoto_jbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_removePhoto_jbKeyPressed
        // TODO add your handling code here:
        
        removePhoto_jb_KeyPressed(evt);
        
    }//GEN-LAST:event_removePhoto_jbKeyPressed

    private void edit_jbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edit_jbKeyPressed
        // TODO add your handling code here:
        
        edit_jb_KeyPressed(evt);
        
    }//GEN-LAST:event_edit_jbKeyPressed

    private void update_jbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_update_jbKeyPressed
        // TODO add your handling code here:
        
        update_jb_KeyPressed(evt);
        
    }//GEN-LAST:event_update_jbKeyPressed

    private void delete_jbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_delete_jbKeyPressed
        // TODO add your handling code here:
        
        delete_jb_KeyPressed(evt);
        
    }//GEN-LAST:event_delete_jbKeyPressed

    private void new_jbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_new_jbKeyPressed
        // TODO add your handling code here:
        
        new_jb_KeyPressed(evt);
        
    }//GEN-LAST:event_new_jbKeyPressed

    private void close_jbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_close_jbKeyPressed
        // TODO add your handling code here:
        
        close_jb_KeyPressed(evt);
        
    }//GEN-LAST:event_close_jbKeyPressed

    private void close_jbActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_close_jbActionPerformed
    {//GEN-HEADEREND:event_close_jbActionPerformed
        this.dispose();
    }//GEN-LAST:event_close_jbActionPerformed

    private void close_jb_KeyPressed(java.awt.event.KeyEvent evt)
    {
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            
            this.dispose();
            
        }
        
    }
    
    private void close_jb_MouseClicked()
    {
        
        this.dispose();
        
    }
    
    private void new_jb_KeyPressed(java.awt.event.KeyEvent evt)
    {
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            
            newData();
            
        }
        
    }
    
    private void delete_jb_KeyPressed(java.awt.event.KeyEvent evt)
    {
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            
            deleteData();
            
        }
        
    }
    
    private void update_jb_KeyPressed(java.awt.event.KeyEvent evt)
    {
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            
            updateData();
            
        }
        
    }
    
    private void edit_jb_KeyPressed(java.awt.event.KeyEvent evt)
    {
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            
            enableControls();
            
        }
        
    }
    
    private void removePhoto_jb_KeyPressed(java.awt.event.KeyEvent evt)
    {
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            
            imagefile = null;
            photo_jlbl.setIcon(null);
            
        }
        
    }
    
    private void browsePhoto_jb_KeyPressed(java.awt.event.KeyEvent evt)
    {
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            
            loadImage();
            
        }
        
    }
    
    private void searchEmp_jb_KeyPressed(java.awt.event.KeyEvent evt)
    {
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            
            displayEmpDetails();
            
        }
        
    }
    
    private void delete_jb_MouseClicked()
    {
        
        deleteData();
        
    }
    
    private void deleteData()
    {
        
        try 
        {
            
            EmployeeViewEdit_BLL employeeViewEdit_BLL = new EmployeeViewEdit_BLL();
            employeeViewEdit_BLL.passEmpDetForDelete(id);
            
            if(employeeViewEdit_BLL.get_operation_status().equals("success"))
            {

                JOptionPane.showMessageDialog(this, "Operation Successful.", "Success", JOptionPane.INFORMATION_MESSAGE);
                newData();
                load_searchEmployees_jcb();
                new_jb.requestFocusInWindow();

            }
            
        } catch (Exception e) 
        {
            
            JOptionPane.showMessageDialog(this,"deleteData: "+e);
            
        }
        
    }
    
    private void empCountry_jcb_ActionPerformed()
    {
        
        if(edit_jb.isEnabled() == true)
        {
            empCountry_jcb.setSelectedItem(country);
        }
        
    }
    
    private void empState_jcb_ActionPerformed()
    {
        
        if(edit_jb.isEnabled() == true)
        {
            empState_jcb.setSelectedItem(state);
        }
        
    }
    
    private void empDistrict_jcb_ActionPerformed()
    {
        
        if(edit_jb.isEnabled() == true)
        {
            empDistrict_jcb.setSelectedItem(district);
        }
        
    }
    
    private void empCity_jb_ActionPerformed()
    {
       
        if(edit_jb.isEnabled() == true)
        {
            empCity_jcb.setSelectedItem(city);
            
        }
        
    }
    
    private void update_jb_MouseClicked()
    {
        
        updateData();
        
    }
    
    private void updateData()
    {
        
        if(validation() == true)
        {
            try
            {
               
                String employee_id = empId_jtf.getText();
                String employee_name = empName_jtf.getText();

                //Get image form label and convert it into string
                String photoAsString = null;
                if(photo_jlbl.getIcon() != null)
                {
                    ImageIcon ic = (ImageIcon)photo_jlbl.getIcon();
                    Image image = ic.getImage();
                    
                    ByteArrayOutputStream bos = new ByteArrayOutputStream();
                    BufferedImage bi = new BufferedImage(image.getWidth(this), image.getHeight(this),BufferedImage.TYPE_INT_RGB);
                    Graphics g = bi.createGraphics();
                    g.drawImage(image, 0, 0, null);
                    g.dispose();
                    ImageIO.write(bi, image_format, bos);
                    byte[] imageBytes = bos.toByteArray();
                    photoAsString = Base64.getEncoder().encodeToString(imageBytes);
                    bos.close();
                }
                else
                {
                    
                    photoAsString = null;
                    image_format = null;
                    
                }
               
                String address = empAddress_jtf.getText();
                String city = empCity_jcb.getSelectedItem().toString();
                String district = empDistrict_jcb.getSelectedItem().toString();
                String state = empState_jcb.getSelectedItem().toString();
                String country = empCountry_jcb.getSelectedItem().toString();
                String pincode = empPincode_jtf.getText();
                String mobile = empMobile_jtf.getText();
                String landline = empLandline_jtf.getText();
                String email = empEmail_jtf.getText();
                String department_ = empDepartment_jcb.getSelectedItem().toString();
                String designation_ = empDesignation_jcb.getSelectedItem().toString();
                String userid = "";
                String user_type = "Admin";
                String institution_id = "NA";
                String salary = salary_jtf.getText();

                EmployeeViewEdit_BLL employeeViewEdit_BLL = new EmployeeViewEdit_BLL();
                employeeViewEdit_BLL.passEmpDetForUpdate(id, employee_id, employee_name, photoAsString, address, city, district, state, country, pincode, mobile, landline, email, department_, designation_, userid, user_type, institution_id, image_format, salary);
                
                if(employeeViewEdit_BLL.get_operation_status().equals("success"))
                {
                     
                    JOptionPane.showMessageDialog(null,"Operation Successful.","Success",JOptionPane.INFORMATION_MESSAGE);
                    load_searchEmployees_jcb();
                    disableControls();
                    new_jb.requestFocusInWindow();
                     
                }

            }
            catch(Exception e)
            {

                JOptionPane.showMessageDialog(this, "EmployeeViewEdit : updateData()" +e);

            }
        }
        
    }
    
    private void edit_jb_MouseClicked()
    {
      
        enableControls();
        
    }
    
    private void empDepartment_jcb_ActionPerformed(java.awt.event.ActionEvent evt)
    {
        if(edit_jb.isEnabled() == true)
        {
            
            ((JTextField)empDepartment_jcb.getEditor().getEditorComponent()).setText(department);

        }
        
    }
    
    private void searchEmp_jb_MouseClicked()
    {
        
        displayEmpDetails();
        
    }
    
    private void new_jb_MouseClicked()
    {
        
        newData();
        
    }
    
    private void newData()
    {
       
        empId_jtf.setText("");
        empName_jtf.setText("");
        photo_jlbl.setIcon(null);
        empAddress_jtf.setText("");
        ((JTextField)empCity_jcb.getEditor().getEditorComponent()).setText("");
        ((JTextField)empDistrict_jcb.getEditor().getEditorComponent()).setText("");
        ((JTextField)empState_jcb.getEditor().getEditorComponent()).setText("");
        ((JTextField)empCountry_jcb.getEditor().getEditorComponent()).setText("");
        empPincode_jtf.setText("");
        empMobile_jtf.setText("");
        empLandline_jtf.setText("");
        empEmail_jtf.setText("");
        ((JTextField)empDepartment_jcb.getEditor().getEditorComponent()).setText("");
        ((JTextField)empDesignation_jcb.getEditor().getEditorComponent()).setText("");
        edit_jb.setEnabled( true);
        
        disableControls();
        searchEmployees_jcb.requestFocusInWindow();
        
    }

    private void removePhoto_jb_MouseClicked()
    {
        
        imagefile = null;
        photo_jlbl.setIcon(null);
        
    }
    
    private void browsePhoto_jb_MouseClicked()
    {
        
        loadImage();
        
    }
    
    private void loadImage()
    {
        
        try
        {
       
            String imagename = empId_jtf.getText();
            
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setSelectedFile(new File(imagename+".jpeg"));
            FileNameExtensionFilter filter = new FileNameExtensionFilter("Image", "jpg", "png", "tif");
            fileChooser.addChoosableFileFilter(filter);

            fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));

            int result = fileChooser.showOpenDialog(this);
            if (result == JFileChooser.APPROVE_OPTION) 
            {

                imagefile = fileChooser.getSelectedFile();
                image_format = getImageFormat(imagefile.toString());
                photo_jlbl.setIcon(new ImageIcon(scaleImage(ImageIO.read(imagefile),BufferedImage.TYPE_INT_RGB,132,132)));
                photo_jlbl.setText("");
                
            }
            
        }
        catch(Exception e)
        {
            
            JOptionPane.showMessageDialog(null, "EmployeeViewEdit:loadImage() :"+e);
            
        }
        
    }
    
    public static BufferedImage scaleImage(BufferedImage image, int imageType, int newWidth, int newHeight) {
        // Make sure the aspect ratio is maintained, so the image is not distorted
        double thumbRatio = (double) newWidth / (double) newHeight;
        int imageWidth = image.getWidth(null);
        int imageHeight = image.getHeight(null);
        double aspectRatio = (double) imageWidth / (double) imageHeight;

        if (thumbRatio < aspectRatio) {
            newHeight = (int) (newWidth / aspectRatio);
        } else {
            newWidth = (int) (newHeight * aspectRatio);
        }

        // Draw the scaled image
        BufferedImage newImage = new BufferedImage(newWidth, newHeight,
                imageType);
        Graphics2D graphics2D = newImage.createGraphics();
        graphics2D.setRenderingHint(RenderingHints.KEY_INTERPOLATION,
            RenderingHints.VALUE_INTERPOLATION_BILINEAR);
        graphics2D.drawImage(image, 0, 0, newWidth, newHeight, null);

        return newImage;
    }
    
    public static String getImageFormat(String ImageName) 
    {

        return (ImageName.substring((ImageName.indexOf('.'))+1,ImageName.length()));
        
    }
    
    private boolean validation()
    {
        
        boolean valid = true;
        
        if(empId_jtf.getText().equals(""))
        {
            
            JOptionPane.showMessageDialog(this,"Please specify Employee ID.","Error",JOptionPane.ERROR_MESSAGE); 
            
            valid = false;
            
        }
        else if(empName_jtf.getText().equals(""))
        {
            
            JOptionPane.showMessageDialog(this,"Please specify Employee Name.","Error",JOptionPane.ERROR_MESSAGE); 
            
            valid = false;
            
        }
        else if(empAddress_jtf.getText().equals(""))
        {
            
            JOptionPane.showMessageDialog(this,"Please specify the Address.","Error",JOptionPane.ERROR_MESSAGE); 
            
            valid = false;
            
        }
        else if(empCity_jcb.getSelectedItem() ==  null || empCity_jcb.getSelectedItem().toString().equals(""))
        {
            
            JOptionPane.showMessageDialog(this,"Please specify City.","Error",JOptionPane.ERROR_MESSAGE); 
            
            valid = false;
            
        }
        else if(empDistrict_jcb.getSelectedItem() ==  null || empDistrict_jcb.getSelectedItem().toString().equals(""))
        {
            
            JOptionPane.showMessageDialog(this,"Please specify District.","Error",JOptionPane.ERROR_MESSAGE); 
            
            valid = false;
            
        }
        else if(empState_jcb.getSelectedItem() ==  null || empState_jcb.getSelectedItem().toString().equals(""))
        {
            
            JOptionPane.showMessageDialog(this,"Please specify State.","Error",JOptionPane.ERROR_MESSAGE); 
            
            valid = false;
            
        }
        else if(empCountry_jcb.getSelectedItem() ==  null || empCountry_jcb.getSelectedItem().toString().equals(""))
        {
            
            JOptionPane.showMessageDialog(this,"Please specify Country.","Error",JOptionPane.ERROR_MESSAGE); 
            
            valid = false;
            
        }
        else if(empMobile_jtf.getText().equals(""))
        {
            
            JOptionPane.showMessageDialog(this,"Please specify Mobile Number.","Error",JOptionPane.ERROR_MESSAGE); 
            
            valid = false;
            
        }
        else if(empDepartment_jcb.getSelectedItem() ==  null || empDepartment_jcb.getSelectedItem().toString().equals(""))
        {
            
            JOptionPane.showMessageDialog(this,"Please specify Department.","Error",JOptionPane.ERROR_MESSAGE); 
            
            valid = false;
            
        }
        else if(empDesignation_jcb.getSelectedItem() ==  null || empDesignation_jcb.getSelectedItem().toString().equals(""))
        {
            
            JOptionPane.showMessageDialog(this,"Please specify Designation.","Error",JOptionPane.ERROR_MESSAGE); 
            
            valid = false;
            
        }
        
        return valid;
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browsePhoto_jb;
    private javax.swing.JButton close_jb;
    private javax.swing.JButton delete_jb;
    private javax.swing.JButton edit_jb;
    private javax.swing.JTextField empAddress_jtf;
    private javax.swing.JComboBox<String> empCity_jcb;
    private javax.swing.JComboBox<String> empCountry_jcb;
    private javax.swing.JComboBox<String> empDepartment_jcb;
    private javax.swing.JComboBox<String> empDesignation_jcb;
    private javax.swing.JComboBox<String> empDistrict_jcb;
    private javax.swing.JTextField empEmail_jtf;
    private javax.swing.JTextField empId_jtf;
    private javax.swing.JTextField empLandline_jtf;
    private javax.swing.JTextField empMobile_jtf;
    private javax.swing.JTextField empName_jtf;
    private javax.swing.JTextField empPincode_jtf;
    private javax.swing.JComboBox<String> empState_jcb;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton new_jb;
    private javax.swing.JLabel photo_jlbl;
    private javax.swing.JButton removePhoto_jb;
    private javax.swing.JTextField salary_jtf;
    private javax.swing.JButton searchEmp_jb;
    private javax.swing.JComboBox<String> searchEmployees_jcb;
    private javax.swing.JButton update_jb;
    // End of variables declaration//GEN-END:variables
}
