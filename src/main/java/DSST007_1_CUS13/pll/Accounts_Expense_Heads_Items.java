package DSST007_1_CUS13.pll;


import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author praveen
 */
public class Accounts_Expense_Heads_Items extends javax.swing.JInternalFrame {
       
    private static Accounts_Expense_Heads_Items this_instance;
    expensetype_list_jlst_SelectionHandler sh = new expensetype_list_jlst_SelectionHandler();
    expenseitems_list_jlst_SelectionHandler wtunitlist_jl_sh = new expenseitems_list_jlst_SelectionHandler();
    
    public Accounts_Expense_Heads_Items() {
        initComponents();

        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        editexpensetype_jb = new javax.swing.JButton();
        editexpensetype_jtf = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        deleteexpensetype_jb = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        expensetype_list_jlst = new javax.swing.JList();
        updateexpensetype_jb = new javax.swing.JButton();
        newexpensetype_cb = new javax.swing.JComboBox();
        clearexpensetype_jb = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        listallexpensetypes_jb = new javax.swing.JButton();
        expensetypesearch_cb = new javax.swing.JComboBox();
        savenewexpensetype_bt = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jPanel5 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        updateexpenseitem_jb = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        expenseitems_list_jlst = new javax.swing.JList();
        newexpenseitem_jb = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        expenseitemssearch_jcb = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        clearexpenseitems_jb = new javax.swing.JButton();
        deleteexpenseitem_jb = new javax.swing.JButton();
        editexpenseitem_jb = new javax.swing.JButton();
        newexpenseitem_jcb = new javax.swing.JComboBox();
        editexpenseitem_jtf = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        listallexpenseitems_jb = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jPanel6 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        setClosable(true);
        setTitle("Setup - > Expense Categories and Items");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/DSST007_1_CUS13/InstabizTrader Logo Final 35x35.png"))); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener()
        {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt)
            {
                formInternalFrameOpened(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt)
            {
                formInternalFrameClosed(evt);
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt)
            {
            }
        });

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBackground(new java.awt.Color(242, 242, 255));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        editexpensetype_jb.setBackground(new java.awt.Color(185, 197, 31));
        editexpensetype_jb.setText("Edit");
        editexpensetype_jb.setPreferredSize(new java.awt.Dimension(74, 27));
        editexpensetype_jb.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                editexpensetype_jbMousePressed(evt);
            }
        });
        editexpensetype_jb.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                editexpensetype_jbKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel3.add(editexpensetype_jb, gridBagConstraints);

        editexpensetype_jtf.setPreferredSize(new java.awt.Dimension(220, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 5);
        jPanel3.add(editexpensetype_jtf, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("Expense Category :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        jPanel3.add(jLabel2, gridBagConstraints);

        deleteexpensetype_jb.setBackground(new java.awt.Color(185, 197, 31));
        deleteexpensetype_jb.setText("Delete");
        deleteexpensetype_jb.setPreferredSize(new java.awt.Dimension(74, 27));
        deleteexpensetype_jb.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                deleteexpensetype_jbMouseClicked(evt);
            }
        });
        deleteexpensetype_jb.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                deleteexpensetype_jbKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel3.add(deleteexpensetype_jb, gridBagConstraints);

        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane2.setPreferredSize(new java.awt.Dimension(250, 400));

        expensetype_list_jlst.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        expensetype_list_jlst.setSelectionBackground(new java.awt.Color(86, 132, 191));
        expensetype_list_jlst.setSelectionForeground(new java.awt.Color(255, 255, 254));
        expensetype_list_jlst.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                expensetype_list_jlstFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                expensetype_list_jlstFocusLost(evt);
            }
        });
        jScrollPane2.setViewportView(expensetype_list_jlst);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 10;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(jScrollPane2, gridBagConstraints);

        updateexpensetype_jb.setBackground(new java.awt.Color(185, 197, 31));
        updateexpensetype_jb.setText("Update");
        updateexpensetype_jb.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                updateexpensetype_jbMouseClicked(evt);
            }
        });
        updateexpensetype_jb.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                updateexpensetype_jbKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel3.add(updateexpensetype_jb, gridBagConstraints);

        newexpensetype_cb.setEditable(true);
        newexpensetype_cb.setNextFocusableComponent(savenewexpensetype_bt);
        newexpensetype_cb.setPreferredSize(new java.awt.Dimension(220, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 5);
        jPanel3.add(newexpensetype_cb, gridBagConstraints);

        clearexpensetype_jb.setBackground(new java.awt.Color(185, 197, 31));
        clearexpensetype_jb.setText("Clear");
        clearexpensetype_jb.setPreferredSize(new java.awt.Dimension(74, 27));
        clearexpensetype_jb.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                clearexpensetype_jbMousePressed(evt);
            }
        });
        clearexpensetype_jb.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                clearexpensetype_jbKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel3.add(clearexpensetype_jb, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setText("New Expense Type :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 2, 0, 0);
        jPanel3.add(jLabel3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel3.add(jSeparator1, gridBagConstraints);

        listallexpensetypes_jb.setBackground(new java.awt.Color(185, 197, 31));
        listallexpensetypes_jb.setText("<<List All");
        listallexpensetypes_jb.setPreferredSize(new java.awt.Dimension(90, 27));
        listallexpensetypes_jb.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                listallexpensetypes_jbMouseClicked(evt);
            }
        });
        listallexpensetypes_jb.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                listallexpensetypes_jbKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel3.add(listallexpensetypes_jb, gridBagConstraints);

        expensetypesearch_cb.setEditable(true);
        expensetypesearch_cb.setPreferredSize(new java.awt.Dimension(220, 25));
        expensetypesearch_cb.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                expensetypesearch_cbActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 5);
        jPanel3.add(expensetypesearch_cb, gridBagConstraints);

        savenewexpensetype_bt.setBackground(new java.awt.Color(185, 197, 31));
        savenewexpensetype_bt.setText("Save");
        savenewexpensetype_bt.setPreferredSize(new java.awt.Dimension(74, 27));
        savenewexpensetype_bt.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                savenewexpensetype_btMouseClicked(evt);
            }
        });
        savenewexpensetype_bt.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                savenewexpensetype_btKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel3.add(savenewexpensetype_bt, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setText("Search :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 2, 0, 0);
        jPanel3.add(jLabel4, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel5.setText("Edit :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 2, 0, 0);
        jPanel3.add(jLabel5, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel3.add(jSeparator4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jPanel3, gridBagConstraints);

        jTabbedPane1.addTab("Expence Category", jPanel1);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jPanel4.setBackground(new java.awt.Color(242, 242, 255));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        updateexpenseitem_jb.setBackground(new java.awt.Color(185, 197, 31));
        updateexpenseitem_jb.setText("Update");
        updateexpenseitem_jb.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                updateexpenseitem_jbMouseClicked(evt);
            }
        });
        updateexpenseitem_jb.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                updateexpenseitem_jbKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel4.add(updateexpenseitem_jb, gridBagConstraints);

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(250, 400));
        jScrollPane1.setRequestFocusEnabled(false);

        expenseitems_list_jlst.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        expenseitems_list_jlst.setSelectionBackground(new java.awt.Color(86, 132, 191));
        expenseitems_list_jlst.setSelectionForeground(new java.awt.Color(255, 255, 254));
        expenseitems_list_jlst.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                expenseitems_list_jlstFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                expenseitems_list_jlstFocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(expenseitems_list_jlst);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 10;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel4.add(jScrollPane1, gridBagConstraints);

        newexpenseitem_jb.setBackground(new java.awt.Color(185, 197, 31));
        newexpenseitem_jb.setText("Save");
        newexpenseitem_jb.setPreferredSize(new java.awt.Dimension(74, 27));
        newexpenseitem_jb.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                newexpenseitem_jbMouseClicked(evt);
            }
        });
        newexpenseitem_jb.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                newexpenseitem_jbKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel4.add(newexpenseitem_jb, gridBagConstraints);

        jLabel7.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel7.setText("New Item :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 2, 0, 0);
        jPanel4.add(jLabel7, gridBagConstraints);

        expenseitemssearch_jcb.setEditable(true);
        expenseitemssearch_jcb.setPreferredSize(new java.awt.Dimension(220, 25));
        expenseitemssearch_jcb.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                expenseitemssearch_jcbActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 5);
        jPanel4.add(expenseitemssearch_jcb, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText("Expense Items :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        jPanel4.add(jLabel1, gridBagConstraints);

        clearexpenseitems_jb.setBackground(new java.awt.Color(185, 197, 31));
        clearexpenseitems_jb.setText("Clear");
        clearexpenseitems_jb.setPreferredSize(new java.awt.Dimension(74, 27));
        clearexpenseitems_jb.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                clearexpenseitems_jbMousePressed(evt);
            }
        });
        clearexpenseitems_jb.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                clearexpenseitems_jbKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel4.add(clearexpenseitems_jb, gridBagConstraints);

        deleteexpenseitem_jb.setBackground(new java.awt.Color(185, 197, 31));
        deleteexpenseitem_jb.setText("Delete");
        deleteexpenseitem_jb.setPreferredSize(new java.awt.Dimension(74, 27));
        deleteexpenseitem_jb.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                deleteexpenseitem_jbMouseClicked(evt);
            }
        });
        deleteexpenseitem_jb.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                deleteexpenseitem_jbKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel4.add(deleteexpenseitem_jb, gridBagConstraints);

        editexpenseitem_jb.setBackground(new java.awt.Color(185, 197, 31));
        editexpenseitem_jb.setText("Edit");
        editexpenseitem_jb.setPreferredSize(new java.awt.Dimension(74, 27));
        editexpenseitem_jb.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                editexpenseitem_jbMousePressed(evt);
            }
        });
        editexpenseitem_jb.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                editexpenseitem_jbKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel4.add(editexpenseitem_jb, gridBagConstraints);

        newexpenseitem_jcb.setEditable(true);
        newexpenseitem_jcb.setNextFocusableComponent(newexpenseitem_jb);
        newexpenseitem_jcb.setPreferredSize(new java.awt.Dimension(220, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 5);
        jPanel4.add(newexpenseitem_jcb, gridBagConstraints);

        editexpenseitem_jtf.setPreferredSize(new java.awt.Dimension(220, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 5);
        jPanel4.add(editexpenseitem_jtf, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel4.add(jSeparator2, gridBagConstraints);

        jLabel8.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel8.setText("Edit :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 2, 0, 0);
        jPanel4.add(jLabel8, gridBagConstraints);

        listallexpenseitems_jb.setBackground(new java.awt.Color(185, 197, 31));
        listallexpenseitems_jb.setText("<<List All");
        listallexpenseitems_jb.setPreferredSize(new java.awt.Dimension(90, 27));
        listallexpenseitems_jb.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                listallexpenseitems_jbMouseClicked(evt);
            }
        });
        listallexpenseitems_jb.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                listallexpenseitems_jbKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel4.add(listallexpenseitems_jb, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel6.setText("Search :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 2, 0, 0);
        jPanel4.add(jLabel6, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel4.add(jSeparator3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel5.add(jPanel4, gridBagConstraints);

        jTabbedPane1.addTab("Expense Items", jPanel5);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel6.setBackground(new java.awt.Color(242, 242, 255));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jButton1.setBackground(new java.awt.Color(86, 132, 191));
        jButton1.setText("Close");
        jButton1.setPreferredSize(new java.awt.Dimension(100, 27));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                jButton1KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 15, 0);
        jPanel6.add(jButton1, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setBounds(0, 0, 486, 541);
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        
    Dimension desktopSize = NewMDIApplication.desktopbg_jlbl.getSize();
    Dimension jInternalFrameSize = this.getSize();
    this.setLocation((desktopSize.width - jInternalFrameSize.width)/2,(desktopSize.height- jInternalFrameSize.height)/2);
        
        //-----------------------------
    //-----------------------
    
    AutoCompleteDecorator.decorate(expensetypesearch_cb);
    AutoCompleteDecorator.decorate(newexpensetype_cb);
    getExpenseTypes();
    
    AutoCompleteDecorator.decorate(expenseitemssearch_jcb);
    AutoCompleteDecorator.decorate(newexpenseitem_jcb);
    getAllExpenseItems();

    //-----------------------
    
    editexpensetype_jtf.setEnabled(false);
    updateexpensetype_jb.setEnabled(false);
    deleteexpensetype_jb.setEnabled(false);
    
    //-----------------------
    
    editexpenseitem_jtf.setEnabled(false);
    updateexpenseitem_jb.setEnabled(false);
    deleteexpenseitem_jb.setEnabled(false);
   
    listexpensetypes_To_expensetype_list_jlst();
    listexpenseitems_To_expenseitems_list_jlst();
    
    }//GEN-LAST:event_formInternalFrameOpened

    public static Accounts_Expense_Heads_Items getInstance() // Method
    {
        if (this_instance == null)
	{
            this_instance = new Accounts_Expense_Heads_Items();
	}
        return this_instance;
    }
    
    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        // TODO add your handling code here:
        
        this_instance = null;
       
    }//GEN-LAST:event_formInternalFrameClosed

    private void listexpensetypes_To_expensetype_list_jlst()
    {
        
              
        Connection con = DatabaseConnection.createConnection();

        try {

            DefaultListModel dlm = new DefaultListModel();
           
            
            //dlm.removeAllElements();

            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT DISTINCT expense_type FROM expense_types");
                    
            while (rs.next()) {

                String expensetype = rs.getString("expense_type");
              
                dlm.addElement(expensetype);

            }

            expensetype_list_jlst.setModel(dlm);
            
        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, e);

        } finally {

            if (con != null) {
                try {
                    con.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }

            }

        }
        
        
    }
    
    private void listexpenseitems_To_expenseitems_list_jlst()
    {
        
              
        Connection con = DatabaseConnection.createConnection();

        try {

            DefaultListModel dlm = new DefaultListModel();
           
            
            //dlm.removeAllElements();

            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT DISTINCT expense_item FROM expense_items");
                    
            while (rs.next()) {

                String expenseitem = rs.getString("expense_item");
              
                dlm.addElement(expenseitem);

            }

            expenseitems_list_jlst.setModel(dlm);
            
        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, e);

        } finally {

            if (con != null) {
                try {
                    con.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }

            }

        }
        
        
    }
    
    private void expensetype_list_jlstFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_expensetype_list_jlstFocusGained
        // TODO add your handling code here:
        
        if(expensetype_list_jlst.getModel().getSize() > 0)
        {
        
            try
            {

                if(expensetype_list_jlst.getSelectedIndex() == -1)
                {
                    
                    expensetype_list_jlst.setSelectionInterval(0, 0);
                    
                }
                
                expensetype_list_jlst.getSelectionModel().addListSelectionListener(sh);

                String value = Accounts_Expense_Heads_Items.expensetype_list_jlst.getSelectedValue().toString();

                Accounts_Expense_Heads_Items.editexpensetype_jtf.setText(value);

            }
            catch(Exception ex)
            {

                JOptionPane.showMessageDialog(null, ex);

            }
            
            
            
        }
        
    }//GEN-LAST:event_expensetype_list_jlstFocusGained

    private void expensetype_list_jlstFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_expensetype_list_jlstFocusLost
        // TODO add your handling code here:
        
        expensetype_list_jlst.getSelectionModel().removeListSelectionListener(sh);
        
    }//GEN-LAST:event_expensetype_list_jlstFocusLost

    private void expensetypesearch_cbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expensetypesearch_cbActionPerformed
        // TODO add your handling code here:
        
        try
        {
             DefaultListModel dlm = new DefaultListModel();
             expensetype_list_jlst.setModel(dlm);
             dlm.removeAllElements();
            
            if(expensetypesearch_cb.getSelectedItem()!=null && !expensetypesearch_cb.getSelectedItem().toString().equals("") && expensetypesearch_cb.getSelectedIndex() != -1)
            {
            
                String selectedpackagetype =  expensetypesearch_cb.getSelectedItem().toString();
                dlm.addElement(selectedpackagetype);
                
            }
            
        }
        catch(Exception ex)
        {
            
            JOptionPane.showMessageDialog(null, ex);
            
        }
        
    }//GEN-LAST:event_expensetypesearch_cbActionPerformed

    private void expenseitemssearch_jcbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expenseitemssearch_jcbActionPerformed
        // TODO add your handling code here:
       
        try
        {
            
            DefaultListModel dlm = new DefaultListModel();
            expenseitems_list_jlst.setModel(dlm);
            dlm.removeAllElements();
            
            if(expenseitemssearch_jcb.getSelectedItem()!=null && !expenseitemssearch_jcb.getSelectedItem().toString().equals("") && expenseitemssearch_jcb.getSelectedIndex() != -1)
            {
            
                String selectedwtunit =  expenseitemssearch_jcb.getSelectedItem().toString();
                dlm.addElement(selectedwtunit);

            }
            
        }
        catch(Exception ex)
        {
            
            JOptionPane.showMessageDialog(null, ex);
            
        }
        
    }//GEN-LAST:event_expenseitemssearch_jcbActionPerformed

    private void expenseitems_list_jlstFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_expenseitems_list_jlstFocusGained
        // TODO add your handling code here:
        
        if(expenseitems_list_jlst.getModel().getSize() > 0)
        {
            try
            {
                
                if(expenseitems_list_jlst.getSelectedIndex() == -1)
                {
                    
                    expenseitems_list_jlst.setSelectionInterval(0, 0);
                    
                }
                
                expenseitems_list_jlst.getSelectionModel().addListSelectionListener(wtunitlist_jl_sh);

                String value = Accounts_Expense_Heads_Items.expenseitems_list_jlst.getSelectedValue().toString();
                Accounts_Expense_Heads_Items.editexpenseitem_jtf.setText(value);
                
            }
            catch(Exception e)
            {
                
                JOptionPane.showMessageDialog(null, e);
                
            }
             
        }
        
    }//GEN-LAST:event_expenseitems_list_jlstFocusGained

    private void expenseitems_list_jlstFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_expenseitems_list_jlstFocusLost
        // TODO add your handling code here:
        
         expenseitems_list_jlst.getSelectionModel().removeListSelectionListener(wtunitlist_jl_sh);
        
    }//GEN-LAST:event_expenseitems_list_jlstFocusLost

    private void clearexpensetype_jbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_clearexpensetype_jbKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            
            newexpensetype_cb.setSelectedItem("");
            
        }
        
    }//GEN-LAST:event_clearexpensetype_jbKeyPressed

    private void clearexpensetype_jbMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearexpensetype_jbMousePressed
        // TODO add your handling code here:
        
        newexpensetype_cb.setSelectedItem("");
        
    }//GEN-LAST:event_clearexpensetype_jbMousePressed

    private void savenewexpensetype_btKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_savenewexpensetype_btKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {

            if(newexpensetype_cb.getSelectedItem()==null || newexpensetype_cb.getSelectedItem().toString().equals("") )
            {

                JOptionPane.showMessageDialog(this,"Please type a new Expense Type.","Error",JOptionPane.ERROR_MESSAGE);

            }
            else if(newexpensetype_cb.getSelectedIndex()!=-1)
            {

                JOptionPane.showMessageDialog(this,"Expense Type already saved:'"+newexpensetype_cb.getSelectedItem().toString()+"' ","Error",JOptionPane.ERROR_MESSAGE);

            }
            else
            {

                saveExpenseType();

            }
            
        }
        
    }//GEN-LAST:event_savenewexpensetype_btKeyPressed

    private void editexpensetype_jbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_editexpensetype_jbKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {

            editexpensetype_jtf.setEnabled(true);
            updateexpensetype_jb.setEnabled(true);
            deleteexpensetype_jb.setEnabled(true);
            
        }
        
        
    }//GEN-LAST:event_editexpensetype_jbKeyPressed

    private void editexpensetype_jbMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editexpensetype_jbMousePressed
        // TODO add your handling code here:
        
        editexpensetype_jtf.setEnabled(true);
        updateexpensetype_jb.setEnabled(true);
        deleteexpensetype_jb.setEnabled(true);
        
    }//GEN-LAST:event_editexpensetype_jbMousePressed

    private void updateexpensetype_jbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_updateexpensetype_jbKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            if(expensetype_list_jlst.getSelectedIndex()==-1)
            {

                JOptionPane.showMessageDialog(this,"Please select Expense Type to change.","Error",JOptionPane.ERROR_MESSAGE);

            }
            else if(editexpensetype_jtf.getText()==null || editexpensetype_jtf.getText().equals(""))
            {

                JOptionPane.showMessageDialog(this,"Please type a new Expense Type.","Error",JOptionPane.ERROR_MESSAGE);

            }
            else
            {

                updateExpenseType();

            }

        }
        
    }//GEN-LAST:event_updateexpensetype_jbKeyPressed

    private void deleteexpensetype_jbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_deleteexpensetype_jbKeyPressed
        // TODO add your handling code here:
        
    if(evt.getKeyCode()==KeyEvent.VK_ENTER)
    {

        if(expensetype_list_jlst.getSelectedIndex()==-1)
        {

            JOptionPane.showMessageDialog(this,"Please select an Expense Type.","Error",JOptionPane.ERROR_MESSAGE);

        }
        else if(editexpensetype_jtf.getText()==null || editexpensetype_jtf.getText().equals(""))
        {

            JOptionPane.showMessageDialog(this,"Please type an Expense Type.","Error",JOptionPane.ERROR_MESSAGE);

        }
        else
        {

            deleteExpenseType();

        }

    }   
        
    }//GEN-LAST:event_deleteexpensetype_jbKeyPressed

    private void listallexpenseitems_jbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_listallexpenseitems_jbKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {

            listexpenseitems_To_expenseitems_list_jlst();
            
        }
        
    }//GEN-LAST:event_listallexpenseitems_jbKeyPressed

    private void clearexpenseitems_jbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_clearexpenseitems_jbKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {

            newexpenseitem_jcb.setSelectedItem("");
            
        }
        
    }//GEN-LAST:event_clearexpenseitems_jbKeyPressed

    private void clearexpenseitems_jbMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearexpenseitems_jbMousePressed
        // TODO add your handling code here:
        
        newexpenseitem_jcb.setSelectedItem("");
        
    }//GEN-LAST:event_clearexpenseitems_jbMousePressed

    private void newexpenseitem_jbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newexpenseitem_jbKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {

            if(newexpenseitem_jcb.getSelectedItem()==null || newexpenseitem_jcb.getSelectedItem().toString().equals("") )
            {

                JOptionPane.showMessageDialog(this,"Please type a new Expense Item.","Error",JOptionPane.ERROR_MESSAGE);

            }
            else if(newexpenseitem_jcb.getSelectedIndex()!=-1)
            {

                JOptionPane.showMessageDialog(this,"This Expense Item already saved:'"+newexpensetype_cb.getSelectedItem().toString()+"' ","Error",JOptionPane.ERROR_MESSAGE);

            }
            else
            {

                saveExpenseItems();


            }
            
        }
        
    }//GEN-LAST:event_newexpenseitem_jbKeyPressed

    private void editexpenseitem_jbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_editexpenseitem_jbKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {

            editexpenseitem_jtf.setEnabled(true);
            updateexpenseitem_jb.setEnabled(true);
            deleteexpenseitem_jb.setEnabled(true);
            
        }
        
    }//GEN-LAST:event_editexpenseitem_jbKeyPressed

    private void editexpenseitem_jbMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editexpenseitem_jbMousePressed
        // TODO add your handling code here:
        
        editexpenseitem_jtf.setEnabled(true);
        updateexpenseitem_jb.setEnabled(true);
        deleteexpenseitem_jb.setEnabled(true);
        
    }//GEN-LAST:event_editexpenseitem_jbMousePressed

    private void updateexpenseitem_jbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_updateexpenseitem_jbKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {

            if(expenseitems_list_jlst.getSelectedIndex()==-1)
            {

                JOptionPane.showMessageDialog(this,"Please select an Expense Item to change.","Error",JOptionPane.ERROR_MESSAGE);

            }
            else if(editexpenseitem_jtf.getText()==null || editexpenseitem_jtf.getText().equals(""))
            {

                JOptionPane.showMessageDialog(this,"Please type a new Expense Item","Error",JOptionPane.ERROR_MESSAGE);

            }
            else
            {

                updateexpenseitems();

            }
            
        }
        
    }//GEN-LAST:event_updateexpenseitem_jbKeyPressed

    private void deleteexpenseitem_jbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_deleteexpenseitem_jbKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {

            if(expenseitems_list_jlst.getSelectedIndex()==-1)
            {

                JOptionPane.showMessageDialog(this,"Please select an Expense Item.","Error",JOptionPane.ERROR_MESSAGE);

            }
            else if(editexpenseitem_jtf.getText()==null || editexpenseitem_jtf.getText().equals(""))
            {

                JOptionPane.showMessageDialog(this,"Please type an Expense Item.","Error",JOptionPane.ERROR_MESSAGE);

            }
            else
            {

                delete_expense_items();

            }

        }
        
        
    }//GEN-LAST:event_deleteexpenseitem_jbKeyPressed

    private void savenewexpensetype_btMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_savenewexpensetype_btMouseClicked
        // TODO add your handling code here:
        
        if(newexpensetype_cb.getSelectedItem() !=null)
        {

            if(((JTextField)newexpensetype_cb.getEditor().getEditorComponent()).getText().equals("") )
            {

                JOptionPane.showMessageDialog(this,"Please type a new Expense Type.","Error",JOptionPane.ERROR_MESSAGE);

            }
            else if(newexpensetype_cb.getSelectedIndex() != -1)
            {

                JOptionPane.showMessageDialog(this,"Expense Type already saved:'"+newexpensetype_cb.getSelectedItem().toString()+"' ","Error",JOptionPane.ERROR_MESSAGE);

            }
            else
            {
               
                saveExpenseType();

            }
        }
        
        
        
    }//GEN-LAST:event_savenewexpensetype_btMouseClicked

    private void newexpenseitem_jbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newexpenseitem_jbMouseClicked
        // TODO add your handling code here:
        
        if(newexpenseitem_jcb.getSelectedItem()!= null || newexpenseitem_jcb.getSelectedItem().toString().equals("") )
        {

            if(newexpenseitem_jcb.getSelectedItem().toString().equals("") )
            {
                
                JOptionPane.showMessageDialog(this,"Specify an Expense Item.","Error",JOptionPane.ERROR_MESSAGE);
                
            }
            else if(newexpenseitem_jcb.getSelectedIndex()!=-1)
            {

                JOptionPane.showMessageDialog(this,"This Expense Item is already saved:'"+newexpenseitem_jcb.getSelectedItem().toString()+"' ","Error",JOptionPane.ERROR_MESSAGE);

            }
            else
            {

                saveExpenseItems();


            }
        }
        
    }//GEN-LAST:event_newexpenseitem_jbMouseClicked

    private void listallexpensetypes_jbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_listallexpensetypes_jbKeyPressed
        // TODO add your handling code here:

        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {

            listexpensetypes_To_expensetype_list_jlst();

        }

    }//GEN-LAST:event_listallexpensetypes_jbKeyPressed

    private void updateexpenseitem_jbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateexpenseitem_jbMouseClicked
        // TODO add your handling code here:
        
        if(expenseitems_list_jlst.getSelectedIndex()==-1)
        {

            JOptionPane.showMessageDialog(this,"Please select an Expense Item.","Error",JOptionPane.ERROR_MESSAGE);

        }
        else if(editexpenseitem_jtf.getText()==null || editexpenseitem_jtf.getText().equals(""))
        {

            JOptionPane.showMessageDialog(this,"Please type an Expense Item.","Error",JOptionPane.ERROR_MESSAGE);

        }
        else
        {

            updateexpenseitems();

        }
        
    }//GEN-LAST:event_updateexpenseitem_jbMouseClicked

    private void deleteexpenseitem_jbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteexpenseitem_jbMouseClicked
        // TODO add your handling code here:
        
        if(expenseitems_list_jlst.getSelectedIndex()==-1)
        {

            JOptionPane.showMessageDialog(this,"Please select an Expense Item.","Error",JOptionPane.ERROR_MESSAGE);

        }
        else if(editexpenseitem_jtf.getText()==null || editexpenseitem_jtf.getText().equals(""))
        {

            JOptionPane.showMessageDialog(this,"Please type an Expense Item.","Error",JOptionPane.ERROR_MESSAGE);

        }
        else
        {
            
            delete_expense_items();
            
        }
         
        
    }//GEN-LAST:event_deleteexpenseitem_jbMouseClicked

    private void deleteexpensetype_jbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteexpensetype_jbMouseClicked
        // TODO add your handling code here:
        
        if(expensetype_list_jlst.getSelectedIndex()==-1)
        {

            JOptionPane.showMessageDialog(this,"Please select an Expense Type.","Error",JOptionPane.ERROR_MESSAGE);

        }
        else if(editexpensetype_jtf.getText()==null || editexpensetype_jtf.getText().equals(""))
        {

            JOptionPane.showMessageDialog(this,"Please type an Expense Type.","Error",JOptionPane.ERROR_MESSAGE);

        }
        else
        {
            
            deleteExpenseType();
            
        }
          
    }//GEN-LAST:event_deleteexpensetype_jbMouseClicked

    private void updateexpensetype_jbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateexpensetype_jbMouseClicked
        // TODO add your handling code here:
        
        if(expensetype_list_jlst.getSelectedIndex()==-1)
        {

            JOptionPane.showMessageDialog(this,"Please select an Expense Type.","Error",JOptionPane.ERROR_MESSAGE);

        }
        else if(editexpensetype_jtf.getText()==null || editexpensetype_jtf.getText().equals(""))
        {

            JOptionPane.showMessageDialog(this,"Please type an Expense Type.","Error",JOptionPane.ERROR_MESSAGE);

        }
        else
        {

            updateExpenseType();

        }
        
    }//GEN-LAST:event_updateexpensetype_jbMouseClicked

    private void listallexpensetypes_jbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listallexpensetypes_jbMouseClicked
        // TODO add your handling code here:
        
        listexpensetypes_To_expensetype_list_jlst();
        
    }//GEN-LAST:event_listallexpensetypes_jbMouseClicked

    private void listallexpenseitems_jbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listallexpenseitems_jbMouseClicked
        // TODO add your handling code here:
        
        listexpenseitems_To_expenseitems_list_jlst();
        
    }//GEN-LAST:event_listallexpenseitems_jbMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        
        this.dispose();
        
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            
            this.dispose();
            
        }
        
    }//GEN-LAST:event_jButton1KeyPressed

    private void saveExpenseItems()
    {
        
                
        boolean error = false;
        boolean status = false;
        
        Connection con = DatabaseConnection.createConnection();
        
        try
        {

            String expenseitem = newexpenseitem_jcb.getSelectedItem().toString();


            String sql="INSERT into expense_items(expense_item) values(?)";
            PreparedStatement stmt = con.prepareStatement(sql);

            stmt.setString(1,expenseitem);

            stmt.executeUpdate();

            status = true;

        }
        catch(Exception e)
        {

            JOptionPane.showMessageDialog(null, e);
             error = true;

        }
        finally
        {

            if(con!=null)
            {
                try {
                    con.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }

            }

        }
        if(error==false && status==true)
        {

            JOptionPane.showMessageDialog(this,"Operation Successful.","Success",JOptionPane.INFORMATION_MESSAGE);
             
            getAllExpenseItems();
            listexpenseitems_To_expenseitems_list_jlst();

        }
        
    }
    
    private void deleteExpenseType()
    {
                 
        boolean error = false;
        boolean status = false;
        
        Connection con = DatabaseConnection.createConnection();

        try 
        {

            //String oldpackagetype = packagetypelist_jl.getSelectedValue().toString();
            String expensetype = editexpensetype_jtf.getText();

            String sql5 = "DELETE FROM expense_types  WHERE expense_type='" +expensetype+ "' ";
            PreparedStatement stmt5 = con.prepareStatement(sql5);
            stmt5.executeUpdate();

            status = true;


        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, e);
            error = true;

        } finally {

            if (con != null) {
                try {
                    con.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }

            }

        }

        if (error == false && status == true) {

            JOptionPane.showMessageDialog(this, "Operation Successful.", "Success", JOptionPane.INFORMATION_MESSAGE);
            
            getExpenseTypes();
            listexpensetypes_To_expensetype_list_jlst();
            
            deleteexpensetype_jb.setEnabled(false);
            editexpensetype_jtf.setEnabled(false);
            updateexpensetype_jb.setEnabled(false);
         

        }

        
    }
    
    private void delete_expense_items()
    {
        
                             
        boolean error = false;
        boolean status = false;
        Connection con = DatabaseConnection.createConnection();

        try {

            //String oldpackagetype = packagetypelist_jl.getSelectedValue().toString();
            String expenseitem = editexpenseitem_jtf.getText();

            String sql1 = "DELETE FROM expense_items  WHERE expense_item='" +expenseitem+ "' ";
            PreparedStatement stmt1 = con.prepareStatement(sql1);
            stmt1.executeUpdate();

            status = true;


        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, e);
            error = true;

        } finally {

            if (con != null) {
                try {
                    con.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }

            }

        }

        if (error == false && status == true) {

            JOptionPane.showMessageDialog(this, "Operation Successful.", "Success", JOptionPane.INFORMATION_MESSAGE);
            
            getAllExpenseItems();
            listexpenseitems_To_expenseitems_list_jlst();
            
            deleteexpenseitem_jb.setEnabled(false);
            editexpenseitem_jtf.setEnabled(false);
            updateexpenseitem_jb.setEnabled(false);
          
        }
 
        
    }
    
    public void updateExpenseType()
    {
             
        boolean error = false;
        boolean status = false;
        Connection con = DatabaseConnection.createConnection();

        try {

            String oldexpensetype = expensetype_list_jlst.getSelectedValue().toString();
            String newexpensetype = editexpensetype_jtf.getText();

            String sql1 = "UPDATE expense_types SET expense_type=? WHERE expense_type='" + oldexpensetype + "' ";
            PreparedStatement stmt1 = con.prepareStatement(sql1);
            stmt1.setString(1,newexpensetype);
            stmt1.executeUpdate();

            status = true;

        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, e);
            error = true;

        } finally {

            if (con != null) {
                try {
                    con.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }

            }

        }

        if (error == false && status == true) {

            JOptionPane.showMessageDialog(this, "Operation Successful.", "Success", JOptionPane.INFORMATION_MESSAGE);
            
            getExpenseTypes();
            listexpensetypes_To_expensetype_list_jlst();
            
            editexpensetype_jtf.setEnabled(false);
            updateexpensetype_jb.setEnabled(false);

        }

        
    }
    
    private void updateexpenseitems()
    {
        
        boolean error = false;
        boolean status = false;
        Connection con = DatabaseConnection.createConnection();

        try {

            String oldexpenseitem = expenseitems_list_jlst.getSelectedValue().toString();
            String newexpenseitem = editexpenseitem_jtf.getText();

            String sql1 = "UPDATE expense_items SET expense_item=? WHERE expense_item='" + oldexpenseitem + "' ";
            PreparedStatement stmt1 = con.prepareStatement(sql1);
            stmt1.setString(1,newexpenseitem);
            stmt1.executeUpdate();

            status = true;

        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, e);
            error = true;

        } finally {

            if (con != null) {
                try {
                    con.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }

            }

        }

        if (error == false && status == true) {

            JOptionPane.showMessageDialog(this, "Operation Successful.", "Success", JOptionPane.INFORMATION_MESSAGE);
            
            getAllExpenseItems();
            listexpenseitems_To_expenseitems_list_jlst();
          
            editexpenseitem_jtf.setEnabled(false);
            updateexpenseitem_jb.setEnabled(false);
            
        }

        
    }
    
    public void saveExpenseType()
    { 
        
        boolean error = false;
        boolean status = false;
        
        Connection con = DatabaseConnection.createConnection();
        
        try
        {

            String expensetype = newexpensetype_cb.getSelectedItem().toString();

            String sql="INSERT into expense_types(expense_type) values(?)";
            PreparedStatement stmt = con.prepareStatement(sql);

            stmt.setString(1,expensetype);

            stmt.executeUpdate();

            status = true;

        }
        catch(Exception e)
        {

            JOptionPane.showMessageDialog(null, e);
             error = true;

        }
        finally
        {

            if(con!=null)
            {
                try {
                    con.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }

            }

        }
        if(error==false && status==true)
        {

            JOptionPane.showMessageDialog(this,"Operation Successful.","Success",JOptionPane.INFORMATION_MESSAGE);
             
            getExpenseTypes();
            listexpensetypes_To_expensetype_list_jlst();
            

        }
        
        
    }
    
    public void getExpenseTypes()
    {

        expensetypesearch_cb.removeAllItems();
        newexpensetype_cb.removeAllItems();
        Connection con = DatabaseConnection.createConnection();

        try {

            expensetypesearch_cb.removeAllItems();

            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT DISTINCT expense_type FROM expense_types");

            while (rs.next()) {

                String expensetype = rs.getString("expense_type");
                expensetypesearch_cb.addItem(expensetype);
                newexpensetype_cb.addItem(expensetype);

            }
            
            //packagetypesearch_cb.addItem("");
            expensetypesearch_cb.setSelectedItem("");
            
            //newpt_cb.addItem("");
            newexpensetype_cb.setSelectedItem("");

        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, e);

        } finally {

            if (con != null) {
                try {
                    con.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }

            }

        }
        
        
    }
    
    private void getAllExpenseItems()
    {
        
        Connection con = DatabaseConnection.createConnection();

        try {

            expenseitemssearch_jcb.removeAllItems();
            newexpenseitem_jcb.removeAllItems();

            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT DISTINCT expense_item FROM expense_items");

            while (rs.next()) {

                String item = rs.getString("expense_item");
                expenseitemssearch_jcb.addItem(item);
                newexpenseitem_jcb.addItem(item);

            }

            //searchwtunits_jcb.addItem("");
            expenseitemssearch_jcb.setSelectedItem("");

            //newwu_jcb.addItem("");
            newexpenseitem_jcb.setSelectedItem("");

        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, e);

        } finally {

            if (con != null) {
                try {
                    con.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }

            }

        }
        
    }




    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton clearexpenseitems_jb;
    private javax.swing.JButton clearexpensetype_jb;
    private javax.swing.JButton deleteexpenseitem_jb;
    private javax.swing.JButton deleteexpensetype_jb;
    private javax.swing.JButton editexpenseitem_jb;
    public static javax.swing.JTextField editexpenseitem_jtf;
    private javax.swing.JButton editexpensetype_jb;
    public static javax.swing.JTextField editexpensetype_jtf;
    public static javax.swing.JList expenseitems_list_jlst;
    private javax.swing.JComboBox expenseitemssearch_jcb;
    public static javax.swing.JList expensetype_list_jlst;
    private javax.swing.JComboBox expensetypesearch_cb;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton listallexpenseitems_jb;
    private javax.swing.JButton listallexpensetypes_jb;
    private javax.swing.JButton newexpenseitem_jb;
    public static javax.swing.JComboBox newexpenseitem_jcb;
    public static javax.swing.JComboBox newexpensetype_cb;
    private javax.swing.JButton savenewexpensetype_bt;
    private javax.swing.JButton updateexpenseitem_jb;
    private javax.swing.JButton updateexpensetype_jb;
    // End of variables declaration//GEN-END:variables
}

class expensetype_list_jlst_SelectionHandler implements ListSelectionListener
{

    @Override
    public void valueChanged(ListSelectionEvent e) {

        
        try
        {
            
            String value = Accounts_Expense_Heads_Items.expensetype_list_jlst.getSelectedValue().toString();

            Accounts_Expense_Heads_Items.editexpensetype_jtf.setText(value);
            
        }
        catch(Exception ex)
        {
            
            JOptionPane.showMessageDialog(null, ex);
            
        }
   

    }
    
    
    
}

class expenseitems_list_jlst_SelectionHandler implements ListSelectionListener
{

    @Override
    public void valueChanged(ListSelectionEvent e) {

        
        try
        {
            
            String value = Accounts_Expense_Heads_Items.expenseitems_list_jlst.getSelectedValue().toString();

            Accounts_Expense_Heads_Items.editexpenseitem_jtf.setText(value);
            
        }
        catch(Exception ex)
        {
            
            JOptionPane.showMessageDialog(null, ex);
            
        }
   

    }
    
    
    
}