package DSST007_1_CUS13.pll;


import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author praveen
 */
public class Accounts_Income_Heads_Items extends javax.swing.JInternalFrame {
       
    private static Accounts_Income_Heads_Items this_nstance;
    incometypelist_jl_SelectionHandler sh = new incometypelist_jl_SelectionHandler();
    incomeitemlist_jl_SelectionHandler wtunitlist_jl_sh = new incomeitemlist_jl_SelectionHandler();
    
    public Accounts_Income_Heads_Items() {
        initComponents();

        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        close_jb = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        editpt_tf = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        ptdelet_jb = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        incometypelist_jl = new javax.swing.JList();
        ptupdate_jb = new javax.swing.JButton();
        newpt_cb = new javax.swing.JComboBox();
        jButton7 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        listallpt_bt = new javax.swing.JButton();
        packagetypesearch_cb = new javax.swing.JComboBox();
        savenewpt_bt = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jPanel5 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        wtunitupdate_jb = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        incomeitemlist_jl = new javax.swing.JList();
        newwu_jb = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        searchwtunits_jcb = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        wtunitdelete_jb = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        newwu_jcb = new javax.swing.JComboBox();
        editwtunit_jtf = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        listallwtunits_jb = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        setClosable(true);
        setTitle("Setup - > Income Categories and Items");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/DSST007_1_CUS13/InstabizTrader Logo Final 35x35.png"))); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener()
        {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt)
            {
                formInternalFrameOpened(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt)
            {
                formInternalFrameClosed(evt);
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt)
            {
            }
        });

        jPanel2.setBackground(new java.awt.Color(242, 242, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new java.awt.GridBagLayout());

        close_jb.setBackground(new java.awt.Color(86, 132, 191));
        close_jb.setMnemonic('s');
        close_jb.setText("Close");
        close_jb.setPreferredSize(new java.awt.Dimension(100, 27));
        close_jb.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                close_jbMouseClicked(evt);
            }
        });
        close_jb.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                close_jbKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 15, 0);
        jPanel2.add(close_jb, gridBagConstraints);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBackground(new java.awt.Color(242, 242, 255));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jButton9.setBackground(new java.awt.Color(185, 197, 31));
        jButton9.setText("Edit");
        jButton9.setPreferredSize(new java.awt.Dimension(74, 27));
        jButton9.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                jButton9MousePressed(evt);
            }
        });
        jButton9.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                jButton9KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel3.add(jButton9, gridBagConstraints);

        editpt_tf.setPreferredSize(new java.awt.Dimension(220, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 5);
        jPanel3.add(editpt_tf, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("Income Category :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        jPanel3.add(jLabel2, gridBagConstraints);

        ptdelet_jb.setBackground(new java.awt.Color(185, 197, 31));
        ptdelet_jb.setText("Delete");
        ptdelet_jb.setPreferredSize(new java.awt.Dimension(74, 27));
        ptdelet_jb.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                ptdelet_jbMouseClicked(evt);
            }
        });
        ptdelet_jb.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                ptdelet_jbKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel3.add(ptdelet_jb, gridBagConstraints);

        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane2.setPreferredSize(new java.awt.Dimension(250, 400));

        incometypelist_jl.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        incometypelist_jl.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        incometypelist_jl.setSelectionBackground(new java.awt.Color(86, 132, 191));
        incometypelist_jl.setSelectionForeground(new java.awt.Color(255, 255, 254));
        incometypelist_jl.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                incometypelist_jlFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                incometypelist_jlFocusLost(evt);
            }
        });
        jScrollPane2.setViewportView(incometypelist_jl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 10;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(jScrollPane2, gridBagConstraints);

        ptupdate_jb.setBackground(new java.awt.Color(185, 197, 31));
        ptupdate_jb.setText("Update");
        ptupdate_jb.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                ptupdate_jbMouseClicked(evt);
            }
        });
        ptupdate_jb.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                ptupdate_jbKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel3.add(ptupdate_jb, gridBagConstraints);

        newpt_cb.setEditable(true);
        newpt_cb.setNextFocusableComponent(savenewpt_bt);
        newpt_cb.setPreferredSize(new java.awt.Dimension(220, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 5);
        jPanel3.add(newpt_cb, gridBagConstraints);

        jButton7.setBackground(new java.awt.Color(185, 197, 31));
        jButton7.setText("Clear");
        jButton7.setPreferredSize(new java.awt.Dimension(74, 27));
        jButton7.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                jButton7MousePressed(evt);
            }
        });
        jButton7.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                jButton7KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel3.add(jButton7, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setText("New Income Type :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 2, 0, 0);
        jPanel3.add(jLabel3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel3.add(jSeparator1, gridBagConstraints);

        listallpt_bt.setBackground(new java.awt.Color(185, 197, 31));
        listallpt_bt.setText("<<List All");
        listallpt_bt.setPreferredSize(new java.awt.Dimension(90, 27));
        listallpt_bt.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                listallpt_btMouseClicked(evt);
            }
        });
        listallpt_bt.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                listallpt_btKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel3.add(listallpt_bt, gridBagConstraints);

        packagetypesearch_cb.setEditable(true);
        packagetypesearch_cb.setPreferredSize(new java.awt.Dimension(220, 25));
        packagetypesearch_cb.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                packagetypesearch_cbActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 5);
        jPanel3.add(packagetypesearch_cb, gridBagConstraints);

        savenewpt_bt.setBackground(new java.awt.Color(185, 197, 31));
        savenewpt_bt.setText("Save");
        savenewpt_bt.setPreferredSize(new java.awt.Dimension(74, 27));
        savenewpt_bt.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                savenewpt_btMouseClicked(evt);
            }
        });
        savenewpt_bt.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                savenewpt_btKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel3.add(savenewpt_bt, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setText("Search :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 2, 0, 0);
        jPanel3.add(jLabel4, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel5.setText("Edit :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 2, 0, 0);
        jPanel3.add(jLabel5, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel3.add(jSeparator3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jPanel3, gridBagConstraints);

        jTabbedPane1.addTab("Income Category", jPanel1);

        jPanel4.setBackground(new java.awt.Color(242, 242, 255));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        wtunitupdate_jb.setBackground(new java.awt.Color(185, 197, 31));
        wtunitupdate_jb.setText("Update");
        wtunitupdate_jb.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                wtunitupdate_jbMouseClicked(evt);
            }
        });
        wtunitupdate_jb.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                wtunitupdate_jbKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel4.add(wtunitupdate_jb, gridBagConstraints);

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(250, 400));
        jScrollPane1.setRequestFocusEnabled(false);

        incomeitemlist_jl.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        incomeitemlist_jl.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        incomeitemlist_jl.setSelectionBackground(new java.awt.Color(86, 132, 191));
        incomeitemlist_jl.setSelectionForeground(new java.awt.Color(255, 255, 254));
        incomeitemlist_jl.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                incomeitemlist_jlFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                incomeitemlist_jlFocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(incomeitemlist_jl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 10;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel4.add(jScrollPane1, gridBagConstraints);

        newwu_jb.setBackground(new java.awt.Color(185, 197, 31));
        newwu_jb.setText("Save");
        newwu_jb.setPreferredSize(new java.awt.Dimension(74, 27));
        newwu_jb.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                newwu_jbMouseClicked(evt);
            }
        });
        newwu_jb.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                newwu_jbKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel4.add(newwu_jb, gridBagConstraints);

        jLabel7.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel7.setText("New Item :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 2, 0, 0);
        jPanel4.add(jLabel7, gridBagConstraints);

        searchwtunits_jcb.setEditable(true);
        searchwtunits_jcb.setPreferredSize(new java.awt.Dimension(220, 25));
        searchwtunits_jcb.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                searchwtunits_jcbActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 5);
        jPanel4.add(searchwtunits_jcb, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText("Income Items :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        jPanel4.add(jLabel1, gridBagConstraints);

        jButton2.setBackground(new java.awt.Color(185, 197, 31));
        jButton2.setText("Clear");
        jButton2.setPreferredSize(new java.awt.Dimension(74, 27));
        jButton2.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                jButton2MousePressed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                jButton2KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel4.add(jButton2, gridBagConstraints);

        wtunitdelete_jb.setBackground(new java.awt.Color(185, 197, 31));
        wtunitdelete_jb.setText("Delete");
        wtunitdelete_jb.setPreferredSize(new java.awt.Dimension(74, 27));
        wtunitdelete_jb.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                wtunitdelete_jbMouseClicked(evt);
            }
        });
        wtunitdelete_jb.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                wtunitdelete_jbKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel4.add(wtunitdelete_jb, gridBagConstraints);

        jButton4.setBackground(new java.awt.Color(185, 197, 31));
        jButton4.setText("Edit");
        jButton4.setPreferredSize(new java.awt.Dimension(74, 27));
        jButton4.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                jButton4MousePressed(evt);
            }
        });
        jButton4.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                jButton4KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel4.add(jButton4, gridBagConstraints);

        newwu_jcb.setEditable(true);
        newwu_jcb.setNextFocusableComponent(newwu_jb);
        newwu_jcb.setPreferredSize(new java.awt.Dimension(220, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 5);
        jPanel4.add(newwu_jcb, gridBagConstraints);

        editwtunit_jtf.setPreferredSize(new java.awt.Dimension(220, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 5);
        jPanel4.add(editwtunit_jtf, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel4.add(jSeparator2, gridBagConstraints);

        jLabel8.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel8.setText("Edit :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 2, 0, 0);
        jPanel4.add(jLabel8, gridBagConstraints);

        listallwtunits_jb.setBackground(new java.awt.Color(185, 197, 31));
        listallwtunits_jb.setText("<<List All");
        listallwtunits_jb.setPreferredSize(new java.awt.Dimension(90, 27));
        listallwtunits_jb.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                listallwtunits_jbMouseClicked(evt);
            }
        });
        listallwtunits_jb.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                listallwtunits_jbKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel4.add(listallwtunits_jb, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel6.setText("Search :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 2, 0, 0);
        jPanel4.add(jLabel6, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel4.add(jSeparator4, gridBagConstraints);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Income Items", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setBounds(0, 0, 486, 543);
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        
    Dimension desktopSize = NewMDIApplication.desktopbg_jlbl.getSize();
    Dimension jInternalFrameSize = this.getSize();
    this.setLocation((desktopSize.width - jInternalFrameSize.width)/2,(desktopSize.height- jInternalFrameSize.height)/2);
    
    //-----------------------
    
    AutoCompleteDecorator.decorate(packagetypesearch_cb);
    AutoCompleteDecorator.decorate(newpt_cb);
    getIncomeTypes();
    
    AutoCompleteDecorator.decorate(searchwtunits_jcb);
    AutoCompleteDecorator.decorate(newwu_jcb);
    getAllIncomeItems();

    //-----------------------
    
    editpt_tf.setEnabled(false);
    ptupdate_jb.setEnabled(false);
    ptdelet_jb.setEnabled(false);
    
    //-----------------------
    
    editwtunit_jtf.setEnabled(false);
    wtunitupdate_jb.setEnabled(false);
    wtunitdelete_jb.setEnabled(false);
   
    listincometypesToincometypelist_jl();
    listincomeitemsTowtunitlist_jl();
    
    }//GEN-LAST:event_formInternalFrameOpened

    public static Accounts_Income_Heads_Items getInstance() // Method
    {
        if (this_nstance == null)
	{
            this_nstance = new Accounts_Income_Heads_Items();
	}
        return this_nstance;
    }
    
    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        // TODO add your handling code here:
        
        this_nstance = null;
       
    }//GEN-LAST:event_formInternalFrameClosed

    private void listincometypesToincometypelist_jl()
    {
        
              
        Connection con = DatabaseConnection.createConnection();

        try {

            DefaultListModel dlm = new DefaultListModel();
           
            
            //dlm.removeAllElements();

            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT DISTINCT income_type FROM income_types");
                    
            while (rs.next()) {

                String income_type = rs.getString("income_type");
              
                dlm.addElement(income_type);

            }

            incometypelist_jl.setModel(dlm);
            
        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, e);

        } finally {

            if (con != null) {
                try {
                    con.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }

            }

        }
        
        
    }
    
    private void listincomeitemsTowtunitlist_jl()
    {
        
              
        Connection con = DatabaseConnection.createConnection();

        try {

            DefaultListModel dlm = new DefaultListModel();
           
            
            //dlm.removeAllElements();

            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT DISTINCT income_item FROM income_items");
                    
            while (rs.next()) {

                String item = rs.getString("income_item");
              
                dlm.addElement(item);

            }

            incomeitemlist_jl.setModel(dlm);
            
        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, e);

        } finally {

            if (con != null) {
                try {
                    con.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }

            }

        }
        
        
    }
    
    private void incometypelist_jlFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_incometypelist_jlFocusGained
        // TODO add your handling code here:
        
        if(incometypelist_jl.getModel().getSize() > 0)
        {
        
            try
            {
                
                if(incometypelist_jl.getSelectedIndex() == -1)
                {
                    
                    incometypelist_jl.setSelectionInterval(0, 0);
                    
                }
                 
                incometypelist_jl.getSelectionModel().addListSelectionListener(sh);

                String value = Accounts_Income_Heads_Items.incometypelist_jl.getSelectedValue().toString();

                Accounts_Income_Heads_Items.editpt_tf.setText(value);

            }
            catch(Exception ex)
            {

                JOptionPane.showMessageDialog(null, ex);

            }
            
            
            
        }
        
    }//GEN-LAST:event_incometypelist_jlFocusGained

    private void incometypelist_jlFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_incometypelist_jlFocusLost
        // TODO add your handling code here:
        
        incometypelist_jl.getSelectionModel().removeListSelectionListener(sh);
        
    }//GEN-LAST:event_incometypelist_jlFocusLost

    private void packagetypesearch_cbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_packagetypesearch_cbActionPerformed
        // TODO add your handling code here:
        
        try
        {
             DefaultListModel dlm = new DefaultListModel();
             incometypelist_jl.setModel(dlm);
             dlm.removeAllElements();
            
            if(packagetypesearch_cb.getSelectedItem()!=null && !packagetypesearch_cb.getSelectedItem().toString().equals("") && packagetypesearch_cb.getSelectedIndex() != -1)
            {
            
                String selectedpackagetype =  packagetypesearch_cb.getSelectedItem().toString();
                dlm.addElement(selectedpackagetype);
                
            }
            
        }
        catch(Exception ex)
        {
            
            JOptionPane.showMessageDialog(null, ex);
            
        }
        
    }//GEN-LAST:event_packagetypesearch_cbActionPerformed

    private void searchwtunits_jcbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchwtunits_jcbActionPerformed
        // TODO add your handling code here:
       
        try
        {
            
            DefaultListModel dlm = new DefaultListModel();
            incomeitemlist_jl.setModel(dlm);
            dlm.removeAllElements();
            
            if(searchwtunits_jcb.getSelectedItem()!=null && !searchwtunits_jcb.getSelectedItem().toString().equals("") && searchwtunits_jcb.getSelectedIndex() != -1)
            {
            
                String selectedwtunit =  searchwtunits_jcb.getSelectedItem().toString();
                dlm.addElement(selectedwtunit);

            }
            
        }
        catch(Exception ex)
        {
            
            JOptionPane.showMessageDialog(null, ex);
            
        }
        
    }//GEN-LAST:event_searchwtunits_jcbActionPerformed

    private void incomeitemlist_jlFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_incomeitemlist_jlFocusGained
        // TODO add your handling code here:
        
        if(incomeitemlist_jl.getModel().getSize() > 0)
        {
            try
            {
                    
                if(incomeitemlist_jl.getSelectedIndex() == -1)
                {
                    
                    incomeitemlist_jl.setSelectionInterval(0, 0);
                    
                }
                
                incomeitemlist_jl.getSelectionModel().addListSelectionListener(wtunitlist_jl_sh);

                String value = Accounts_Income_Heads_Items.incomeitemlist_jl.getSelectedValue().toString();
                Accounts_Income_Heads_Items.editwtunit_jtf.setText(value);
                
            }
            catch(Exception e)
            {
                
                JOptionPane.showMessageDialog(null, e);
                
            }
             
        }
        
    }//GEN-LAST:event_incomeitemlist_jlFocusGained

    private void incomeitemlist_jlFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_incomeitemlist_jlFocusLost
        // TODO add your handling code here:
        
         incomeitemlist_jl.getSelectionModel().removeListSelectionListener(wtunitlist_jl_sh);
        
    }//GEN-LAST:event_incomeitemlist_jlFocusLost

    private void jButton7KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton7KeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            
            newpt_cb.setSelectedItem("");
            
        }
        
    }//GEN-LAST:event_jButton7KeyPressed

    private void jButton7MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MousePressed
        // TODO add your handling code here:
        
        newpt_cb.setSelectedItem("");
        
    }//GEN-LAST:event_jButton7MousePressed

    private void savenewpt_btKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_savenewpt_btKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {

            if(newpt_cb.getSelectedItem()==null || newpt_cb.getSelectedItem().toString().equals("") )
            {

                JOptionPane.showMessageDialog(this,"Please type a new Package Type.","Error",JOptionPane.ERROR_MESSAGE);

            }
            else if(newpt_cb.getSelectedIndex()!=-1)
            {

                JOptionPane.showMessageDialog(this,"Package Type already saved:'"+newpt_cb.getSelectedItem().toString()+"' ","Error",JOptionPane.ERROR_MESSAGE);

            }
            else
            {

                saveIncomeType();

            }
            
        }
        
    }//GEN-LAST:event_savenewpt_btKeyPressed

    private void jButton9KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton9KeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {

            editpt_tf.setEnabled(true);
            ptupdate_jb.setEnabled(true);
            ptdelet_jb.setEnabled(true);
            
        }
        
        
    }//GEN-LAST:event_jButton9KeyPressed

    private void jButton9MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton9MousePressed
        // TODO add your handling code here:
        
        editpt_tf.setEnabled(true);
        ptupdate_jb.setEnabled(true);
        ptdelet_jb.setEnabled(true);
        
    }//GEN-LAST:event_jButton9MousePressed

    private void ptupdate_jbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ptupdate_jbKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            if(incometypelist_jl.getSelectedIndex()==-1)
            {

                JOptionPane.showMessageDialog(this,"Please select an Income Type.","Error",JOptionPane.ERROR_MESSAGE);

            }
            else if(editpt_tf.getText()==null || editpt_tf.getText().equals(""))
            {

                JOptionPane.showMessageDialog(this,"Please a type an Income Type.","Error",JOptionPane.ERROR_MESSAGE);

            }
            else
            {

                updateIncomeType();

            }

        }
        
    }//GEN-LAST:event_ptupdate_jbKeyPressed

    private void ptdelet_jbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ptdelet_jbKeyPressed
        // TODO add your handling code here:
        
     if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            
            if(incometypelist_jl.getSelectedIndex()==-1)
            {

                JOptionPane.showMessageDialog(this,"Please select an Income Type.","Error",JOptionPane.ERROR_MESSAGE);

            }
            else if(editpt_tf.getText()==null || editpt_tf.getText().equals(""))
            {

                JOptionPane.showMessageDialog(this,"Please a type an Income Type.","Error",JOptionPane.ERROR_MESSAGE);

            }
            else
            {
            
                deleteIncomeType();
                
            }
            
        }   
        
    }//GEN-LAST:event_ptdelet_jbKeyPressed

    private void listallwtunits_jbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_listallwtunits_jbKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {

            listincomeitemsTowtunitlist_jl();
            
        }
        
    }//GEN-LAST:event_listallwtunits_jbKeyPressed

    private void jButton2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {

            newwu_jcb.setSelectedItem("");
            
        }
        
    }//GEN-LAST:event_jButton2KeyPressed

    private void jButton2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MousePressed
        // TODO add your handling code here:
        
        newwu_jcb.setSelectedItem("");
        
    }//GEN-LAST:event_jButton2MousePressed

    private void newwu_jbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newwu_jbKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {

            if(newwu_jcb.getSelectedItem()==null || newwu_jcb.getSelectedItem().toString().equals("") )
            {

                JOptionPane.showMessageDialog(this,"Please type a new Weight Unit.","Error",JOptionPane.ERROR_MESSAGE);

            }
            else if(newwu_jcb.getSelectedIndex()!=-1)
            {

                JOptionPane.showMessageDialog(this,"This Unit already saved:'"+newpt_cb.getSelectedItem().toString()+"' ","Error",JOptionPane.ERROR_MESSAGE);

            }
            else
            {

                saveIncomeItems();


            }
            
        }
        
    }//GEN-LAST:event_newwu_jbKeyPressed

    private void jButton4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton4KeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {

            editwtunit_jtf.setEnabled(true);
            wtunitupdate_jb.setEnabled(true);
            wtunitdelete_jb.setEnabled(true);
            
        }
        
    }//GEN-LAST:event_jButton4KeyPressed

    private void jButton4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MousePressed
        // TODO add your handling code here:
        
        editwtunit_jtf.setEnabled(true);
        wtunitupdate_jb.setEnabled(true);
        wtunitdelete_jb.setEnabled(true);
        
    }//GEN-LAST:event_jButton4MousePressed

    private void wtunitupdate_jbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_wtunitupdate_jbKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {

            if(incomeitemlist_jl.getSelectedIndex()==-1)
            {

                JOptionPane.showMessageDialog(this,"Please select a Unit to change.","Error",JOptionPane.ERROR_MESSAGE);

            }
            else if(editwtunit_jtf.getText()==null || editwtunit_jtf.getText().equals(""))
            {

                JOptionPane.showMessageDialog(this,"Please a type a new Unit","Error",JOptionPane.ERROR_MESSAGE);

            }
            else
            {

                updateincomeitems();

            }
            
        }
        
    }//GEN-LAST:event_wtunitupdate_jbKeyPressed

    private void wtunitdelete_jbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_wtunitdelete_jbKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {

            if(incomeitemlist_jl.getSelectedIndex()==-1)
            {

                JOptionPane.showMessageDialog(this,"Please select an Income Item.","Error",JOptionPane.ERROR_MESSAGE);

            }
            else if(editwtunit_jtf.getText()==null || editwtunit_jtf.getText().equals(""))
            {

                JOptionPane.showMessageDialog(this,"Please type an Income Item","Error",JOptionPane.ERROR_MESSAGE);

            }
            else
            {

                deleteincomeitems();

            }

        }
        
        
    }//GEN-LAST:event_wtunitdelete_jbKeyPressed

    private void close_jbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_close_jbKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {

            this.dispose();

        }
        
    }//GEN-LAST:event_close_jbKeyPressed

    private void savenewpt_btMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_savenewpt_btMouseClicked
        // TODO add your handling code here:
        
        if(newpt_cb.getSelectedItem() !=null)
        {

            if(((JTextField)newpt_cb.getEditor().getEditorComponent()).getText().equals("") )
            {

                JOptionPane.showMessageDialog(this,"Please type a new Income Type.","Error",JOptionPane.ERROR_MESSAGE);

            }
            else if(newpt_cb.getSelectedIndex() != -1)
            {

                JOptionPane.showMessageDialog(this,"Income Type already saved:'"+newpt_cb.getSelectedItem().toString()+"' ","Error",JOptionPane.ERROR_MESSAGE);

            }
            else
            {

               
                saveIncomeType();

            }
        }
        
        
        
    }//GEN-LAST:event_savenewpt_btMouseClicked

    private void newwu_jbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newwu_jbMouseClicked
        // TODO add your handling code here:
        
        if(newwu_jcb.getSelectedItem()!= null || newwu_jcb.getSelectedItem().toString().equals("") )
        {

            if(newwu_jcb.getSelectedItem().toString().equals("") )
            {
                
                JOptionPane.showMessageDialog(this,"Specify an Item.","Error",JOptionPane.ERROR_MESSAGE);
                
            }
            else if(newwu_jcb.getSelectedIndex()!=-1)
            {

                JOptionPane.showMessageDialog(this,"This Item is already saved:'"+newwu_jcb.getSelectedItem().toString()+"' ","Error",JOptionPane.ERROR_MESSAGE);

            }
            else
            {

                saveIncomeItems();


            }
        }
        
    }//GEN-LAST:event_newwu_jbMouseClicked

    private void listallpt_btKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_listallpt_btKeyPressed
        // TODO add your handling code here:

        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {

            listincometypesToincometypelist_jl();

        }

    }//GEN-LAST:event_listallpt_btKeyPressed

    private void wtunitupdate_jbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_wtunitupdate_jbMouseClicked
        // TODO add your handling code here:
        
        if(incomeitemlist_jl.getSelectedIndex()==-1)
        {

            JOptionPane.showMessageDialog(this,"Please select an Item.","Error",JOptionPane.ERROR_MESSAGE);

        }
        else if(editwtunit_jtf.getText()==null || editwtunit_jtf.getText().equals(""))
        {

            JOptionPane.showMessageDialog(this,"Please type an Item","Error",JOptionPane.ERROR_MESSAGE);

        }
        else
        {

            updateincomeitems();

        }
        
    }//GEN-LAST:event_wtunitupdate_jbMouseClicked

    private void wtunitdelete_jbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_wtunitdelete_jbMouseClicked
        // TODO add your handling code here:
        
        if(incomeitemlist_jl.getSelectedIndex()==-1)
        {

            JOptionPane.showMessageDialog(this,"Please select an Item.","Error",JOptionPane.ERROR_MESSAGE);

        }
        else if(editwtunit_jtf.getText()==null || editwtunit_jtf.getText().equals(""))
        {

            JOptionPane.showMessageDialog(this,"Please type an Item","Error",JOptionPane.ERROR_MESSAGE);

        }
        else
        {
            
            deleteincomeitems();
            
        }
            
        
    }//GEN-LAST:event_wtunitdelete_jbMouseClicked

    private void ptdelet_jbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ptdelet_jbMouseClicked
        // TODO add your handling code here:
        
        if(incometypelist_jl.getSelectedIndex()==-1)
            {

                JOptionPane.showMessageDialog(this,"Please select an Income Type.","Error",JOptionPane.ERROR_MESSAGE);

            }
            else if(editpt_tf.getText()==null || editpt_tf.getText().equals(""))
            {

                JOptionPane.showMessageDialog(this,"Please a type an Income Type.","Error",JOptionPane.ERROR_MESSAGE);

            }
            else
            {
            
                deleteIncomeType();
                
            }
        
    }//GEN-LAST:event_ptdelet_jbMouseClicked

    private void ptupdate_jbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ptupdate_jbMouseClicked
        // TODO add your handling code here:
        
        if(incometypelist_jl.getSelectedIndex()==-1)
        {

            JOptionPane.showMessageDialog(this,"Please select an Income Type.","Error",JOptionPane.ERROR_MESSAGE);

        }
        else if(editpt_tf.getText()==null || editpt_tf.getText().equals(""))
        {

            JOptionPane.showMessageDialog(this,"Please a type an Income Type.","Error",JOptionPane.ERROR_MESSAGE);

        }
        else
        {

            updateIncomeType();

        }
        
    }//GEN-LAST:event_ptupdate_jbMouseClicked

    private void listallpt_btMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listallpt_btMouseClicked
        // TODO add your handling code here:
        
        listincometypesToincometypelist_jl();
        
    }//GEN-LAST:event_listallpt_btMouseClicked

    private void listallwtunits_jbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listallwtunits_jbMouseClicked
        // TODO add your handling code here:
        
        listincomeitemsTowtunitlist_jl();
        
    }//GEN-LAST:event_listallwtunits_jbMouseClicked

    private void close_jbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_close_jbMouseClicked
        // TODO add your handling code here:
        
        this.dispose();
        
    }//GEN-LAST:event_close_jbMouseClicked

    private void saveIncomeItems()
    {
        
                
        boolean error = false;
        boolean status = false;
        
        Connection con = DatabaseConnection.createConnection();
        
        try
        {

            String item = newwu_jcb.getSelectedItem().toString();


            String sql="INSERT into income_items(income_item) values(?)";
            PreparedStatement stmt = con.prepareStatement(sql);

            stmt.setString(1,item);

            stmt.executeUpdate();

            status = true;

        }
        catch(Exception e)
        {

            JOptionPane.showMessageDialog(null, e);
             error = true;

        }
        finally
        {

            if(con!=null)
            {
                try {
                    con.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }

            }

        }
        if(error==false && status==true)
        {

            JOptionPane.showMessageDialog(this,"Operation Successful.","Success",JOptionPane.INFORMATION_MESSAGE);
             
            getAllIncomeItems();
            listincomeitemsTowtunitlist_jl();

        }
        
    }
    
    private void deleteIncomeType()
    {
                 
        boolean error = false;
        boolean status = false;
        
        Connection con = DatabaseConnection.createConnection();

        try 
        {

            //String oldpackagetype = packagetypelist_jl.getSelectedValue().toString();
            String incometype = editpt_tf.getText();

            String sql5 = "DELETE FROM income_types  WHERE income_type='" +incometype+ "' ";
            PreparedStatement stmt5 = con.prepareStatement(sql5);
            stmt5.executeUpdate();

            status = true;


        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, e);
            error = true;

        } finally {

            if (con != null) {
                try {
                    con.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }

            }

        }

        if (error == false && status == true) {

            JOptionPane.showMessageDialog(this, "Operation Successful.", "Success", JOptionPane.INFORMATION_MESSAGE);
            
            getIncomeTypes();
            listincometypesToincometypelist_jl();
            
            ptdelet_jb.setEnabled(false);
            editpt_tf.setEnabled(false);
            ptupdate_jb.setEnabled(false);
         

        }

        
    }
    
    private void deleteincomeitems()
    {
        
                             
        boolean error = false;
        boolean status = false;
        Connection con = DatabaseConnection.createConnection();

        try {

            //String oldpackagetype = packagetypelist_jl.getSelectedValue().toString();
            String wtunit = editwtunit_jtf.getText();

            String sql1 = "DELETE FROM income_items  WHERE income_item='" +wtunit+ "' ";
            PreparedStatement stmt1 = con.prepareStatement(sql1);
            stmt1.executeUpdate();

            status = true;


        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, e);
            error = true;

        } finally {

            if (con != null) {
                try {
                    con.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }

            }

        }

        if (error == false && status == true) {

            JOptionPane.showMessageDialog(this, "Operation Successful.", "Success", JOptionPane.INFORMATION_MESSAGE);
            
            getAllIncomeItems();
            listincomeitemsTowtunitlist_jl();
            
            wtunitdelete_jb.setEnabled(false);
            editwtunit_jtf.setEnabled(false);
            wtunitupdate_jb.setEnabled(false);
          
        }
 
        
    }
    
    public void updateIncomeType()
    {
             
        boolean error = false;
        boolean status = false;
        Connection con = DatabaseConnection.createConnection();

        try {

            String oldincometype = incometypelist_jl.getSelectedValue().toString();
            String newincometype = editpt_tf.getText();

            String sql1 = "UPDATE income_types SET income_type=? WHERE income_type='" + oldincometype + "' ";
            PreparedStatement stmt1 = con.prepareStatement(sql1);
            stmt1.setString(1,newincometype);
            stmt1.executeUpdate();

            status = true;

        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, e);
            error = true;

        } finally {

            if (con != null) {
                try {
                    con.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }

            }

        }

        if (error == false && status == true) {

            JOptionPane.showMessageDialog(this, "Operation Successful.", "Success", JOptionPane.INFORMATION_MESSAGE);
            
            getIncomeTypes();
            listincometypesToincometypelist_jl();
            
            editpt_tf.setEnabled(false);
            ptupdate_jb.setEnabled(false);

        }

        
    }
    
    private void updateincomeitems()
    {
        
        boolean error = false;
        boolean status = false;
        Connection con = DatabaseConnection.createConnection();

        try {

            String oldincomeitem = incomeitemlist_jl.getSelectedValue().toString();
            String newincomeitem = editwtunit_jtf.getText();

            String sql1 = "UPDATE income_items SET income_item=? WHERE income_item='" + oldincomeitem + "' ";
            PreparedStatement stmt1 = con.prepareStatement(sql1);
            stmt1.setString(1,newincomeitem);
            stmt1.executeUpdate();

            status = true;

        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, e);
            error = true;

        } finally {

            if (con != null) {
                try {
                    con.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }

            }

        }

        if (error == false && status == true) {

            JOptionPane.showMessageDialog(this, "Operation Successful.", "Success", JOptionPane.INFORMATION_MESSAGE);
            
            getAllIncomeItems();
            listincomeitemsTowtunitlist_jl();
          
            editwtunit_jtf.setEnabled(false);
            wtunitupdate_jb.setEnabled(false);
            
        }

        
    }
    
    public void saveIncomeType()
    { 
        
        boolean error = false;
        boolean status = false;
        
        Connection con = DatabaseConnection.createConnection();
        
        try
        {

            String incometype = newpt_cb.getSelectedItem().toString();

            String sql="INSERT into income_types(income_type) values(?)";
            PreparedStatement stmt = con.prepareStatement(sql);

            stmt.setString(1,incometype);

            stmt.executeUpdate();

            status = true;

        }
        catch(Exception e)
        {

            JOptionPane.showMessageDialog(null, e);
             error = true;

        }
        finally
        {

            if(con!=null)
            {
                try {
                    con.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }

            }

        }
        if(error==false && status==true)
        {

            JOptionPane.showMessageDialog(this,"Operation Successful.","Success",JOptionPane.INFORMATION_MESSAGE);
             
            getIncomeTypes();
            listincometypesToincometypelist_jl();
            

        }
        
        
    }
    
    public void getIncomeTypes()
    {

        packagetypesearch_cb.removeAllItems();
        newpt_cb.removeAllItems();
        Connection con = DatabaseConnection.createConnection();

        try {

            packagetypesearch_cb.removeAllItems();

            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT DISTINCT income_type FROM income_types");

            while (rs.next()) {

                String income_type = rs.getString("income_type");
                packagetypesearch_cb.addItem(income_type);
                newpt_cb.addItem(income_type);

            }
            
            //packagetypesearch_cb.addItem("");
            packagetypesearch_cb.setSelectedItem("");
            
            //newpt_cb.addItem("");
            newpt_cb.setSelectedItem("");

        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, e);

        } finally {

            if (con != null) {
                try {
                    con.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }

            }

        }
        
        
    }
    
    private void getAllIncomeItems()
    {
        
        Connection con = DatabaseConnection.createConnection();

        try {

            searchwtunits_jcb.removeAllItems();
            newwu_jcb.removeAllItems();

            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT DISTINCT income_item FROM income_items");

            while (rs.next()) {

                String item = rs.getString("income_item");
                searchwtunits_jcb.addItem(item);
                newwu_jcb.addItem(item);

            }

            //searchwtunits_jcb.addItem("");
            searchwtunits_jcb.setSelectedItem("");

            //newwu_jcb.addItem("");
            newwu_jcb.setSelectedItem("");

        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, e);

        } finally {

            if (con != null) {
                try {
                    con.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }

            }

        }
        
    }




    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton close_jb;
    public static javax.swing.JTextField editpt_tf;
    public static javax.swing.JTextField editwtunit_jtf;
    public static javax.swing.JList incomeitemlist_jl;
    public static javax.swing.JList incometypelist_jl;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton listallpt_bt;
    private javax.swing.JButton listallwtunits_jb;
    public static javax.swing.JComboBox newpt_cb;
    private javax.swing.JButton newwu_jb;
    public static javax.swing.JComboBox newwu_jcb;
    private javax.swing.JComboBox packagetypesearch_cb;
    private javax.swing.JButton ptdelet_jb;
    private javax.swing.JButton ptupdate_jb;
    private javax.swing.JButton savenewpt_bt;
    private javax.swing.JComboBox searchwtunits_jcb;
    private javax.swing.JButton wtunitdelete_jb;
    private javax.swing.JButton wtunitupdate_jb;
    // End of variables declaration//GEN-END:variables
}

class incometypelist_jl_SelectionHandler implements ListSelectionListener
{

    @Override
    public void valueChanged(ListSelectionEvent e) {

        
        try
        {
            
            String value = Accounts_Income_Heads_Items.incometypelist_jl.getSelectedValue().toString();

            Accounts_Income_Heads_Items.editpt_tf.setText(value);
            
        }
        catch(Exception ex)
        {
            
            JOptionPane.showMessageDialog(null, ex);
            
        }
   

    }
    
    
    
}

class incomeitemlist_jl_SelectionHandler implements ListSelectionListener
{

    @Override
    public void valueChanged(ListSelectionEvent e) {

        
        try
        {
            
            String value = Accounts_Income_Heads_Items.incomeitemlist_jl.getSelectedValue().toString();

            Accounts_Income_Heads_Items.editwtunit_jtf.setText(value);
            
        }
        catch(Exception ex)
        {
            
            JOptionPane.showMessageDialog(null, ex);
            
        }
   

    }
    
    
    
}