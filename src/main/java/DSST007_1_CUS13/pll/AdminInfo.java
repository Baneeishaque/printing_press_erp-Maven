package DSST007_1_CUS13.pll;


import java.awt.Graphics;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author praveen
 */
public class AdminInfo extends javax.swing.JInternalFrame {

    private static AdminInfo myInstance;
    
    public AdminInfo() {
        initComponents();
         try
        {
          Statement stmt;
          Connection con= DatabaseConnection.createConnection();
          stmt = con.createStatement();
          ResultSet rs = stmt.executeQuery("Select * from tbl_adminreg");
          if(rs.next())
          {
             String s1="";
             String s2="";
             String s3="";
             String s4="";
             String s5="";
             String s6="";
             String s7 ="";
             String s8="";
             String s9="";
             String s10="";
             
             s1 = rs.getString("FNAME");
             s2 = rs.getString("lNAME");
             s3 = rs.getString("ADD1");
             s4 = rs.getString("ADD2");
             s5 = rs.getString("CITY");
             s6 = rs.getString("COUNTRY");
             s7 = rs.getString("STATE");
             s8 =  rs.getString("PINCODE");
             s9 = rs.getString("PHONE");
             s10 = rs.getString("EMAIL");
             
                    
             txt_fname.setText(s1);
             txt_lname.setText(s2);
             txt_addline1.setText(s3);
             txt_addline2.setText(s4);
             txt_city.setText(s5);
             cmb_country.setSelectedItem(s6);
             cmb_state.setSelectedItem(s7);
             txt_pincode.setText(s8);
             txt_phone.setText(s9);
             txt_email.setText(s10);
             
                     
             txt_fname.setEditable(false);
             txt_lname.setEditable(false);
             txt_addline1.setEditable(false);
             txt_addline2.setEditable(false);
             txt_city.setEditable(false);
             cmb_country.setEnabled(false);
             cmb_state.setEnabled(false);
             txt_pincode.setEditable(false);
             txt_phone.setEditable(false);
             txt_email.setEditable(false);
             
          
          }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }

//    private void initComponents() {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
//    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_fname = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_lname = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_addline1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_addline2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txt_city = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cmb_country = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        cmb_state = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        txt_pincode = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txt_phone = new javax.swing.JTextField();
        txt_email = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btn_update = new javax.swing.JButton();
        btn_clear = new javax.swing.JButton();
        btn_close = new javax.swing.JButton();
        btn_edit = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        setClosable(true);
        setIconifiable(true);
        setTitle("Admin Info");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/DSST007_1_CUS13/InstabizTrader Logo Final 30x30.png"))); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener()
        {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt)
            {
                formInternalFrameOpened(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt)
            {
                formInternalFrameClosed(evt);
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt)
            {
            }
        });

        jPanel1.setBackground(new java.awt.Color(242, 242, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setText("First Name :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        txt_fname.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel1.add(txt_fname, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText("Last Name :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel2, gridBagConstraints);

        txt_lname.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel1.add(txt_lname, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setText("Address Line 1 :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel3, gridBagConstraints);

        txt_addline1.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel1.add(txt_addline1, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setText("Address Line 2 :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel4, gridBagConstraints);

        txt_addline2.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel1.add(txt_addline2, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel5.setText("City :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel5, gridBagConstraints);

        txt_city.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel1.add(txt_city, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel6.setText("Country :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel6, gridBagConstraints);

        cmb_country.setEditable(true);
        cmb_country.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "Afghanistan", "Albania", "Algeria", "Andorra", "Angola", "Antigua and Barbuda", "Argentina", "Armenia", "Aruba", "Australia", "Austria", "Azerbaijan", "Bahamas, The", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bhutan", "Bolivia", "Bosnia and Herzegovina", "Botswana", "Brazil", "Brunei ", "Bulgaria", "Burkina Faso", "Burma", "Burundi", "Cambodia", "Cameroon", "Canada", "Cape Verde", "Central African Republic", "Chad", "Chile", "China", "Colombia", "Comoros", "Congo, Democratic Republic of the", "Congo, Republic of the", "Costa Rica", "Cote d'Ivoire", "Croatia", "Cuba", "Curacao", "Cyprus", "Czech Republic", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "East Timor (see Timor-Leste)", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Fiji", "Finland", "France", "Gabon", "Gambia, The", "Georgia", "Germany", "Ghana", "Greece", "Grenada", "Guatemala", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Holy See", "Honduras", "Hong Kong", "Hungary", "Iceland", "India", "Indonesia", "Iran", "Iraq", "Ireland", "Israel", "Italy", "Jamaica", "Japan", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Korea, North", "Korea, South", "Kosovo", "Kuwait", "Kyrgyzstan", "Laos", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Macau", "Macedonia", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Mauritania", "Mauritius", "Mexico", "Micronesia", "Moldova", "Monaco", "Mongolia", "Montenegro", "Morocco", "Mozambique", "Namibia", "Nauru", "Nepal", "Netherlands", "Netherlands Antilles", "New Zealand", "Nicaragua", "Niger", "Nigeria", "North Korea", "Norway", "Oman", "Pakistan", "Palau", "Palestinian Territories", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Poland", "Portugal", "Qatar", "Romania", "Russia", "Rwanda", "Saint Kitts and Nevis", "Saint Lucia", "Saint Vincent and the Grenadines", "Samoa ", "San Marino", "Sao Tome and Principe", "Saudi Arabia", "Senegal", "Serbia", "Seychelles", "Sierra Leone", "Singapore", "Sint Maarten", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "South Korea", "South Sudan", "Spain ", "Sri Lanka", "Sudan", "Suriname", "Swaziland ", "Sweden", "Switzerland", "Syria", "Taiwan", "Tajikistan", "Tanzania", "Thailand ", "Timor-Leste", "Togo", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Turkmenistan", "Tuvalu", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "Uruguay", "Uzbekistan", "Vanuatu", "Venezuela", "Vietnam", "Yemen", "Zambia", "Zimbabwe" }));
        cmb_country.setPreferredSize(new java.awt.Dimension(150, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel1.add(cmb_country, gridBagConstraints);

        jLabel7.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel7.setText("State :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel7, gridBagConstraints);

        cmb_state.setEditable(true);
        cmb_state.setPreferredSize(new java.awt.Dimension(150, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel1.add(cmb_state, gridBagConstraints);

        jLabel8.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel8.setText("Pincode :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel8, gridBagConstraints);

        txt_pincode.setPreferredSize(new java.awt.Dimension(150, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel1.add(txt_pincode, gridBagConstraints);

        jLabel9.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel9.setText("Phone :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel9, gridBagConstraints);

        jLabel10.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel10.setText("Email :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 0);
        jPanel1.add(jLabel10, gridBagConstraints);

        txt_phone.setPreferredSize(new java.awt.Dimension(150, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel1.add(txt_phone, gridBagConstraints);

        txt_email.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel1.add(txt_email, gridBagConstraints);

        jPanel3.setBackground(new java.awt.Color(242, 242, 255));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel2.setBackground(new java.awt.Color(242, 242, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new java.awt.GridBagLayout());

        btn_update.setBackground(new java.awt.Color(185, 197, 31));
        btn_update.setText("Update");
        btn_update.setPreferredSize(new java.awt.Dimension(100, 29));
        btn_update.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                btn_updateMousePressed(evt);
            }
        });
        btn_update.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                btn_updateKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 15, 0);
        jPanel2.add(btn_update, gridBagConstraints);

        btn_clear.setBackground(new java.awt.Color(185, 197, 31));
        btn_clear.setText("Clear");
        btn_clear.setPreferredSize(new java.awt.Dimension(100, 29));
        btn_clear.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                btn_clearMousePressed(evt);
            }
        });
        btn_clear.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                btn_clearKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(8, 20, 15, 0);
        jPanel2.add(btn_clear, gridBagConstraints);

        btn_close.setBackground(new java.awt.Color(86, 132, 191));
        btn_close.setMnemonic('s');
        btn_close.setText("Close");
        btn_close.setPreferredSize(new java.awt.Dimension(100, 29));
        btn_close.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btn_closeActionPerformed(evt);
            }
        });
        btn_close.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                btn_closeKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 15, 20);
        jPanel2.add(btn_close, gridBagConstraints);

        btn_edit.setBackground(new java.awt.Color(185, 197, 31));
        btn_edit.setText("Edit");
        btn_edit.setPreferredSize(new java.awt.Dimension(100, 29));
        btn_edit.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                btn_editMousePressed(evt);
            }
        });
        btn_edit.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                btn_editKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 15, 0);
        jPanel2.add(btn_edit, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel3.add(jPanel2, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setBounds(0, 0, 446, 366);
    }// </editor-fold>//GEN-END:initComponents

    public static AdminInfo getInstance() // Method
    {
        if (myInstance == null)
	{
            myInstance = new AdminInfo();
	}
        return myInstance;
    }

    private void updateData()
    {
        
        if(!notEmpty())
        {
            Connection con = DatabaseConnection.createConnection();

            try
            {
                String sql="UPDATE tbl_adminreg SET FNAME=?,LNAME=?,ADD1=?,ADD2=?,CITY=?,COUNTRY=?,STATE=?,PINCODE=?,PHONE=?,EMAIL=? ";
                PreparedStatement stmt=con.prepareStatement(sql);
                stmt.setString(1, txt_fname.getText());
                stmt.setString(2, txt_lname.getText());
                stmt.setString(3, txt_addline1.getText());
                stmt.setString(4, txt_addline2.getText());
                stmt.setString(5, txt_city.getText());
                stmt.setString(6, cmb_country.getSelectedItem().toString());
                stmt.setString(7, cmb_state.getSelectedItem().toString());
                stmt.setString(8,txt_pincode.getText());
                stmt.setString(9,txt_phone.getText());
                stmt.setString(10,txt_email.getText());
                stmt.executeUpdate();
                JOptionPane.showMessageDialog(this,"Operation Success.");
                stmt.close();
            }
            catch(SQLException ex)
            { 

                JOptionPane.showMessageDialog(null, ex);

            }

        }
        
    }
    
    private void clear()
    {
        
        txt_fname.setText("");
        txt_lname.setText("");
        txt_addline1.setText("");
        txt_addline2.setText("");
        txt_city.setText("");
        cmb_country.setSelectedIndex(0);
        cmb_state.setSelectedIndex(0);
        txt_pincode.setText(String.valueOf(""));
        txt_phone.setText(String.valueOf(""));
        txt_email.setText(""); 
        
    }
    
    private void btn_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_closeActionPerformed

        this.dispose();
        
    }//GEN-LAST:event_btn_closeActionPerformed

    private void edit()
    {
        
        txt_fname.setEditable(true);
        txt_lname.setEditable(true);
        txt_addline1.setEditable(true);
        txt_addline2.setEditable(true);
        txt_city.setEditable(true);
        cmb_country.setEnabled(true);
        cmb_state.setEnabled(true);
        txt_pincode.setEditable(true);
        txt_phone.setEditable(true);
        txt_email.setEditable(true); 
        
    }
    
    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        // TODO add your handling code here:
        
        myInstance = null;
        
    }//GEN-LAST:event_formInternalFrameClosed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
       
        AutoCompleteDecorator.decorate(cmb_country);
        AutoCompleteDecorator.decorate(cmb_state);
        
        
    }//GEN-LAST:event_formInternalFrameOpened

    private void btn_clearKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btn_clearKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            
            clear();
            
        }
        
    }//GEN-LAST:event_btn_clearKeyPressed

    private void btn_clearMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_clearMousePressed
        // TODO add your handling code here:
        
        clear();
        
    }//GEN-LAST:event_btn_clearMousePressed

    private void btn_editKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btn_editKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            
            edit();
            
        }
        
    }//GEN-LAST:event_btn_editKeyPressed

    private void btn_editMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_editMousePressed
        // TODO add your handling code here:
        
        edit();
        
    }//GEN-LAST:event_btn_editMousePressed

    private void btn_updateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btn_updateKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            
            updateData();
            
        }
        
    }//GEN-LAST:event_btn_updateKeyPressed

    private void btn_updateMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_updateMousePressed
        // TODO add your handling code here:
        
        updateData();
        
    }//GEN-LAST:event_btn_updateMousePressed

    private void btn_closeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btn_closeKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            
            this.dispose();
            
        }
        
    }//GEN-LAST:event_btn_closeKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_close;
    private javax.swing.JButton btn_edit;
    private javax.swing.JButton btn_update;
    private javax.swing.JComboBox cmb_country;
    private javax.swing.JComboBox cmb_state;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField txt_addline1;
    private javax.swing.JTextField txt_addline2;
    private javax.swing.JTextField txt_city;
    private javax.swing.JTextField txt_email;
    private javax.swing.JTextField txt_fname;
    private javax.swing.JTextField txt_lname;
    private javax.swing.JTextField txt_phone;
    private javax.swing.JTextField txt_pincode;
    // End of variables declaration//GEN-END:variables
    
    private boolean notEmpty()
    {
        //To change body of generated methods, choose Tools | Templates.
        boolean Notifier=false;
        
       boolean mobile_status = Validation.validateMobilePhone(txt_phone.getText());
       boolean phone_status = Validation.validateDigit(txt_phone.getText());
       boolean fname_status = Validation.validateAlphabet(txt_fname.getText());
       boolean lastname_status = Validation.validateAlphabet(txt_lname.getText());
       boolean city_status = Validation.validateAlphabet(txt_city.getText());
       boolean email_status= Validation.validateEmail(txt_email.getText());
       boolean pincode_status = Validation.validatePincode(txt_pincode.getText());
       boolean email_status2= Validation.validateEmail(txt_email.getText());
       
       if(txt_fname.getText().equals(""))
        {
        JOptionPane.showMessageDialog(null,"Please enter first name");
        txt_fname.requestFocus(); 
        Notifier=true;
        }
       
//       else if(txt_addline1.getText().equals(""))
//        {
//        JOptionPane.showMessageDialog(null,"Please enter your address");
//        txt_addline1.requestFocus(); 
//        Notifier=true;
//        }
//      else if(txt_city.getText().equals(""))
//        {
//        JOptionPane.showMessageDialog(null,"Please enter your city");
//        txt_city.requestFocus(); 
//        Notifier=true;
//        }
//      else if(cmb_country.getSelectedIndex()==0)
//        {
//        JOptionPane.showMessageDialog(null,"Please Select Country Name");
//        cmb_country.requestFocus(); 
//        Notifier=true;
//        }
//      else if(cmb_state.getSelectedIndex()==0)
//        {
//        JOptionPane.showMessageDialog(null,"Please Select State");
//        cmb_state.requestFocus(); 
//        Notifier=true;
//        }
//      
//      else if(txt_email.getText().equals(""))
//        {
//        JOptionPane.showMessageDialog(null,"Please enter your Email");
//        txt_email.requestFocus(); 
//        Notifier=true;
//        }
//       else if(txt_pincode.getText().equals(""))
//        {
//        JOptionPane.showMessageDialog(null,"Please enter pincode");
//        txt_pincode.requestFocus(); 
//        Notifier=true;
//        }
//       else if(txt_phone.getText().equals(""))
//        {
//        JOptionPane.showMessageDialog(null,"Please enter Your Phone Number");
//        txt_phone.requestFocus(); 
//        Notifier=true;
//        }
        
         else if(!fname_status)
         {
             JOptionPane.showMessageDialog(null,"Invalid FirstName");
             txt_fname.requestFocus(); 
             Notifier=true;
         } 
//         else if(!city_status)
//		 {
//                     JOptionPane.showMessageDialog(null,"Invalid City");
//                     txt_city.requestFocus(); 
//                     Notifier=true;
//                 } 
//     
//           else if(!email_status)
//		 {
//                     JOptionPane.showMessageDialog(null,"Invalid  email address");
//                     txt_email.requestFocus(); 
//                     Notifier=true;
//                 } 
//    
//       else if(!pincode_status)
//		 {
//                     JOptionPane.showMessageDialog(null,"Invalid Pincode");
//                     txt_pincode.requestFocus(); 
//                     Notifier=true;
//                 } 
//       else if(!phone_status)
//		 {
//                     JOptionPane.showMessageDialog(null,"Invalid Phone Number");
//                     txt_phone.requestFocus(); 
//                     Notifier=true;
//                 } 
       
        return Notifier;
    }

}

