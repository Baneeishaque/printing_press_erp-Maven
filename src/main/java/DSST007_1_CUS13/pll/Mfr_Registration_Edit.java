package DSST007_1_CUS13.pll;

import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author praveen
 */
public class Mfr_Registration_Edit extends javax.swing.JInternalFrame {

    private static Mfr_Registration_Edit mfr_Registration_Edit_Instance;
    
    public Mfr_Registration_Edit() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        state_jcb = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        pincode_jtf = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        country_jcb = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        city_jtf = new javax.swing.JTextField();
        address1_jtf = new javax.swing.JTextField();
        address2_jtf = new javax.swing.JTextField();
        district_jtf = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        phone1_jtf = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        phone2_jtf = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        fax_jtf = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        email_jtf = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        website_jtf = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        name_jtf = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        regdate_jdc = new com.toedter.calendar.JDateChooser();
        name_jcb = new javax.swing.JComboBox();
        mfrdetails_jb = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        setClosable(true);
        setTitle("View/Edit > Manufacturer");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/DSST007_1_CUS13/InstabizTrader Logo Final 35x35.png"))); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener()
        {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt)
            {
                formInternalFrameOpened(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt)
            {
                formInternalFrameClosed(evt);
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt)
            {
            }
        });

        jPanel1.setBackground(new java.awt.Color(242, 242, 255));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText("Manufacturer Name :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(jLabel2, gridBagConstraints);

        jPanel3.setBackground(new java.awt.Color(242, 242, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel9.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel9.setText("Address Line 2 :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 2);
        jPanel3.add(jLabel9, gridBagConstraints);

        jLabel11.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel11.setText("District :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel3.add(jLabel11, gridBagConstraints);

        state_jcb.setEditable(true);
        state_jcb.setPreferredSize(new java.awt.Dimension(200, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanel3.add(state_jcb, gridBagConstraints);

        jLabel8.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel8.setText("Address Line 1 :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 2);
        jPanel3.add(jLabel8, gridBagConstraints);

        jLabel10.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel10.setText("City :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel3.add(jLabel10, gridBagConstraints);

        pincode_jtf.setPreferredSize(new java.awt.Dimension(150, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanel3.add(pincode_jtf, gridBagConstraints);

        jLabel12.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel12.setText("State :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel3.add(jLabel12, gridBagConstraints);

        country_jcb.setEditable(true);
        country_jcb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Afghanistan", "Albania", "Algeria", "Andorra", "Angola", "Antigua and Barbuda", "Argentina", "Armenia", "Aruba", "Australia", "Austria", "Azerbaijan", "Bahamas, The", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bhutan", "Bolivia", "Bosnia and Herzegovina", "Botswana", "Brazil", "Brunei ", "Bulgaria", "Burkina Faso", "Burma", "Burundi", "Cambodia", "Cameroon", "Canada", "Cape Verde", "Central African Republic", "Chad", "Chile", "China", "Colombia", "Comoros", "Congo, Democratic Republic of the", "Congo, Republic of the", "Costa Rica", "Cote d'Ivoire", "Croatia", "Cuba", "Curacao", "Cyprus", "Czech Republic", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "East Timor (see Timor-Leste)", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Fiji", "Finland", "France", "Gabon", "Gambia, The", "Georgia", "Germany", "Ghana", "Greece", "Grenada", "Guatemala", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Holy See", "Honduras", "Hong Kong", "Hungary", "Iceland", "India", "Indonesia", "Iran", "Iraq", "Ireland", "Israel", "Italy", "Jamaica", "Japan", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Korea, North", "Korea, South", "Kosovo", "Kuwait", "Kyrgyzstan", "Laos", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Macau", "Macedonia", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Mauritania", "Mauritius", "Mexico", "Micronesia", "Moldova", "Monaco", "Mongolia", "Montenegro", "Morocco", "Mozambique", "Namibia", "Nauru", "Nepal", "Netherlands", "Netherlands Antilles", "New Zealand", "Nicaragua", "Niger", "Nigeria", "North Korea", "Norway", "Oman", "Pakistan", "Palau", "Palestinian Territories", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Poland", "Portugal", "Qatar", "Romania", "Russia", "Rwanda", "Saint Kitts and Nevis", "Saint Lucia", "Saint Vincent and the Grenadines", "Samoa ", "San Marino", "Sao Tome and Principe", "Saudi Arabia", "Senegal", "Serbia", "Seychelles", "Sierra Leone", "Singapore", "Sint Maarten", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "South Korea", "South Sudan", "Spain ", "Sri Lanka", "Sudan", "Suriname", "Swaziland ", "Sweden", "Switzerland", "Syria", "Taiwan", "Tajikistan", "Tanzania", "Thailand ", "Timor-Leste", "Togo", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Turkmenistan", "Tuvalu", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "Uruguay", "Uzbekistan", "Vanuatu", "Venezuela", "Vietnam", "Yemen", "Zambia", "Zimbabwe" }));
        country_jcb.setPreferredSize(new java.awt.Dimension(200, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanel3.add(country_jcb, gridBagConstraints);

        jLabel13.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel13.setText("Country :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel3.add(jLabel13, gridBagConstraints);

        city_jtf.setPreferredSize(new java.awt.Dimension(200, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanel3.add(city_jtf, gridBagConstraints);

        address1_jtf.setPreferredSize(new java.awt.Dimension(200, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanel3.add(address1_jtf, gridBagConstraints);

        address2_jtf.setPreferredSize(new java.awt.Dimension(200, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanel3.add(address2_jtf, gridBagConstraints);

        district_jtf.setPreferredSize(new java.awt.Dimension(200, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanel3.add(district_jtf, gridBagConstraints);

        jLabel14.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel14.setText("Pincode :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel3.add(jLabel14, gridBagConstraints);

        jLabel7.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel7.setText("Phone 1 :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel3.add(jLabel7, gridBagConstraints);

        phone1_jtf.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel3.add(phone1_jtf, gridBagConstraints);

        jLabel15.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel15.setText("Phone 2 :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel3.add(jLabel15, gridBagConstraints);

        phone2_jtf.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel3.add(phone2_jtf, gridBagConstraints);

        jLabel16.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel16.setText("FAX :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel3.add(jLabel16, gridBagConstraints);

        fax_jtf.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel3.add(fax_jtf, gridBagConstraints);

        jLabel17.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel17.setText("E-Mail :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel3.add(jLabel17, gridBagConstraints);

        email_jtf.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel3.add(email_jtf, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setText("Website :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel3.add(jLabel1, gridBagConstraints);

        website_jtf.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel3.add(website_jtf, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setText("Name :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 2);
        jPanel3.add(jLabel3, gridBagConstraints);

        name_jtf.setPreferredSize(new java.awt.Dimension(200, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanel3.add(name_jtf, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setText("Registration Date :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 2);
        jPanel3.add(jLabel4, gridBagConstraints);

        regdate_jdc.setBackground(new java.awt.Color(242, 242, 255));
        regdate_jdc.setDateFormatString("d-MMM-yyyy");
        regdate_jdc.setPreferredSize(new java.awt.Dimension(140, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 2);
        jPanel3.add(regdate_jdc, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel1.add(jPanel3, gridBagConstraints);

        name_jcb.setEditable(true);
        name_jcb.setMaximumRowCount(10);
        name_jcb.setPreferredSize(new java.awt.Dimension(300, 25));
        name_jcb.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                name_jcbActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 2, 0, 5);
        jPanel1.add(name_jcb, gridBagConstraints);

        mfrdetails_jb.setBackground(new java.awt.Color(185, 197, 31));
        mfrdetails_jb.setText("Show Detials");
        mfrdetails_jb.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                mfrdetails_jbMousePressed(evt);
            }
        });
        mfrdetails_jb.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                mfrdetails_jbKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);
        jPanel1.add(mfrdetails_jb, gridBagConstraints);

        jPanel2.setBackground(new java.awt.Color(242, 242, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jButton3.setBackground(new java.awt.Color(86, 132, 191));
        jButton3.setMnemonic('s');
        jButton3.setText("Close");
        jButton3.setPreferredSize(new java.awt.Dimension(100, 27));
        jButton3.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton3ActionPerformed(evt);
            }
        });
        jButton3.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                jButton3KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 15, 0);
        jPanel2.add(jButton3, gridBagConstraints);

        jButton1.setBackground(new java.awt.Color(185, 197, 31));
        jButton1.setText("Update");
        jButton1.setPreferredSize(new java.awt.Dimension(100, 27));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                jButton1MousePressed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                jButton1KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 15, 0);
        jPanel2.add(jButton1, gridBagConstraints);

        jButton2.setBackground(new java.awt.Color(185, 197, 31));
        jButton2.setText("Edit");
        jButton2.setPreferredSize(new java.awt.Dimension(100, 27));
        jButton2.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                jButton2MousePressed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                jButton2KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 15, 0);
        jPanel2.add(jButton2, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleName("View/Edit > Manufacturer");

        setBounds(0, 0, 428, 510);
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:

    Dimension desktopSize = NewMDIApplication.desktopbg_jlbl.getSize();
    Dimension jInternalFrameSize = this.getSize();
    this.setLocation((desktopSize.width - jInternalFrameSize.width)/2,(desktopSize.height- jInternalFrameSize.height)/2);
        
    //---------------------------
    
    getMfrNames();
    AutoCompleteDecorator.decorate(name_jcb);
    
    getStates();
    AutoCompleteDecorator.decorate(state_jcb);
    
    AutoCompleteDecorator.decorate(country_jcb);
    country_jcb.setSelectedItem("");
    
    //----------------------

    Date date = new Date();
    regdate_jdc.setDate(date);
        
    disableAll();
            
    }//GEN-LAST:event_formInternalFrameOpened

    public static Mfr_Registration_Edit getInstance() // Method
    {
        if (mfr_Registration_Edit_Instance == null)
	{
            mfr_Registration_Edit_Instance = new Mfr_Registration_Edit();
	}
        return mfr_Registration_Edit_Instance;
    }
    
    public static void getMfrNames()
    {
        
        name_jcb.removeAllItems();
        Connection con = DatabaseConnection.createConnection();
        
        try
        {

            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(" SELECT mfrname FROM mfr_registration ");
            
            while(rs.next())
            {
                 
                String mfrname = rs.getString("mfrname");
            
                name_jcb.addItem(mfrname);
                  
            }    
             
            name_jcb.addItem("");
            name_jcb.setSelectedItem("");
            
        }
        catch(Exception e)
        {
             
            JOptionPane.showMessageDialog(null, e);
             
        }
        finally
                {
                    
                    if(con!=null)
                    {
                        try {
                            con.close();
                        } catch (SQLException ex) {
                            JOptionPane.showMessageDialog(null, ex);
                        }
                        
                    }
                    
                }
        
    }
    
    
    public static void getStates()
    {
        
        state_jcb.removeAllItems();
        Connection con = DatabaseConnection.createConnection();
         
        try
        {

            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(" SELECT DISTINCT state FROM mfr_registration ");
            
            while(rs.next())
            {
               
                if(rs.getString("state") != null && !rs.getString("state").equals(""))
                {
    
                    String state = rs.getString("state");
                    state_jcb.addItem(state);

                }
               
                  
            }  
            
            state_jcb.addItem("");
            state_jcb.setSelectedItem("");
             
        }
        catch(Exception e)
        {
             
            JOptionPane.showMessageDialog(null, e);
             
        }
        finally
                {
                    
                    if(con!=null)
                    {
                        try {
                            con.close();
                        } catch (SQLException ex) {
                            JOptionPane.showMessageDialog(null, ex);
                        }
                        
                    }
                    
                }
        
    }
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        this.dispose();
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void clearAll()
    {
        
        name_jtf.setText("");
        address1_jtf.setText("");
        address2_jtf.setText("");
        city_jtf.setText("");
        district_jtf.setText("");
        state_jcb.setSelectedItem("");
        pincode_jtf.setText("");
        phone1_jtf.setText("");
        phone2_jtf.setText("");
        fax_jtf.setText("");
        email_jtf.setText("");
        website_jtf.setText("");
        ((JTextField) regdate_jdc.getDateEditor().getUiComponent()).setText("");
        
    }
    
    private void showMfrDetails()
    {
        
                
        Connection con = DatabaseConnection.createConnection();
        
        try
        {
            
            clearAll();
            
            if(name_jcb.getSelectedIndex()!=-1 && name_jcb.getSelectedItem()!=null )
            {

                SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd",Locale.getDefault());
                SimpleDateFormat sdf2 = new SimpleDateFormat("dd-MM-yyyy",Locale.getDefault());

                String name = name_jcb.getSelectedItem().toString();
                
                Statement stmt = con.createStatement();
                ResultSet rs = stmt.executeQuery("SELECT * FROM mfr_registration WHERE mfrname = '"+name+"' ");
                
                
                    while(rs.next())
                    {
                        
                         String name_ = rs.getString("mfrname");
                         String address1 = rs.getString("address1");
                         String address2 = rs.getString("address2");
                         String city = rs.getString("city");
                         String district= rs.getString("district");
                         String state = rs.getString("state");
                         String country = rs.getString("country");
                         String pincode = rs.getString("pincode");
                         String phone1 = rs.getString("phone1");
                         String phone2 = rs.getString("phone2");
                         String fax = rs.getString("fax");
                         String email = rs.getString("email");
                         String website = rs.getString("website");
                         
                         String regdatecheck = rs.getString("regdate");
                         Date regdate = null;
                         
                         if(regdatecheck!=null)
                         {
                         
                             // JOptionPane.showMessageDialog(null, "not empty");
                            regdate = sdf2.parse(sdf2.format(sdf1.parse(rs.getString("regdate"))));
                         }

                         name_jtf.setText(name_);
                         address1_jtf.setText(address1);
                         address2_jtf.setText(address2);
                         city_jtf.setText(city);
                         district_jtf.setText(district);
                        if (state == null) {
                            state_jcb.setSelectedItem("");
                        } else {

                            state_jcb.setSelectedItem(state);

                        }
                        if (country == null) {
                            country_jcb.setSelectedItem("");
                        } else {

                            country_jcb.setSelectedItem(country);

                        }
                         pincode_jtf.setText(pincode);
                         phone1_jtf.setText(phone1);
                         phone2_jtf.setText(phone2);
                         fax_jtf.setText(fax);
                         email_jtf.setText(email);
                         website_jtf.setText(website);
                         if (regdatecheck == null) {

                            Date date = new Date();
                            regdate_jdc.setDate(date);

                        } else {
                            regdate_jdc.setDate(regdate);
                        }

                    }
                
            }
            
        }
        catch(Exception e)
        {
            
            JOptionPane.showMessageDialog(null,e);
            
        }
        finally
        {

            if(con!=null)
            {
                try {
                    con.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }

            }

        }
        
    }
    
    private void updateData()
    {
        
        if(name_jcb.getSelectedIndex()==-1)
        {

            JOptionPane.showMessageDialog(this,"The Manufacturer Name you selected is not in the memory","Error",JOptionPane.ERROR_MESSAGE);

        }
        else if(name_jtf.getText().equals(""))
        {

            JOptionPane.showMessageDialog(this,"Name field cannot be empty","Error",JOptionPane.ERROR_MESSAGE);

        }
        else
        {
            boolean error = false;
            boolean status = false;
            Connection con = DatabaseConnection.createConnection();

            try
            {
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd",Locale.getDefault());



                String mfrname = name_jcb.getSelectedItem().toString();

                String sql1="UPDATE mfr_registration SET mfrname=?,address1=?,address2=?,city=?,district=?,state=?,country=?,pincode=?,phone2=?,phone1=?,fax=?,email=?,website=?,regdate=? WHERE mfrname='"+mfrname+"' ";
                PreparedStatement stmt1 = con.prepareStatement(sql1);

                String newname = name_jtf.getText();
                stmt1.setString(1,newname);

                String address1 = address1_jtf.getText();
                stmt1.setString(2, address1);

                String address2 = address2_jtf.getText();
                stmt1.setString(3, address2);

                String city = city_jtf.getText();
                stmt1.setString(4, city);

                String district = district_jtf.getText();
                stmt1.setString(5, district);

                String state = state_jcb.getSelectedItem().toString();
                stmt1.setString(6, state);

                String country = country_jcb.getSelectedItem().toString();
                stmt1.setString(7, country);

                String pincode = pincode_jtf.getText();
                stmt1.setString(8, pincode);

                String phone2 = phone2_jtf.getText();
                stmt1.setString(9, phone2);

                String phone1 = phone1_jtf.getText();
                stmt1.setString(10, phone1);

                String fax = fax_jtf.getText();
                stmt1.setString(11, fax);

                String email = email_jtf.getText();
                stmt1.setString(12, email);

                String website = website_jtf.getText();
                stmt1.setString(13, website);

                String vendorregdate = sdf.format(regdate_jdc.getDate());
                stmt1.setString(14, vendorregdate);

                stmt1.executeUpdate();

                String sql2="UPDATE billing SET mfrname=? WHERE mfrname='"+mfrname+"' ";
                PreparedStatement stmt2 = con.prepareStatement(sql2);
                stmt2.setString(1,newname);
                stmt2.executeUpdate();

                String sql3="UPDATE purchase SET mfrname=? WHERE mfrname='"+mfrname+"' ";
                PreparedStatement stmt3 = con.prepareStatement(sql3);
                stmt3.setString(1,newname);
                stmt3.executeUpdate();

                String sql4="UPDATE purchase_returns SET mfrname=? WHERE mfrname='"+mfrname+"' ";
                PreparedStatement stmt4 = con.prepareStatement(sql4);
                stmt4.setString(1,newname);
                stmt4.executeUpdate();

                status = true;

            }
            catch(Exception e)
            {

                JOptionPane.showMessageDialog(null, e);
                error = true;

            }
            finally
            {

                if(con!=null)
                {
                    try {
                        con.close();
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, ex);
                    }

                }

            }

            if (error==false && status==true)
            {

                JOptionPane.showMessageDialog(this,"Operation Successful.","Success",JOptionPane.INFORMATION_MESSAGE);
                
                getMfrNames();
                clearAll();
                disableAll();
                
                if(Mfr_Registration.mfrname_jcb != null)
                {
                    
                    Mfr_Registration.getMfrNames();
                    Mfr_Registration.getStates();
                    
                }
            
            }

        }
       
        
    }
    
    private void disableAll()
    {
        
        name_jtf.setEditable(false);
        address1_jtf.setEditable(false);
        address2_jtf.setEditable(false);
        city_jtf.setEditable(false);
        district_jtf.setEditable(false);
        state_jcb.setEnabled(false);
        country_jcb.setEnabled(false);
        pincode_jtf.setEditable(false);
        phone1_jtf.setEditable(false);
        phone2_jtf.setEditable(false);
        fax_jtf.setEditable(false);
        email_jtf.setEditable(false);
        //((JTextField)regdate_jdc.getDateEditor()).setEditable(false);
        regdate_jdc.setEnabled(false);
 
        
    }
    
    private void enableAll()
    {
        
        name_jtf.setEditable(true);
        address1_jtf.setEditable(true);
        address2_jtf.setEditable(true);
        city_jtf.setEditable(true);
        district_jtf.setEditable(true);
        state_jcb.setEnabled(true);
        country_jcb.setEnabled(true);
        pincode_jtf.setEditable(true);
        phone1_jtf.setEditable(true);
        phone2_jtf.setEditable(true);
        fax_jtf.setEditable(true);
        email_jtf.setEditable(true);
        //((JTextField)regdate_jdc.getDateEditor()).setEditable(true);
        regdate_jdc.setEnabled(true);
        
        
    }
    
    private void name_jcbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_name_jcbActionPerformed
        // TODO add your handling code here:
        
        clearAll();
        
    }//GEN-LAST:event_name_jcbActionPerformed

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        // TODO add your handling code here:
        
        mfr_Registration_Edit_Instance = null;
        
    }//GEN-LAST:event_formInternalFrameClosed

    private void mfrdetails_jbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mfrdetails_jbKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            
            showMfrDetails();
            
        }
        
    }//GEN-LAST:event_mfrdetails_jbKeyPressed

    private void mfrdetails_jbMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mfrdetails_jbMousePressed
        // TODO add your handling code here:
        
        showMfrDetails();
        
    }//GEN-LAST:event_mfrdetails_jbMousePressed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            
            updateData();
        
            
        }
        
    }//GEN-LAST:event_jButton1KeyPressed

    private void jButton1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MousePressed
        // TODO add your handling code here:
        
        updateData();
        
        
    }//GEN-LAST:event_jButton1MousePressed

    private void jButton3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton3KeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            
            this.dispose();
            
        }
        
    }//GEN-LAST:event_jButton3KeyPressed

    private void jButton2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            
            enableAll();
            
        }
        
    }//GEN-LAST:event_jButton2KeyPressed

    private void jButton2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MousePressed
        // TODO add your handling code here:
        
        enableAll();
        
    }//GEN-LAST:event_jButton2MousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField address1_jtf;
    private javax.swing.JTextField address2_jtf;
    private javax.swing.JTextField city_jtf;
    public static javax.swing.JComboBox country_jcb;
    private javax.swing.JTextField district_jtf;
    private javax.swing.JTextField email_jtf;
    private javax.swing.JTextField fax_jtf;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton mfrdetails_jb;
    public static javax.swing.JComboBox name_jcb;
    private javax.swing.JTextField name_jtf;
    private javax.swing.JTextField phone1_jtf;
    private javax.swing.JTextField phone2_jtf;
    private javax.swing.JTextField pincode_jtf;
    private com.toedter.calendar.JDateChooser regdate_jdc;
    public static javax.swing.JComboBox state_jcb;
    private javax.swing.JTextField website_jtf;
    // End of variables declaration//GEN-END:variables
}
