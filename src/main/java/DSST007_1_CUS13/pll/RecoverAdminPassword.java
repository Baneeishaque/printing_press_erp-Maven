package DSST007_1_CUS13.pll;

import jakarta.mail.Message;
import jakarta.mail.Session;
import jakarta.mail.Transport;
import jakarta.mail.internet.InternetAddress;
import jakarta.mail.internet.MimeMessage;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Locale;
import java.util.Properties;
import javax.swing.JOptionPane;

public class RecoverAdminPassword extends javax.swing.JFrame {

    private static RecoverAdminPassword myInstance;
    Properties emailProperties;
    Session mailSession;
    MimeMessage emailMessage;
    String emailBody;

    public RecoverAdminPassword() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        dc_dob = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        cmb_qstn = new javax.swing.JComboBox();
        txt_answer = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        btn_recoverPassword = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        password_jtf = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel4 = new javax.swing.JPanel();
        btn_close = new javax.swing.JButton();
        btn_clear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Instabiz Trader - Recover Admin Password");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowClosed(java.awt.event.WindowEvent evt)
            {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt)
            {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel2.setBackground(new java.awt.Color(254, 254, 254));
        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel9.setText("Date of Birth :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        jPanel2.add(jLabel9, gridBagConstraints);

        dc_dob.setBackground(new java.awt.Color(254, 254, 254));
        dc_dob.setPreferredSize(new java.awt.Dimension(140, 27));
        dc_dob.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                dc_dobKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 20);
        jPanel2.add(dc_dob, gridBagConstraints);

        jLabel10.setText("Security Question :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel2.add(jLabel10, gridBagConstraints);

        cmb_qstn.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "Who is your best friend?", "What is the name of your first school?", "Which is your favourite movie?", "What is your pet name? " }));
        cmb_qstn.setPreferredSize(new java.awt.Dimension(300, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 20);
        jPanel2.add(cmb_qstn, gridBagConstraints);

        txt_answer.setPreferredSize(new java.awt.Dimension(209, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 20);
        jPanel2.add(txt_answer, gridBagConstraints);

        jLabel11.setText("Answer :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 5, 0);
        jPanel2.add(jLabel11, gridBagConstraints);

        btn_recoverPassword.setText("Recover Password and Send to Email");
        btn_recoverPassword.setToolTipText("");
        btn_recoverPassword.setEnabled(false);
        btn_recoverPassword.setPreferredSize(new java.awt.Dimension(240, 27));
        btn_recoverPassword.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btn_recoverPasswordActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 20);
        jPanel2.add(btn_recoverPassword, gridBagConstraints);

        jButton1.setText("Display Password");
        jButton1.setPreferredSize(new java.awt.Dimension(209, 27));
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 20);
        jPanel2.add(jButton1, gridBagConstraints);

        password_jtf.setEditable(false);
        password_jtf.setPreferredSize(new java.awt.Dimension(209, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 20);
        jPanel2.add(password_jtf, gridBagConstraints);

        jPanel3.setBackground(new java.awt.Color(254, 254, 254));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jSeparator1.setPreferredSize(new java.awt.Dimension(450, 6));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel3.add(jSeparator1, gridBagConstraints);

        jPanel4.setBackground(new java.awt.Color(254, 254, 254));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        btn_close.setBackground(new java.awt.Color(86, 132, 191));
        btn_close.setText("Close");
        btn_close.setPreferredSize(new java.awt.Dimension(100, 29));
        btn_close.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btn_closeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 15, 0);
        jPanel4.add(btn_close, gridBagConstraints);

        btn_clear.setBackground(new java.awt.Color(86, 132, 191));
        btn_clear.setText("Clear");
        btn_clear.setPreferredSize(new java.awt.Dimension(100, 29));
        btn_clear.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btn_clearActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 15, 0);
        jPanel4.add(btn_clear, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel3.add(jPanel4, gridBagConstraints);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public static RecoverAdminPassword getInstance() // Method
    {
        if (myInstance == null) {
            myInstance = new RecoverAdminPassword();
        }
        return myInstance;
    }

    private void btn_recoverPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_recoverPasswordActionPerformed

        Connection con = DatabaseConnection.createConnection();
        try {

            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd", Locale.getDefault());

            if (dc_dob.getDate() == null) {

                JOptionPane.showMessageDialog(null, "Specify the Date.");

            } else if (cmb_qstn.getSelectedItem().toString().equals("Select")) {

                JOptionPane.showMessageDialog(null, "Specify the Security Question.");

            } else if (txt_answer.getText().equals("")) {

                JOptionPane.showMessageDialog(null, "Specify the Security Answer.");

            } else {

                String str_qstn = (String) cmb_qstn.getSelectedItem();
                String str_ans = txt_answer.getText();

                String sql = "SELECT DOB,SECURITY,ANS FROM TBL_ADMINREG where dob =? and security =? and ans =? ";
                PreparedStatement ps = con.prepareStatement(sql);
                ps.setString(1, sdf.format(dc_dob.getDate()));
                ps.setString(2, (String) cmb_qstn.getSelectedItem());
                ps.setString(3, (String) txt_answer.getText());
                ResultSet rs = ps.executeQuery();
                if (rs.next()) {

                    sendAdminPassword();

                } else {

                    JOptionPane.showMessageDialog(null, "Wrong Credentials.");

                }
            }
        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, e);

        }

    }//GEN-LAST:event_btn_recoverPasswordActionPerformed

    private void getPassword() {

    }

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed

        dc_dob.setDate(null);
        txt_answer.setText("");
        cmb_qstn.setSelectedIndex(0);
        password_jtf.setText("");

    }//GEN-LAST:event_btn_clearActionPerformed

    private void btn_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_closeActionPerformed

        this.dispose();

    }//GEN-LAST:event_btn_closeActionPerformed

    private void dc_dobKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dc_dobKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            dc_dob.setVisible(true);
        }
    }//GEN-LAST:event_dc_dobKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        Connection con = DatabaseConnection.createConnection();
        try {

            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd", Locale.getDefault());

            if (dc_dob.getDate() == null) {

                JOptionPane.showMessageDialog(null, "Specify the Date.");

            } else if (cmb_qstn.getSelectedItem().toString().equals("Select")) {

                JOptionPane.showMessageDialog(null, "Specify the Security Question.");

            } else if (txt_answer.getText().equals("")) {

                JOptionPane.showMessageDialog(null, "Specify the Security Answer.");

            } else {

                String str_qstn = (String) cmb_qstn.getSelectedItem();
                String str_ans = txt_answer.getText();

                String sql = "SELECT PASSWORD FROM TBL_ADMINREG where dob =? and security =? and ans =? ";
                PreparedStatement ps = con.prepareStatement(sql);
                ps.setString(1, sdf.format(dc_dob.getDate()));
                ps.setString(2, (String) cmb_qstn.getSelectedItem());
                ps.setString(3, (String) txt_answer.getText());
                ResultSet rs = ps.executeQuery();
                if (rs.next()) {

                    String password = rs.getString("PASSWORD");
                    password_jtf.setText(password);

                } else {

                    JOptionPane.showMessageDialog(null, "Wrong Credentials.");

                }
            }
        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, e);

        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:

        myInstance = null;

        Login.login.setVisible(true);

    }//GEN-LAST:event_formWindowClosed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:

        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("InstabizTrader Logo Final 256x253.png")));

    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_close;
    private javax.swing.JButton btn_recoverPassword;
    private javax.swing.JComboBox cmb_qstn;
    private com.toedter.calendar.JDateChooser dc_dob;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField password_jtf;
    private javax.swing.JTextField txt_answer;
    // End of variables declaration//GEN-END:variables

    public void sendAdminPassword() {

        Connection con = DatabaseConnection.createConnection();
        try {

            String emailcheck = "";

            String sql1 = "SELECT EMAIL FROM tbl_adminreg";
            PreparedStatement ps1 = con.prepareStatement(sql1);
            ResultSet rs1 = ps1.executeQuery();
            while (rs1.next()) {

                emailcheck = rs1.getString("EMAIL");

            }

            if (emailcheck.equals("")) {

                JOptionPane.showMessageDialog(null, "No Email Registered.");

            } else if (!emailcheck.contains("@")) {

                JOptionPane.showMessageDialog(null, "Email Not In Correct Format.");

            } else {

                String emailPort = "587";//gmail's smtp port          
                emailProperties = System.getProperties();
                emailProperties.put("mail.smtp.port", emailPort);
                emailProperties.put("mail.smtp.auth", "true");
                emailProperties.put("mail.smtp.starttls.enable", "true");
                emailProperties.put("mail.smtp.ssl.trust", "smtp.yahoo.com");

                String[] toEmails = {emailcheck};
                String emailSubject = "Password information";

                String sql2 = "SELECT PASSWORD FROM TBL_ADMINREG";
                PreparedStatement ps2 = con.prepareStatement(sql2);
                ResultSet rs2 = ps2.executeQuery();
                while (rs2.next()) {

                    emailBody = "Hi..Your password is " + "  " + rs2.getString("password");

                }

                mailSession = Session.getDefaultInstance(emailProperties, null);
                emailMessage = new MimeMessage(mailSession);

                for (int i = 0; i < toEmails.length; i++) {

                    emailMessage.addRecipient(Message.RecipientType.TO, new InternetAddress(toEmails[i]));

                }

                emailMessage.setSubject(emailSubject);
                //emailMessage.setContent(emailBody, "text/html");//for a html email
                emailMessage.setText(emailBody);// for a text email
                String emailHost = "smtp.yahoo.com";
                String fromUser = "kard_info123@yahoo.com";
                String fromUserEmailPassword = "kard@123";

                Transport transport = mailSession.getTransport("smtp");

                transport.connect(emailHost, fromUser, fromUserEmailPassword);
                transport.sendMessage(emailMessage, emailMessage.getAllRecipients());
                transport.close();
                //JOptionPane.showMessageDialog(null, "Credentials send to your mail.Please login to your  account!!!");

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }
}
