package DSST007_1_CUS13.pll;





import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Locale;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author praveen
 */
public class Admin_ChangePassword extends javax.swing.JInternalFrame {

    private static Admin_ChangePassword myInstance;
    
    public Admin_ChangePassword() {
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_opassword = new javax.swing.JPasswordField();
        txt_npassword = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_retnewpassord = new javax.swing.JPasswordField();
        jPanel4 = new javax.swing.JPanel();
        btn_update = new javax.swing.JButton();
        btn_clear = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        dc_dob = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_ans = new javax.swing.JTextField();
        cmb_secqn = new javax.swing.JComboBox();
        jPanel6 = new javax.swing.JPanel();
        btn_Eprclear = new javax.swing.JButton();
        btn_recover = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        currpass_jpf = new javax.swing.JPasswordField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        bottonpanel_jpnl = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(254, 254, 254));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        setClosable(true);
        setIconifiable(true);
        setTitle("Admin -> Password Settings");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/DSST007_1_CUS13/InstabizTrader Logo Final 30x30.png"))); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener()
        {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt)
            {
                formInternalFrameOpened(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt)
            {
                formInternalFrameClosed(evt);
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt)
            {
            }
        });

        jPanel3.setBackground(new java.awt.Color(242, 242, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBackground(new java.awt.Color(242, 242, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Change Password", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N
        jPanel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setText("Old Password :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 2, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        txt_opassword.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 2, 20);
        jPanel1.add(txt_opassword, gridBagConstraints);

        txt_npassword.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 2, 20);
        jPanel1.add(txt_npassword, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText("New Password :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 2, 0);
        jPanel1.add(jLabel2, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setText("Retype New Password :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 36, 2, 0);
        jPanel1.add(jLabel3, gridBagConstraints);

        txt_retnewpassord.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 2, 35);
        jPanel1.add(txt_retnewpassord, gridBagConstraints);

        jPanel4.setBackground(new java.awt.Color(242, 242, 255));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        btn_update.setBackground(new java.awt.Color(185, 197, 31));
        btn_update.setText("Update");
        btn_update.setPreferredSize(new java.awt.Dimension(100, 29));
        btn_update.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                btn_updateMouseClicked(evt);
            }
        });
        btn_update.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                btn_updateKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel4.add(btn_update, gridBagConstraints);

        btn_clear.setBackground(new java.awt.Color(185, 197, 31));
        btn_clear.setText("Clear");
        btn_clear.setPreferredSize(new java.awt.Dimension(100, 29));
        btn_clear.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                btn_clearMouseClicked(evt);
            }
        });
        btn_clear.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                btn_clearKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel4.add(btn_clear, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        jPanel1.add(jPanel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel3.add(jPanel1, gridBagConstraints);

        jPanel5.setBackground(new java.awt.Color(242, 242, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Edit Password Recovery Info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N
        jPanel5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanel5.setLayout(new java.awt.GridBagLayout());

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setText("Date of Birth :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 2, 0);
        jPanel5.add(jLabel4, gridBagConstraints);

        dc_dob.setBackground(new java.awt.Color(242, 242, 255));
        dc_dob.setPreferredSize(new java.awt.Dimension(140, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 2, 20);
        jPanel5.add(dc_dob, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel6.setText("Security Question :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 2, 0);
        jPanel5.add(jLabel6, gridBagConstraints);

        jLabel7.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel7.setText("Answer :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 2, 0);
        jPanel5.add(jLabel7, gridBagConstraints);

        txt_ans.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 2, 0);
        jPanel5.add(txt_ans, gridBagConstraints);

        cmb_secqn.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "Who is your best friend?", "What is the name of your first school?", "Which is your favourite movie?", "What is your pet name?", " " }));
        cmb_secqn.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 2, 0);
        jPanel5.add(cmb_secqn, gridBagConstraints);

        jPanel6.setBackground(new java.awt.Color(242, 242, 255));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        btn_Eprclear.setBackground(new java.awt.Color(185, 197, 31));
        btn_Eprclear.setText("Clear");
        btn_Eprclear.setPreferredSize(new java.awt.Dimension(100, 29));
        btn_Eprclear.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                btn_EprclearMouseClicked(evt);
            }
        });
        btn_Eprclear.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                btn_EprclearKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel6.add(btn_Eprclear, gridBagConstraints);

        btn_recover.setBackground(new java.awt.Color(185, 197, 31));
        btn_recover.setText("Update");
        btn_recover.setPreferredSize(new java.awt.Dimension(100, 29));
        btn_recover.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                btn_recoverMouseClicked(evt);
            }
        });
        btn_recover.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                btn_recoverKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel6.add(btn_recover, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        jPanel5.add(jPanel6, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel5.setText("Enter Password :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 2, 0);
        jPanel5.add(jLabel5, gridBagConstraints);

        currpass_jpf.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        jPanel5.add(currpass_jpf, gridBagConstraints);

        jCheckBox1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jCheckBox1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        jPanel5.add(jCheckBox1, gridBagConstraints);

        jCheckBox2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jCheckBox2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        jPanel5.add(jCheckBox2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel3.add(jPanel5, gridBagConstraints);

        bottonpanel_jpnl.setBackground(new java.awt.Color(242, 242, 255));
        bottonpanel_jpnl.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        bottonpanel_jpnl.setLayout(new java.awt.GridBagLayout());

        jButton1.setBackground(new java.awt.Color(86, 132, 191));
        jButton1.setMnemonic('s');
        jButton1.setText("Close");
        jButton1.setPreferredSize(new java.awt.Dimension(100, 27));
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                jButton1KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 15, 0);
        bottonpanel_jpnl.add(jButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel3.add(bottonpanel_jpnl, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setBounds(0, 0, 441, 453);
    }// </editor-fold>//GEN-END:initComponents

    public static Admin_ChangePassword getInstance() // Method
    {
        if (myInstance == null)
	{
            myInstance = new Admin_ChangePassword();
	}
        return myInstance;
    }
    
    private void updatePassword()
    {
        
        char[] oldpasschar = txt_opassword.getPassword();
        String str_oldpass = new String(oldpasschar);
        Connection con = DatabaseConnection.createConnection();

        {
            try
            { 

                Statement stmt = con.createStatement();
                ResultSet rs=stmt.executeQuery("SELECT PASSWORD FROM tbl_adminreg WHERE BINARY password = '"+str_oldpass+"' ");
                if(rs.next())
                {
                    String sql="UPDATE tbl_adminreg SET PASSWORD=? ";
                    PreparedStatement ps1 = con.prepareStatement(sql);
                    ps1.setString(1, new String(txt_npassword.getPassword()));
                    ps1.executeUpdate();
                    JOptionPane.showMessageDialog(null,"Updated Succesfully.");

                }
                else
                {

                    JOptionPane.showMessageDialog(null,"Passwords does not match.");
                
                }


             }
            catch(Exception e)
            {
                
                JOptionPane.showMessageDialog(null,e);
                
            }
        
        }
        
    }
    
    private void clearPasswordInfo()
    {
        
        txt_opassword.setText("");
        txt_npassword.setText("");
        txt_retnewpassord.setText("");
        
    }
    
    private void updatePassRecoveryInfo()
    {
        
        Connection con = DatabaseConnection.createConnection();
        try
        {
            
            char[] oldpasschar = currpass_jpf.getPassword();
            String str_oldpass = new String(oldpasschar);
            
            Statement stmt = con.createStatement();
            ResultSet rs=stmt.executeQuery("SELECT PASSWORD from tbl_adminreg where BINARY PASSWORD = '"+str_oldpass+"' ");
            if(rs.next())
            {

                if(jCheckBox1.isSelected() == true)
                {
                    
                    if(dc_dob.getDate() == null)
                    {
                        
                        JOptionPane.showMessageDialog(null,"Select a Date.");
                        
                    }
                    else
                    {
                    
                        String sql="UPDATE tbl_adminreg SET DOB=? ";
                        PreparedStatement ps = con.prepareStatement(sql);
                        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd", Locale.getDefault());
                        ps.setString(1, sdf.format(dc_dob.getDate()));
                        ps.executeUpdate();
                        JOptionPane.showMessageDialog(null,"Updated Successfully.");
                    
                    }
                    
                }
                if(jCheckBox2.isSelected() == true)
                {
                    
                     
                    if(cmb_secqn.getSelectedItem().toString().equals("Select"))
                    {
                        
                        JOptionPane.showMessageDialog(null,"Select a Security Question.");
                        
                    }
                    else if(txt_ans.getText().equals(""))
                    {
                        
                        JOptionPane.showMessageDialog(null,"Specify an Answer to the Security Question.");
                        
                    }
                    else
                    {
               
                        String sql="UPDATE tbl_adminreg SET SECURITY=?, ANS=? ";
                        PreparedStatement ps = con.prepareStatement(sql);
                        ps.setString(1, cmb_secqn.getSelectedItem().toString());
                        ps.setString(2, txt_ans.getText());
                        ps.executeUpdate();
                        JOptionPane.showMessageDialog(null,"Updated Successfully.");
                        
                    }
//                    
                }
                

            }
            else
            {

                JOptionPane.showMessageDialog(null,"Incorrect Password.");

            }
            
        }
        catch(Exception e)
        {
            
            JOptionPane.showMessageDialog(null,e);
            
        }
        
    }
    
    private void clearPassRecoveryData()
    {
        
        currpass_jpf.setText("");
        dc_dob.setDate(null);
        cmb_secqn.setSelectedIndex(0);
        txt_ans.setText("");
        
    }
    
    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        // TODO add your handling code here:
        
        myInstance = null;
        
    }//GEN-LAST:event_formInternalFrameClosed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
       
        disablePassRecoveryInfo();
        
    }//GEN-LAST:event_formInternalFrameOpened

    private void disablePassRecoveryInfo()
    {
        
        //currpass_jpf.setEnabled(false);
        dc_dob.setEnabled(false);
        cmb_secqn.setEnabled(false);
        txt_ans.setEnabled(false);
        
    }
    
    private void btn_clearKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btn_clearKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            
            clearPasswordInfo();
            
        }
        
    }//GEN-LAST:event_btn_clearKeyPressed

    private void btn_updateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btn_updateKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            
            updatePassword();
            
        }
        
    }//GEN-LAST:event_btn_updateKeyPressed

    private void btn_EprclearKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btn_EprclearKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            
            clearPassRecoveryData();
            
        }
        
    }//GEN-LAST:event_btn_EprclearKeyPressed

    private void btn_recoverKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btn_recoverKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            
            updatePassRecoveryInfo();
            
        }
        
    }//GEN-LAST:event_btn_recoverKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        this.dispose();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            
            this.dispose();
            
        }
        
    }//GEN-LAST:event_jButton1KeyPressed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        
        if(jCheckBox1.isSelected() == true)
        {
            
            dc_dob.setEnabled(true);
            
        }
        else
        {
            
            dc_dob.setEnabled(false);
            
        }
            
        
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
        
        if(jCheckBox2.isSelected() == true)
        {
            
            cmb_secqn.setEnabled(true);
            txt_ans.setEnabled(true);
            
        }
        else
        {
            
            cmb_secqn.setEnabled(false);
            txt_ans.setEnabled(false);
            
        }
        
        
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void btn_updateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_updateMouseClicked
        // TODO add your handling code here:
        
          updatePassword();
        
    }//GEN-LAST:event_btn_updateMouseClicked

    private void btn_clearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_clearMouseClicked
        // TODO add your handling code here:
        
        clearPasswordInfo();
        
    }//GEN-LAST:event_btn_clearMouseClicked

    private void btn_recoverMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_recoverMouseClicked
        // TODO add your handling code here:
        
        updatePassRecoveryInfo();
        
    }//GEN-LAST:event_btn_recoverMouseClicked

    private void btn_EprclearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_EprclearMouseClicked
        // TODO add your handling code here:
        
         clearPassRecoveryData();
        
    }//GEN-LAST:event_btn_EprclearMouseClicked
    private boolean notValid()
        {   boolean notifier=false;
        
            if(txt_opassword.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null,"Please enter Old Password");
                txt_opassword.requestFocus(); 
                notifier=true;
            }
            else if(txt_npassword.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null,"Please enter New Password");
                txt_npassword.requestFocus(); 
                notifier=true;
            }
            else if(txt_retnewpassord.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null,"Please retype New Password");
                txt_retnewpassord.requestFocus(); 
                notifier=true;
            }
            
            else if(!(txt_npassword.getText().equals(txt_retnewpassord.getText())))
            {
                JOptionPane.showMessageDialog(null,"Password dont not match");
                txt_retnewpassord.requestFocus(); 
                notifier=true;
            }
            
            return notifier;
        }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bottonpanel_jpnl;
    private javax.swing.JButton btn_Eprclear;
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_recover;
    private javax.swing.JButton btn_update;
    private javax.swing.JComboBox cmb_secqn;
    private javax.swing.JPasswordField currpass_jpf;
    private com.toedter.calendar.JDateChooser dc_dob;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JTextField txt_ans;
    private javax.swing.JPasswordField txt_npassword;
    private javax.swing.JPasswordField txt_opassword;
    private javax.swing.JPasswordField txt_retnewpassord;
    // End of variables declaration//GEN-END:variables
}
