package DSST007_1_CUS13.pll;

import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author praveen
 */
public class Customer_Registration_Edit extends javax.swing.JInternalFrame {

    private static Customer_Registration_Edit myInstance;
    
    public Customer_Registration_Edit() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        state_jcb = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        pincode_jtf = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        country_jcb = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        city_jtf = new javax.swing.JTextField();
        address1_jtf = new javax.swing.JTextField();
        address2_jtf = new javax.swing.JTextField();
        district_jtf = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        phone1_jtf = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        phone2_jtf = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        fax_jtf = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        email_jtf = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        name_jtf = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        regdate_jdc = new com.toedter.calendar.JDateChooser();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        cst_jtf = new javax.swing.JTextField();
        tin_jtf = new javax.swing.JTextField();
        gstin_jtf = new javax.swing.JTextField();
        pan_jtf = new javax.swing.JTextField();
        name_jcb = new javax.swing.JComboBox();
        jButton4 = new javax.swing.JButton();
        bankdet_jpnl = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        bankname_jtf = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        accname_jtf = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        bankloc_jtf = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        ifsc_jtf = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        accno_jtf = new javax.swing.JTextField();
        searchbyid_jchkbx = new javax.swing.JCheckBox();
        searchbyname_jchkbx = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        setClosable(true);
        setTitle("View/Edit > Customer");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/DSST007_1_CUS13/InstabizTrader Logo Final 35x35.png"))); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jPanel1.setBackground(new java.awt.Color(242, 242, 255));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("Customer Name :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 7, 0, 0);
        jPanel1.add(jLabel2, gridBagConstraints);

        jPanel3.setBackground(new java.awt.Color(242, 242, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel9.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel9.setText("Address Line 2 :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 2);
        jPanel3.add(jLabel9, gridBagConstraints);

        jLabel11.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel11.setText("District :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel3.add(jLabel11, gridBagConstraints);

        state_jcb.setEditable(true);
        state_jcb.setPreferredSize(new java.awt.Dimension(200, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanel3.add(state_jcb, gridBagConstraints);

        jLabel8.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel8.setText("Address Line 1 :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 2);
        jPanel3.add(jLabel8, gridBagConstraints);

        jLabel10.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel10.setText("City :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel3.add(jLabel10, gridBagConstraints);

        pincode_jtf.setPreferredSize(new java.awt.Dimension(150, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanel3.add(pincode_jtf, gridBagConstraints);

        jLabel12.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel12.setText("State :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel3.add(jLabel12, gridBagConstraints);

        country_jcb.setEditable(true);
        country_jcb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Afghanistan", "Albania", "Algeria", "Andorra", "Angola", "Antigua and Barbuda", "Argentina", "Armenia", "Aruba", "Australia", "Austria", "Azerbaijan", "Bahamas, The", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bhutan", "Bolivia", "Bosnia and Herzegovina", "Botswana", "Brazil", "Brunei ", "Bulgaria", "Burkina Faso", "Burma", "Burundi", "Cambodia", "Cameroon", "Canada", "Cape Verde", "Central African Republic", "Chad", "Chile", "China", "Colombia", "Comoros", "Congo, Democratic Republic of the", "Congo, Republic of the", "Costa Rica", "Cote d'Ivoire", "Croatia", "Cuba", "Curacao", "Cyprus", "Czech Republic", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "East Timor (see Timor-Leste)", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Fiji", "Finland", "France", "Gabon", "Gambia, The", "Georgia", "Germany", "Ghana", "Greece", "Grenada", "Guatemala", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Holy See", "Honduras", "Hong Kong", "Hungary", "Iceland", "India", "Indonesia", "Iran", "Iraq", "Ireland", "Israel", "Italy", "Jamaica", "Japan", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Korea, North", "Korea, South", "Kosovo", "Kuwait", "Kyrgyzstan", "Laos", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Macau", "Macedonia", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Mauritania", "Mauritius", "Mexico", "Micronesia", "Moldova", "Monaco", "Mongolia", "Montenegro", "Morocco", "Mozambique", "Namibia", "Nauru", "Nepal", "Netherlands", "Netherlands Antilles", "New Zealand", "Nicaragua", "Niger", "Nigeria", "North Korea", "Norway", "Oman", "Pakistan", "Palau", "Palestinian Territories", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Poland", "Portugal", "Qatar", "Romania", "Russia", "Rwanda", "Saint Kitts and Nevis", "Saint Lucia", "Saint Vincent and the Grenadines", "Samoa ", "San Marino", "Sao Tome and Principe", "Saudi Arabia", "Senegal", "Serbia", "Seychelles", "Sierra Leone", "Singapore", "Sint Maarten", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "South Korea", "South Sudan", "Spain ", "Sri Lanka", "Sudan", "Suriname", "Swaziland ", "Sweden", "Switzerland", "Syria", "Taiwan", "Tajikistan", "Tanzania", "Thailand ", "Timor-Leste", "Togo", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Turkmenistan", "Tuvalu", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "Uruguay", "Uzbekistan", "Vanuatu", "Venezuela", "Vietnam", "Yemen", "Zambia", "Zimbabwe" }));
        country_jcb.setPreferredSize(new java.awt.Dimension(200, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanel3.add(country_jcb, gridBagConstraints);

        jLabel13.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel13.setText("Country :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel3.add(jLabel13, gridBagConstraints);

        city_jtf.setPreferredSize(new java.awt.Dimension(200, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanel3.add(city_jtf, gridBagConstraints);

        address1_jtf.setPreferredSize(new java.awt.Dimension(200, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanel3.add(address1_jtf, gridBagConstraints);

        address2_jtf.setPreferredSize(new java.awt.Dimension(200, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanel3.add(address2_jtf, gridBagConstraints);

        district_jtf.setPreferredSize(new java.awt.Dimension(200, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanel3.add(district_jtf, gridBagConstraints);

        jLabel14.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel14.setText("Pincode :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel3.add(jLabel14, gridBagConstraints);

        jLabel7.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel7.setText("Phone 1 :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel3.add(jLabel7, gridBagConstraints);

        phone1_jtf.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel3.add(phone1_jtf, gridBagConstraints);

        jLabel15.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel15.setText("Phone 2 :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel3.add(jLabel15, gridBagConstraints);

        phone2_jtf.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel3.add(phone2_jtf, gridBagConstraints);

        jLabel16.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel16.setText("FAX :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel3.add(jLabel16, gridBagConstraints);

        fax_jtf.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel3.add(fax_jtf, gridBagConstraints);

        jLabel17.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel17.setText("E-Mail :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel3.add(jLabel17, gridBagConstraints);

        email_jtf.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel3.add(email_jtf, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setText("Name :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 2);
        jPanel3.add(jLabel3, gridBagConstraints);

        name_jtf.setPreferredSize(new java.awt.Dimension(200, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanel3.add(name_jtf, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setText("Reg.Date :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 2);
        jPanel3.add(jLabel1, gridBagConstraints);

        regdate_jdc.setBackground(new java.awt.Color(242, 242, 255));
        regdate_jdc.setDateFormatString("dd-MMM-yyyy");
        regdate_jdc.setPreferredSize(new java.awt.Dimension(140, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);
        jPanel3.add(regdate_jdc, gridBagConstraints);

        jLabel20.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel20.setText("CST :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel3.add(jLabel20, gridBagConstraints);

        jLabel21.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel21.setText("TIN :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel3.add(jLabel21, gridBagConstraints);

        jLabel22.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel22.setText("GSTIN :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel3.add(jLabel22, gridBagConstraints);

        jLabel23.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel23.setText("PAN :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel3.add(jLabel23, gridBagConstraints);

        cst_jtf.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel3.add(cst_jtf, gridBagConstraints);

        tin_jtf.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel3.add(tin_jtf, gridBagConstraints);

        gstin_jtf.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel3.add(gstin_jtf, gridBagConstraints);

        pan_jtf.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel3.add(pan_jtf, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel1.add(jPanel3, gridBagConstraints);

        name_jcb.setEditable(true);
        name_jcb.setMaximumRowCount(10);
        name_jcb.setPreferredSize(new java.awt.Dimension(250, 25));
        name_jcb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                name_jcbActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel1.add(name_jcb, gridBagConstraints);

        jButton4.setBackground(new java.awt.Color(185, 197, 31));
        jButton4.setText("Show Detials");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton4MousePressed(evt);
            }
        });
        jButton4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton4KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel1.add(jButton4, gridBagConstraints);

        bankdet_jpnl.setBackground(new java.awt.Color(242, 242, 255));
        bankdet_jpnl.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        bankdet_jpnl.setLayout(new java.awt.GridBagLayout());

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setText("Bank Name :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 2);
        bankdet_jpnl.add(jLabel4, gridBagConstraints);

        bankname_jtf.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        bankdet_jpnl.add(bankname_jtf, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel5.setText("Acc Name :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 2);
        bankdet_jpnl.add(jLabel5, gridBagConstraints);

        accname_jtf.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        bankdet_jpnl.add(accname_jtf, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel6.setText("Branch/Loc :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 2);
        bankdet_jpnl.add(jLabel6, gridBagConstraints);

        bankloc_jtf.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        bankdet_jpnl.add(bankloc_jtf, gridBagConstraints);

        jLabel18.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel18.setText("IFSC :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 2);
        bankdet_jpnl.add(jLabel18, gridBagConstraints);

        ifsc_jtf.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        bankdet_jpnl.add(ifsc_jtf, gridBagConstraints);

        jLabel19.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel19.setText("Acc No :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 1, 2);
        bankdet_jpnl.add(jLabel19, gridBagConstraints);

        accno_jtf.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 1, 2);
        bankdet_jpnl.add(accno_jtf, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel1.add(bankdet_jpnl, gridBagConstraints);

        searchbyid_jchkbx.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        searchbyid_jchkbx.setText("By ID");
        searchbyid_jchkbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbyid_jchkbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 10);
        jPanel1.add(searchbyid_jchkbx, gridBagConstraints);

        searchbyname_jchkbx.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        searchbyname_jchkbx.setText("By Name");
        searchbyname_jchkbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbyname_jchkbxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);
        jPanel1.add(searchbyname_jchkbx, gridBagConstraints);

        jPanel2.setBackground(new java.awt.Color(242, 242, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jButton3.setBackground(new java.awt.Color(86, 132, 191));
        jButton3.setText("Close");
        jButton3.setPreferredSize(new java.awt.Dimension(100, 27));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 15, 0);
        jPanel2.add(jButton3, gridBagConstraints);

        jButton1.setBackground(new java.awt.Color(185, 197, 31));
        jButton1.setText("Update");
        jButton1.setPreferredSize(new java.awt.Dimension(100, 27));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton1MousePressed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 15, 0);
        jPanel2.add(jButton1, gridBagConstraints);

        jButton2.setBackground(new java.awt.Color(185, 197, 31));
        jButton2.setText("Edit");
        jButton2.setPreferredSize(new java.awt.Dimension(100, 27));
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton2MousePressed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton2KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 15, 0);
        jPanel2.add(jButton2, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setBounds(0, 0, 605, 586);
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:

        Dimension desktopSize = NewMDIApplication.desktopbg_jlbl.getSize();
        Dimension jInternalFrameSize = this.getSize();
        //this.setLocation((desktopSize.width - jInternalFrameSize.width)/2,(desktopSize.height- jInternalFrameSize.height)/2);
        this.setLocation((desktopSize.width - jInternalFrameSize.width)/2,20);
        //----------------------------

        Date date = new Date();
        regdate_jdc.setDate(date);

        ButtonGroup bg = new ButtonGroup();
        bg.add(searchbyid_jchkbx);
        bg.add(searchbyname_jchkbx);

        AutoCompleteDecorator.decorate(name_jcb);
        cusname_jcb_Populate();

        getStates();
        AutoCompleteDecorator.decorate(state_jcb);

        //getCountries();
        AutoCompleteDecorator.decorate(country_jcb);

        disableAll();
        
    }//GEN-LAST:event_formInternalFrameOpened

     public static Customer_Registration_Edit getInstance() // Method
    {
        if (myInstance == null)
	{
            myInstance = new Customer_Registration_Edit();
	}
        return myInstance;
    }
    
    public static void getCusNames()
    {
        
        name_jcb.removeAllItems();
        Connection con = DatabaseConnection.createConnection();
        
        try
        {

            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(" SELECT name,customerid FROM customer_registration ");
            
            while(rs.next())
            {
                
                if(rs.getString("name") != null && !rs.getString("name").equals(""))
                {
                 
                    String cusname = rs.getString("name");
                    String cusid = rs.getString("customerid");
            
                    name_jcb.addItem(cusname+"|"+cusid);
                    
                }
                  
            }    
            name_jcb.addItem("");
            name_jcb.setSelectedItem("");
            
        }
        catch(Exception e)
        {
             
            JOptionPane.showMessageDialog(null, e);
             
        }
        finally
                {
                    
                    if(con!=null)
                    {
                        try {
                            con.close();
                        } catch (SQLException ex) {
                            JOptionPane.showMessageDialog(null, ex);
                        }
                        
                    }
                    
                }
        
    }
    
    public static void getCusIDs()
    {
        
        name_jcb.removeAllItems();
        Connection con = DatabaseConnection.createConnection();
        
        try
        {

            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(" SELECT name,customerid FROM customer_registration ");
            
            while(rs.next())
            {
                 
                if(rs.getString("name") != null && !rs.getString("name").equals(""))
                {
                
                    String cusname = rs.getString("name");
                    String cusid = rs.getString("customerid");
            
                    name_jcb.addItem(cusid+"|"+cusname);
                    
                }
                  
            }    
            name_jcb.addItem("");
            name_jcb.setSelectedItem("");
            
        }
        catch(Exception e)
        {
             
            JOptionPane.showMessageDialog(null, e);
             
        }
        finally
                {
                    
                    if(con!=null)
                    {
                        try {
                            con.close();
                        } catch (SQLException ex) {
                            JOptionPane.showMessageDialog(null, ex);
                        }
                        
                    }
                    
                }
        
    }
    
    public static void cusname_jcb_Populate()
    {
        
        searchbyid_jchkbx.setSelected(true);
        
        if(searchbyid_jchkbx.isSelected() == true)
        {
            
            getCusIDs();
            
        }
        
        if(searchbyname_jchkbx.isSelected() == true)
        {
            
            getCusNames();
            
        }
        
    }
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        this.dispose();
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void clearAll()
    {
        name_jtf.setText("");
        address1_jtf.setText("");
        address2_jtf.setText("");
        city_jtf.setText("");
        district_jtf.setText("");
        state_jcb.setSelectedItem("");
        country_jcb.setSelectedItem("");
        pincode_jtf.setText("");
        phone1_jtf.setText("");
        phone2_jtf.setText("");
        fax_jtf.setText("");
        cst_jtf.setText("");
        tin_jtf.setText("");
        gstin_jtf.setText("");
        pan_jtf.setText("");
        email_jtf.setText("");
        ((JTextField)regdate_jdc.getDateEditor().getUiComponent()).setText("");
        bankname_jtf.setText("");
        accname_jtf.setText("");
        bankloc_jtf.setText("");
        ifsc_jtf.setText("");
        accno_jtf.setText("");
    }
    
    private void searchResults()
    {
        
        Connection con = DatabaseConnection.createConnection();
        
        try
        {

            clearAll();
            
            if(name_jcb.getSelectedIndex()==-1 || name_jcb.getSelectedItem()==null )
            {
                
                JOptionPane.showMessageDialog(this,"The Customer ID/Name give is not registered/found.","Error",JOptionPane.ERROR_MESSAGE);
                
            }
            else
            {
             
                SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd",Locale.getDefault());
                SimpleDateFormat sdf2 = new SimpleDateFormat("dd-MM-yyyy",Locale.getDefault());

                String cusname_jcb_Value = ((JTextField)name_jcb.getEditor().getEditorComponent()).getText();

                String customerid = "";
                
                if(name_jcb.getSelectedIndex() != -1 && !name_jcb.getSelectedItem().toString().equals(""))
                {
                    if(searchbyid_jchkbx.isSelected() == true)
                    {

                        customerid = (cusname_jcb_Value.substring(0,cusname_jcb_Value.indexOf("|"))).trim();
                        
                    }
                    if(searchbyname_jchkbx.isSelected() == true)
                    {
                        
                        customerid = (cusname_jcb_Value.substring(cusname_jcb_Value.indexOf("|")+1,cusname_jcb_Value.length())).trim();

                    }
                }
                
                Statement stmt = con.createStatement();
                ResultSet rs = stmt.executeQuery("SELECT *  FROM customer_registration WHERE customerid = '"+customerid+"' ");
                
                while(rs.next())
                {
                    
                    String name_ = rs.getString("name");
                    String address1 = rs.getString("address1");
                    String address2 = rs.getString("address2");
                    String city = rs.getString("city");
                    String district = rs.getString("district");
                    String state = rs.getString("state");
                    String country = rs.getString("country");
                    String pincode = rs.getString("pincode");
                    String phone1 = rs.getString("phone1");
                    String phone2 = rs.getString("phone2");
                    String fax = rs.getString("fax");
                    String email = rs.getString("email");
                    String bankname = rs.getString("bankname");
                    String accname = rs.getString("accname");
                    String branch = rs.getString("branch");
                    String ifsc = rs.getString("ifsc");
                    String accno = rs.getString("accno");
                    String regdatecheck = rs.getString("regdate");
                    String cst = rs.getString("cst");
                    String tin = rs.getString("tin");
                    String gstin = rs.getString("gstin");
                    String pan = rs.getString("pan");
                    
                    Date regdate = null;

                    if (regdatecheck != null) {

                        // JOptionPane.showMessageDialog(null, "not empty");
                        regdate = sdf2.parse(sdf2.format(sdf1.parse(rs.getString("regdate"))));
                        
                    }

                    name_jtf.setText(name_);
                    address1_jtf.setText(address1);
                    address2_jtf.setText(address2);
                    city_jtf.setText(city);
                    district_jtf.setText(district);
                    
                    if (state == null) 
                    {
                        
                        state_jcb.setSelectedItem("");
                        
                    } else 
                    {

                        state_jcb.setSelectedItem(state);

                    }
                    
                    if (country == null) 
                    {
                        
                        country_jcb.setSelectedItem("");
                        
                    } else 
                    {

                        country_jcb.setSelectedItem(country);

                    }
                    
                    pincode_jtf.setText(pincode);
                    phone1_jtf.setText(phone1);
                    phone2_jtf.setText(phone2);
                    fax_jtf.setText(fax);
                    cst_jtf.setText(cst);
                    tin_jtf.setText(tin);
                    gstin_jtf.setText(gstin);
                    pan_jtf.setText(pan);
                    email_jtf.setText(email);
                    
                    if (regdatecheck == null) 
                    {

                        Date date = new Date();
                        regdate_jdc.setDate(date);

                    } else
                    {
                        
                        regdate_jdc.setDate(regdate);
                        
                    }
                    
                    bankname_jtf.setText(bankname);
                    accname_jtf.setText(accname);
                    bankloc_jtf.setText(branch);
                    ifsc_jtf.setText(ifsc);
                    accno_jtf.setText(accno);
                    
                }
            
            }
            
        }
        catch(Exception e)
        {
            
            JOptionPane.showMessageDialog(null,e);
            
        }
        finally
        {

            if(con!=null)
            {
                try {
                    con.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }

            }

        }
        
    }
    
    private void updateData()
    {
        
    if(name_jcb.getSelectedIndex()==-1)
    {
        
        JOptionPane.showMessageDialog(this,"The Customer you selected is not registered.","Error",JOptionPane.ERROR_MESSAGE);
        
    }
    else if(name_jtf.getText().equals(""))
    {
        
        JOptionPane.showMessageDialog(this,"Name field cannot be empty","Error",JOptionPane.ERROR_MESSAGE);
        
    }
    else if(((JTextField)regdate_jdc.getDateEditor().getUiComponent()).getText().equals(""))
    {
        
        JOptionPane.showMessageDialog(this,"Select a Date.","Error",JOptionPane.ERROR_MESSAGE);
        
    }
    else
    {
        boolean error = false;
        boolean status = false;
        Connection con = DatabaseConnection.createConnection();
        
        try
        {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd",Locale.getDefault());

            String cusname_jcb_Value = ((JTextField)name_jcb.getEditor().getEditorComponent()).getText();

            String customerid = "";

            if(name_jcb.getSelectedIndex() != -1 && !name_jcb.getSelectedItem().toString().equals(""))
            {
                if(searchbyid_jchkbx.isSelected() == true)
                {

                    customerid = (cusname_jcb_Value.substring(0,cusname_jcb_Value.indexOf("|"))).trim();

                }
                if(searchbyname_jchkbx.isSelected() == true)
                {

                    customerid = (cusname_jcb_Value.substring(cusname_jcb_Value.indexOf("|")+1,cusname_jcb_Value.length())).trim();

                }
            }
            
            //System.out.println("cusid: "+customerid);
            
            String sql1="UPDATE customer_registration SET name=?,address1=?,address2=?,city=?,district=?,state=?,country=?,pincode=?,regdate=?,phone2=?,phone1=?,fax=?,email=?,bankname=?,accname=?,branch=?,ifsc=?,accno=?,cst=?,tin=?,gstin=?,pan=? WHERE customerid='"+customerid+"' ";
            PreparedStatement stmt1 = con.prepareStatement(sql1);
            
            String name = name_jtf.getText();
            stmt1.setString(1,name);
            
            String address1 = address1_jtf.getText();
            stmt1.setString(2, address1);
            
            String address2 = address2_jtf.getText();
            stmt1.setString(3, address2);
            
            String city = city_jtf.getText();
            stmt1.setString(4, city);
            
            String district = district_jtf.getText();
            stmt1.setString(5, district);
            
            String state = state_jcb.getSelectedItem().toString();
            stmt1.setString(6, state);
            
            String country = country_jcb.getSelectedItem().toString();
            stmt1.setString(7, country);
            
            String pincode = pincode_jtf.getText();
            stmt1.setString(8, pincode);

            String regdate = sdf.format(regdate_jdc.getDate());
            stmt1.setString(9, regdate);
            
            String phone2 = phone2_jtf.getText();
            stmt1.setString(10, phone2);
            
            String phone1 = phone1_jtf.getText();
            stmt1.setString(11, phone1);
            
            String fax = fax_jtf.getText();
            stmt1.setString(12, fax);
            
            String email = email_jtf.getText();
            stmt1.setString(13, email);
            
            String bankname = bankname_jtf.getText();
            stmt1.setString(14, bankname);
            
            String accname = accname_jtf.getText();
            stmt1.setString(15, accname);
            
            String branch = bankloc_jtf.getText();
            stmt1.setString(16, branch);
            
            String ifsc = ifsc_jtf.getText();
            stmt1.setString(17, ifsc);
            
            String accno = accno_jtf.getText();
            stmt1.setString(18, accno);
            
            String cst = cst_jtf.getText();
            stmt1.setString(19, cst);
            
            String tin = tin_jtf.getText();
            stmt1.setString(20, tin);
            
            String gstin = gstin_jtf.getText();
            stmt1.setString(21, gstin);
            
            String pan = pan_jtf.getText();
            stmt1.setString(22, pan);
            
            stmt1.executeUpdate();
            
//            String sql2="UPDATE billing SET customer=? WHERE customer_id='"+customerid+"' ";
//            PreparedStatement stmt2 = con.prepareStatement(sql2);
//            stmt2.setString(1,name);
//            stmt2.executeUpdate();
//            
//            String sql3="UPDATE sales_returns SET customer=? WHERE customerid='"+customerid+"' ";
//            PreparedStatement stmt3 = con.prepareStatement(sql3);
//            stmt3.setString(1,name);
//            stmt3.executeUpdate();
//            
//            String sql4="UPDATE delivery_note SET customer=? WHERE customerid='"+customerid+"' ";
//            PreparedStatement stmt4 = con.prepareStatement(sql4);
//            stmt4.setString(1,name);
//            stmt4.executeUpdate();
            
            status = true;
            
        }
        catch(Exception e)
        {
            
            JOptionPane.showMessageDialog(null, e);
            error = true;
            
        }
        finally
        {

            if(con!=null)
            {
                try {
                    con.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }

            }

        }
        
        if (error==false && status==true)
        {
            
            JOptionPane.showMessageDialog(this,"Operation Successful.","Success",JOptionPane.INFORMATION_MESSAGE);
            
            clearAll();
            disableAll();
            cusname_jcb_Populate();
            
            if(Customer_Registration.name_jcb != null)
            {
                
                Customer_Registration.getCustomerName();
                
            }
            
        }
        
    }
        
    }
    
    private void name_jcbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_name_jcbActionPerformed
        // TODO add your handling code here:
        
        Connection con = DatabaseConnection.createConnection();
        
        try
        {

            name_jtf.setText("");
            address1_jtf.setText("");
            address2_jtf.setText("");
            city_jtf.setText("");
            district_jtf.setText("");
            state_jcb.setSelectedItem("");
            country_jcb.setSelectedItem("");
            pincode_jtf.setText("");
            phone1_jtf.setText("");
            phone2_jtf.setText("");
            fax_jtf.setText("");
            email_jtf.setText("");
            ((JTextField)regdate_jdc.getDateEditor().getUiComponent()).setText("");
            bankname_jtf.setText("");
            accname_jtf.setText("");
            bankloc_jtf.setText("");
            ifsc_jtf.setText("");
            accno_jtf.setText("");
            
            if(name_jcb.getSelectedIndex()!=-1 && name_jcb.getSelectedItem()!=null )
            {
             
                SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd",Locale.getDefault());
                SimpleDateFormat sdf2 = new SimpleDateFormat("dd-MM-yyyy",Locale.getDefault());

                String name = name_jcb.getSelectedItem().toString();
                
                Statement stmt = con.createStatement();
                ResultSet rs = stmt.executeQuery("SELECT *  FROM customer_registration WHERE name = '"+name+"' ");
                
                while(rs.next())
                {
                    
                    String name_ = rs.getString("name");
                    String address1 = rs.getString("address1");
                    String address2 = rs.getString("address2");
                    String city = rs.getString("city");
                    String district = rs.getString("district");
                    String state = rs.getString("state");
                    String country = rs.getString("country");
                    String pincode = rs.getString("pincode");
                    String phone1 = rs.getString("phone1");
                    String phone2 = rs.getString("phone2");
                    String fax = rs.getString("fax");
                    String email = rs.getString("email");
                     
                    String regdatecheck = rs.getString("regdate");
                    Date regdate = null;

                    if (regdatecheck != null) {

                        // JOptionPane.showMessageDialog(null, "not empty");
                        regdate = sdf2.parse(sdf2.format(sdf1.parse(rs.getString("regdate"))));
                    }

                     
                     name_jtf.setText(name_);
                     address1_jtf.setText(address1);
                     address2_jtf.setText(address2);
                     city_jtf.setText(city);
                     district_jtf.setText(district);
                    if (state == null) {
                        state_jcb.setSelectedItem("");
                    } else {

                        state_jcb.setSelectedItem(state);

                    }
                    if (country == null) {
                        country_jcb.setSelectedItem("");
                    } else {

                        country_jcb.setSelectedItem(country);

                    }
                     pincode_jtf.setText(pincode);
                     phone1_jtf.setText(phone1);
                     phone2_jtf.setText(phone2);
                     fax_jtf.setText(fax);
                     email_jtf.setText(email);
                    if (regdatecheck == null) {

                        Date date = new Date();
                        regdate_jdc.setDate(date);

                    } else {
                        regdate_jdc.setDate(regdate);
                    }
                    
                }
            
            }
            
        }
        catch(Exception e)
        {
            
            JOptionPane.showMessageDialog(null,e);
            
        }
        finally
        {

            if(con!=null)
            {
                try {
                    con.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }

            }

        }
        
    }//GEN-LAST:event_name_jcbActionPerformed

    private void searchbyid_jchkbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbyid_jchkbxActionPerformed
        // TODO add your handling code here:
        
        if(searchbyid_jchkbx.isSelected() == true)
        {
            
            getCusIDs();
            
        }
        
    }//GEN-LAST:event_searchbyid_jchkbxActionPerformed

    private void searchbyname_jchkbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbyname_jchkbxActionPerformed
        // TODO add your handling code here:
        
        if(searchbyname_jchkbx.isSelected() == true)
        {
            
            getCusNames();
            
        }
        
    }//GEN-LAST:event_searchbyname_jchkbxActionPerformed

    private void jButton4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton4KeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            
            searchResults();
            
        }
        
    }//GEN-LAST:event_jButton4KeyPressed

    private void jButton4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MousePressed
        // TODO add your handling code here:
        
        searchResults();
        
    }//GEN-LAST:event_jButton4MousePressed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            
               updateData();
            
        }
        
    }//GEN-LAST:event_jButton1KeyPressed

    private void jButton1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MousePressed
        // TODO add your handling code here:
        
           updateData();
        
    }//GEN-LAST:event_jButton1MousePressed

    private void jButton2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            
            enableAll();
            
        }
        
    }//GEN-LAST:event_jButton2KeyPressed

    private void jButton2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MousePressed
        // TODO add your handling code here:
        
        enableAll();
        
    }//GEN-LAST:event_jButton2MousePressed

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        // TODO add your handling code here:
        
        myInstance = null;
        
    }//GEN-LAST:event_formInternalFrameClosed

    
    public static void getStates()
    {
     
        state_jcb.removeAllItems();
        Connection con = DatabaseConnection.createConnection();
        
        try
        {

            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(" SELECT DISTINCT state FROM customer_registration ");
            
            while(rs.next())
            {
                 
                if(rs.getString("state") != null && !rs.getString("state").equals(""))
                {

                    String state = rs.getString("state");
                    state_jcb.addItem(state);

                }
               
                  
            }  
           
            state_jcb.addItem("");
            state_jcb.setSelectedItem("");
             
        }
        catch(Exception e)
        {
             
            JOptionPane.showMessageDialog(null, e);
             
        }
        finally
                {
                    
                    if(con!=null)
                    {
                        try {
                            con.close();
                        } catch (SQLException ex) {
                            JOptionPane.showMessageDialog(null, ex);
                        }
                        
                    }
                    
                }
        
    }
    
    private void disableAll()
    {
        
        name_jtf.setEditable(false);
        address1_jtf.setEditable(false);
        address2_jtf.setEditable(false);
        city_jtf.setEditable(false);
        district_jtf.setEditable(false);
        state_jcb.setEnabled(false);
        country_jcb.setEnabled(false);
        pincode_jtf.setEditable(false);
        phone1_jtf.setEditable(false);
        phone2_jtf.setEditable(false);
        cst_jtf.setEditable(false);
        tin_jtf.setEditable(false);
        gstin_jtf.setEditable(false);
        pan_jtf.setEditable(false);
        fax_jtf.setEditable(false);
        email_jtf.setEditable(false);
        ((JTextField)regdate_jdc.getDateEditor()).setEditable(false);
        bankname_jtf.setEditable(false);
        accname_jtf.setEditable(false);
        bankloc_jtf.setEditable(false);
        ifsc_jtf.setEditable(false);
        accno_jtf.setEditable(false);
        
    }
    
    private void enableAll()
    {
        
        name_jtf.setEditable(true);
        address1_jtf.setEditable(true);
        address2_jtf.setEditable(true);
        city_jtf.setEditable(true);
        district_jtf.setEditable(true);
        state_jcb.setEnabled(true);
        country_jcb.setEnabled(true);
        pincode_jtf.setEditable(true);
        phone1_jtf.setEditable(true);
        phone2_jtf.setEditable(true);
        fax_jtf.setEditable(true);
        cst_jtf.setEditable(true);
        tin_jtf.setEditable(true);
        gstin_jtf.setEditable(true);
        pan_jtf.setEditable(true);
        email_jtf.setEditable(true);
        ((JTextField)regdate_jdc.getDateEditor()).setEditable(true);
        bankname_jtf.setEditable(true);
        accname_jtf.setEditable(true);
        bankloc_jtf.setEditable(true);
        ifsc_jtf.setEditable(true);
        accno_jtf.setEditable(true);
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField accname_jtf;
    private javax.swing.JTextField accno_jtf;
    private javax.swing.JTextField address1_jtf;
    private javax.swing.JTextField address2_jtf;
    private javax.swing.JPanel bankdet_jpnl;
    private javax.swing.JTextField bankloc_jtf;
    private javax.swing.JTextField bankname_jtf;
    private javax.swing.JTextField city_jtf;
    public static javax.swing.JComboBox country_jcb;
    private javax.swing.JTextField cst_jtf;
    private javax.swing.JTextField district_jtf;
    private javax.swing.JTextField email_jtf;
    private javax.swing.JTextField fax_jtf;
    private javax.swing.JTextField gstin_jtf;
    private javax.swing.JTextField ifsc_jtf;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    public static javax.swing.JComboBox name_jcb;
    private javax.swing.JTextField name_jtf;
    private javax.swing.JTextField pan_jtf;
    private javax.swing.JTextField phone1_jtf;
    private javax.swing.JTextField phone2_jtf;
    private javax.swing.JTextField pincode_jtf;
    private com.toedter.calendar.JDateChooser regdate_jdc;
    public static javax.swing.JCheckBox searchbyid_jchkbx;
    public static javax.swing.JCheckBox searchbyname_jchkbx;
    public static javax.swing.JComboBox state_jcb;
    private javax.swing.JTextField tin_jtf;
    // End of variables declaration//GEN-END:variables
}
